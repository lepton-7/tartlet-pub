Found these reference files:
/users/PDS0325/sachitk26/packages/tart/validation/alignment/outputs/p_salmo/switch_seqs_delta1000-1000/unified.fna
-------------------------------------------------
-------------------------------------------------

Generating index for /users/PDS0325/sachitk26/packages/tart/validation/alignment/outputs/p_salmo/switch_seqs_delta1000-1000/unified.fna
Success
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 490 sample suffixes
Generating random suffixes
QSorting 490 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 472 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 64, merged 216; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 33, merged 29; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 18, merged 24; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 8, merged 12; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 6; iterating...
Avg bucket size: 19.471 (target: 26)
Getting block 1 of 310
Getting block 2 of 310
  Reserving size (27) for bucket 2
Getting block 3 of 310
  Reserving size (27) for bucket 3
  Calculating Z arrays for bucket 2
Getting block 4 of 310
  Reserving size (27) for bucket 1
Getting block 5 of 310
  Reserving size (27) for bucket 4
  Calculating Z arrays for bucket 4
  Calculating Z arrays for bucket 3
  Reserving size (27) for bucket 5
Getting block 6 of 310
  Calculating Z arrays for bucket 1
  Calculating Z arrays for bucket 5
  Entering block accumulator loop for bucket 2:
Getting block 8 of 310
  Entering block accumulator loop for bucket 4:
  Entering block accumulator loop for bucket 5:
Getting block 7 of 310
  Reserving size (27) for bucket 7
  bucket 2: 10%
Getting block 10 of 310
  bucket 2: 20%
  Entering block accumulator loop for bucket 3:
  Calculating Z arrays for bucket 7
  Entering block accumulator loop for bucket 1:
  Reserving size (27) for bucket 6
Getting block 13 of 310
  Entering block accumulator loop for bucket 7:
Getting block 16 of 310
Getting block 17 of 310
  bucket 1: 10%
  Calculating Z arrays for bucket 6
  Reserving size (27) for bucket 8
Getting block 14 of 310
  Reserving size (27) for bucket 10
  bucket 2: 30%
  Reserving size (27) for bucket 16
Getting block 18 of 310
Getting block 19 of 310
  Reserving size (27) for bucket 14
Getting block 23 of 310
  bucket 2: 40%
Getting block 21 of 310
  Reserving size (27) for bucket 13
  Calculating Z arrays for bucket 16
  Reserving size (27) for bucket 23
  Calculating Z arrays for bucket 14
Getting block 27 of 310
  bucket 1: 20%
Getting block 11 of 310
Getting block 25 of 310
  Reserving size (27) for bucket 21
  Calculating Z arrays for bucket 13
Getting block 28 of 310
Getting block 15 of 310
  Entering block accumulator loop for bucket 14:
  Reserving size (27) for bucket 19
  Calculating Z arrays for bucket 21
Getting block 9 of 310
  Reserving size (27) for bucket 25
  Entering block accumulator loop for bucket 16:
  bucket 1: 30%
  Calculating Z arrays for bucket 8
  Reserving size (27) for bucket 9
Getting block 26 of 310
  Entering block accumulator loop for bucket 8:
Getting block 22 of 310
Getting block 20 of 310
  Calculating Z arrays for bucket 9
  bucket 3: 10%
  Reserving size (27) for bucket 17
  Calculating Z arrays for bucket 25
  Reserving size (27) for bucket 20
  Reserving size (27) for bucket 11
  Calculating Z arrays for bucket 10
  Entering block accumulator loop for bucket 13:
Getting block 30 of 310
  bucket 1: 40%
  bucket 5: 10%
  Entering block accumulator loop for bucket 6:
  Calculating Z arrays for bucket 23
  bucket 16: 10%
Getting block 32 of 310
  bucket 3: 20%
  bucket 14: 10%
  bucket 1: 50%
  Reserving size (27) for bucket 32
Getting block 31 of 310
  Entering block accumulator loop for bucket 21:
Getting block 33 of 310
  bucket 5: 20%
  Reserving size (27) for bucket 28
  Reserving size (27) for bucket 18
  bucket 14: 20%
  Reserving size (27) for bucket 27
Getting block 37 of 310
  Calculating Z arrays for bucket 27
  Reserving size (27) for bucket 15
  Reserving size (27) for bucket 22
  bucket 16: 20%
  Calculating Z arrays for bucket 15
  bucket 5: 30%
Getting block 36 of 310
Getting block 35 of 310
  bucket 5: 40%
  Entering block accumulator loop for bucket 25:
Getting block 40 of 310
Getting block 34 of 310
  bucket 16: 30%
  Entering block accumulator loop for bucket 27:
  Calculating Z arrays for bucket 18
  bucket 1: 60%
  Reserving size (27) for bucket 34
  Reserving size (27) for bucket 30
  Calculating Z arrays for bucket 17
  bucket 6: 10%
  Entering block accumulator loop for bucket 23:
Getting block 41 of 310
  bucket 2: 50%
Getting block 39 of 310
  Calculating Z arrays for bucket 32
  Reserving size (27) for bucket 37
  Calculating Z arrays for bucket 22
  Reserving size (27) for bucket 39
  bucket 3: 30%
  Calculating Z arrays for bucket 19
  Entering block accumulator loop for bucket 15:
  Entering block accumulator loop for bucket 32:
  bucket 6: 20%
  Reserving size (27) for bucket 35
  Calculating Z arrays for bucket 30
  bucket 16: 40%
  Reserving size (27) for bucket 40
  Reserving size (27) for bucket 31
  Reserving size (27) for bucket 36
  bucket 13: 10%
Getting block 12 of 310
  Calculating Z arrays for bucket 39
  Calculating Z arrays for bucket 31
  bucket 8: 10%
  Reserving size (27) for bucket 26
  bucket 2: 60%
  Entering block accumulator loop for bucket 10:
  Calculating Z arrays for bucket 40
  Calculating Z arrays for bucket 35
  bucket 6: 30%
  bucket 27: 10%
  Entering block accumulator loop for bucket 40:
  bucket 14: 30%
Getting block 29 of 310
  Entering block accumulator loop for bucket 17:
  bucket 16: 50%
  Entering block accumulator loop for bucket 18:
  Reserving size (27) for bucket 29
  Calculating Z arrays for bucket 37
Getting block 24 of 310
  bucket 6: 40%
  bucket 14: 40%
  Entering block accumulator loop for bucket 35:
Getting block 38 of 310
  Calculating Z arrays for bucket 28
  bucket 16: 60%
  Entering block accumulator loop for bucket 37:
  Calculating Z arrays for bucket 29
  bucket 27: 20%
  Reserving size (27) for bucket 41
  Reserving size (27) for bucket 24
  bucket 5: 50%
  bucket 13: 20%
  Calculating Z arrays for bucket 11
  bucket 8: 20%
  bucket 25: 10%
  Entering block accumulator loop for bucket 9:
  bucket 27: 30%
  bucket 1: 70%
  bucket 15: 10%
  Entering block accumulator loop for bucket 30:
  Calculating Z arrays for bucket 34
  Reserving size (27) for bucket 33
  Entering block accumulator loop for bucket 31:
  bucket 3: 40%
  Entering block accumulator loop for bucket 19:
  Calculating Z arrays for bucket 41
  bucket 2: 70%
  Calculating Z arrays for bucket 20
  Entering block accumulator loop for bucket 28:
  Calculating Z arrays for bucket 24
  Entering block accumulator loop for bucket 29:
  bucket 23: 10%
Getting block 42 of 310
Getting block 44 of 310
  Entering block accumulator loop for bucket 39:
  Entering block accumulator loop for bucket 22:
  Reserving size (27) for bucket 42
  Reserving size (27) for bucket 38
  bucket 5: 60%
  bucket 23: 20%
  Entering block accumulator loop for bucket 41:
  Entering block accumulator loop for bucket 11:
  bucket 25: 20%
  bucket 4: 10%
  bucket 2: 80%
  Calculating Z arrays for bucket 42
  bucket 27: 40%
  Calculating Z arrays for bucket 38
  bucket 16: 70%
  bucket 15: 20%
  bucket 1: 80%
  bucket 30: 10%
  bucket 35: 10%
  bucket 3: 50%
  Reserving size (27) for bucket 12
  bucket 6: 50%
  bucket 18: 10%
  bucket 13: 30%
  bucket 21: 10%
  bucket 31: 10%
  Entering block accumulator loop for bucket 34:
  Entering block accumulator loop for bucket 20:
  Calculating Z arrays for bucket 33
  Entering block accumulator loop for bucket 24:
  bucket 23: 30%
  Entering block accumulator loop for bucket 38:
  Calculating Z arrays for bucket 26
  bucket 14: 50%
Getting block 43 of 310
  Reserving size (27) for bucket 44
  Entering block accumulator loop for bucket 33:
  bucket 25: 30%
  bucket 15: 30%
  bucket 10: 10%
  bucket 5: 70%
  bucket 11: 10%
  bucket 16: 80%
  bucket 18: 20%
  bucket 6: 60%
  bucket 1: 90%
  bucket 17: 10%
  bucket 27: 50%
  bucket 29: 10%
  Calculating Z arrays for bucket 36
  Calculating Z arrays for bucket 44
  bucket 31: 20%
  Entering block accumulator loop for bucket 42:
  Reserving size (27) for bucket 43
  bucket 13: 40%
  bucket 35: 20%
  bucket 28: 10%
  bucket 30: 20%
  Calculating Z arrays for bucket 43
  bucket 6: 70%
  bucket 16: 90%
  bucket 40: 10%
  bucket 15: 40%
  bucket 41: 10%
  bucket 23: 40%
  Calculating Z arrays for bucket 12
  bucket 10: 20%
  bucket 4: 20%
  bucket 5: 80%
  bucket 9: 10%
  Entering block accumulator loop for bucket 36:
  bucket 25: 40%
  bucket 18: 30%
  bucket 1: 100%
  Entering block accumulator loop for bucket 44:
  bucket 2: 90%
  bucket 37: 10%
  bucket 27: 60%
  bucket 17: 20%
  bucket 13: 50%
  bucket 34: 10%
  bucket 7: 10%
  bucket 6: 80%
  bucket 19: 10%
  bucket 29: 20%
  bucket 21: 20%
  Sorting block of length 24 for bucket 1
  bucket 16: 100%
  (Using difference cover)
  bucket 28: 20%
  bucket 15: 50%
  bucket 39: 10%
  bucket 11: 20%
  Entering block accumulator loop for bucket 12:
  bucket 18: 40%
  bucket 40: 20%
  bucket 24: 10%
  bucket 23: 50%
  bucket 8: 30%
  bucket 41: 20%
  bucket 17: 30%
  Entering block accumulator loop for bucket 43:
  Entering block accumulator loop for bucket 26:
  bucket 32: 10%
  bucket 2: 100%
  bucket 6: 90%
  bucket 37: 20%
  bucket 22: 10%
  bucket 5: 90%
  bucket 14: 60%
  Sorting block of length 20 for bucket 16
  bucket 28: 30%
  (Using difference cover)
  bucket 4: 30%
  bucket 10: 30%
  bucket 27: 70%
  bucket 34: 20%
  bucket 30: 30%
  bucket 38: 10%
  Sorting block of length 16 for bucket 2
  bucket 18: 50%
  (Using difference cover)
  bucket 13: 60%
  bucket 15: 60%
  bucket 40: 30%
  bucket 23: 60%
  bucket 9: 20%
  bucket 19: 20%
  bucket 7: 20%
  bucket 33: 10%
  bucket 24: 20%
  bucket 29: 30%
  bucket 41: 30%
  bucket 8: 40%
  bucket 39: 20%
  bucket 28: 40%
  bucket 31: 30%
  bucket 3: 60%
  bucket 25: 50%
  bucket 21: 30%
  bucket 27: 80%
  bucket 10: 40%
  bucket 36: 10%
  bucket 20: 10%
  bucket 37: 30%
  bucket 17: 40%
  bucket 32: 20%
  bucket 23: 70%
  bucket 6: 100%
  bucket 22: 20%
  bucket 13: 70%
  bucket 5: 100%
  bucket 42: 10%
  bucket 38: 20%
  bucket 34: 30%
  Sorting block of length 25 for bucket 6
  bucket 3: 70%
  (Using difference cover)
  bucket 41: 40%
  bucket 24: 30%
  bucket 18: 60%
  bucket 30: 40%
  bucket 14: 70%
  bucket 29: 40%
  bucket 43: 10%
  bucket 4: 40%
  bucket 25: 60%
  bucket 15: 70%
  bucket 32: 30%
  bucket 20: 20%
  bucket 13: 80%
  bucket 19: 30%
  bucket 37: 40%
  bucket 12: 10%
  bucket 9: 30%
  bucket 21: 40%
  bucket 11: 30%
  bucket 39: 30%
  bucket 35: 30%
  bucket 36: 20%
  bucket 17: 50%
  bucket 40: 40%
  bucket 23: 80%
  bucket 10: 50%
  bucket 38: 30%
  bucket 27: 90%
  bucket 7: 30%
  bucket 8: 50%
  bucket 14: 80%
  bucket 24: 40%
  bucket 33: 20%
  bucket 41: 50%
  bucket 3: 80%
  bucket 22: 30%
  bucket 30: 50%
  bucket 25: 70%
  bucket 31: 40%
  bucket 44: 10%
  bucket 28: 50%
  bucket 34: 40%
  bucket 36: 30%
  bucket 9: 40%
  bucket 32: 40%
  bucket 17: 60%
  bucket 11: 40%
  bucket 43: 20%
  bucket 4: 50%
  bucket 29: 50%
  bucket 21: 50%
  bucket 26: 10%
  bucket 37: 50%
  bucket 15: 80%
  bucket 22: 40%
  bucket 23: 90%
  bucket 13: 90%
  bucket 14: 90%
  bucket 41: 60%
  bucket 10: 60%
  bucket 7: 40%
  bucket 8: 60%
  bucket 38: 40%
  bucket 36: 40%
  bucket 9: 50%
  bucket 31: 50%
  bucket 42: 20%
  bucket 39: 40%
  bucket 34: 50%
  bucket 19: 40%
  bucket 3: 90%
  bucket 33: 30%
  bucket 40: 50%
  bucket 27: 100%
  bucket 30: 60%
  bucket 35: 40%
  bucket 28: 60%
  bucket 18: 70%
  bucket 25: 80%
  bucket 14: 100%
  bucket 44: 20%
  Sorting block of length 19 for bucket 5
  bucket 20: 30%
  (Using difference cover)
  bucket 4: 60%
  Sorting block of length 24 for bucket 27
  bucket 23: 100%
  (Using difference cover)
  bucket 17: 70%
  bucket 37: 60%
  bucket 3: 100%
  bucket 13: 100%
  Sorting block of length 26 for bucket 14
  bucket 9: 60%
  bucket 10: 70%
  bucket 21: 60%
  bucket 39: 50%
  bucket 25: 90%
  bucket 15: 90%
  (Using difference cover)
  bucket 19: 50%
  bucket 42: 30%
  bucket 8: 70%
  Sorting block of length 18 for bucket 23
  bucket 30: 70%
  (Using difference cover)
  bucket 22: 50%
  bucket 34: 60%
  bucket 43: 30%
  bucket 18: 80%
  bucket 28: 70%
  bucket 41: 70%
  bucket 44: 30%
  bucket 26: 20%
  bucket 36: 50%
  Sorting block of length 25 for bucket 13
  bucket 29: 60%
  (Using difference cover)
  bucket 24: 50%
  bucket 35: 50%
  Sorting block of length 26 for bucket 3
  (Using difference cover)
  bucket 17: 80%
  bucket 33: 40%
  bucket 38: 50%
  bucket 20: 40%
  bucket 4: 70%
  bucket 11: 50%
  bucket 37: 70%
  bucket 10: 80%
  bucket 32: 50%
  bucket 25: 100%
  bucket 12: 20%
  bucket 7: 50%
  bucket 40: 60%
  bucket 18: 90%
  bucket 30: 80%
  bucket 34: 70%
  Sorting block of length 26 for bucket 25
  (Using difference cover)
  bucket 9: 70%
  bucket 19: 60%
  bucket 36: 60%
  bucket 10: 90%
  bucket 26: 30%
  bucket 39: 60%
  bucket 21: 70%
  bucket 35: 60%
  bucket 43: 40%
  bucket 18: 100%
  bucket 33: 50%
  bucket 28: 80%
  Sorting block of length 16 for bucket 18
  (Using difference cover)
  bucket 34: 80%
  bucket 17: 90%
  bucket 8: 80%
  bucket 37: 80%
  bucket 15: 100%
  bucket 41: 80%
  bucket 40: 70%
  Sorting block time: 00:00:00
Returning block of 25 for bucket 1
  bucket 35: 70%
  bucket 12: 30%
  bucket 11: 60%
  bucket 4: 80%
  bucket 39: 70%
  bucket 31: 60%
  bucket 7: 60%
  bucket 44: 40%
  bucket 29: 70%
  bucket 38: 60%
  bucket 36: 70%
  bucket 33: 60%
  bucket 17: 100%
  bucket 22: 60%
  bucket 34: 90%
  bucket 42: 40%
  Sorting block of length 13 for bucket 15
  (Using difference cover)
  bucket 19: 70%
  bucket 41: 90%
  bucket 21: 80%
  bucket 32: 60%
  bucket 28: 90%
  bucket 9: 80%
  bucket 40: 80%
  bucket 29: 80%
  bucket 20: 50%
  bucket 30: 90%
  bucket 8: 90%
  bucket 33: 70%
  bucket 39: 80%
  bucket 12: 40%
  bucket 41: 100%
  Sorting block of length 25 for bucket 17
  (Using difference cover)
  bucket 26: 40%
  bucket 34: 100%
  bucket 19: 80%
  bucket 4: 90%
  bucket 22: 70%
  bucket 44: 50%
  bucket 9: 90%
  Sorting block of length 26 for bucket 34
  (Using difference cover)
  bucket 40: 90%
  bucket 35: 80%
  bucket 20: 60%
  bucket 36: 80%
  bucket 4: 100%
  bucket 37: 90%
  bucket 28: 100%
  Sorting block time: 00:00:00
  bucket 24: 60%
  bucket 7: 70%
  Sorting block of length 23 for bucket 28
  bucket 29: 90%
  (Using difference cover)
  bucket 33: 80%
  Sorting block of length 21 for bucket 41
  (Using difference cover)
  bucket 39: 90%
  bucket 22: 80%
  bucket 29: 100%
  bucket 42: 50%
  bucket 24: 70%
  bucket 37: 100%
  bucket 40: 100%
  bucket 43: 50%
  bucket 33: 90%
  bucket 35: 90%
  bucket 31: 70%
  Sorting block of length 16 for bucket 4
  bucket 9: 100%
  Sorting block of length 21 for bucket 29
  (Using difference cover)
  (Using difference cover)
  bucket 19: 90%
  bucket 24: 80%
  bucket 8: 100%
  bucket 44: 60%
  bucket 32: 70%
  Sorting block of length 24 for bucket 9
Returning block of 17 for bucket 2
  bucket 20: 70%
  bucket 31: 80%
  bucket 38: 70%
  bucket 10: 100%
  bucket 19: 100%
  bucket 24: 90%
  (Using difference cover)
  bucket 32: 80%
  bucket 44: 70%
  Sorting block of length 24 for bucket 19
  (Using difference cover)
  bucket 24: 100%
  Sorting block of length 18 for bucket 8
  bucket 22: 90%
  (Using difference cover)
  Sorting block of length 26 for bucket 37
  Sorting block of length 26 for bucket 40
  (Using difference cover)
  bucket 7: 80%
  bucket 33: 100%
  bucket 38: 80%
  (Using difference cover)
  bucket 22: 100%
  Sorting block of length 11 for bucket 24
  (Using difference cover)
  bucket 32: 90%
  bucket 36: 90%
  bucket 20: 80%
  bucket 12: 50%
  bucket 30: 100%
  Sorting block of length 8 for bucket 22
  (Using difference cover)
Getting block 45 of 310
  Reserving size (27) for bucket 45
  bucket 21: 90%
  bucket 43: 60%
  bucket 44: 80%
  bucket 11: 70%
  bucket 7: 90%
  bucket 38: 90%
  Sorting block of length 17 for bucket 30
  bucket 39: 100%
  Sorting block of length 19 for bucket 39
  bucket 36: 100%
  (Using difference cover)
  (Using difference cover)
  bucket 20: 90%
  bucket 43: 70%
  Sorting block of length 12 for bucket 33
  (Using difference cover)
  Calculating Z arrays for bucket 45
  bucket 44: 90%
  bucket 11: 80%
  bucket 12: 60%
  bucket 20: 100%
  bucket 43: 80%
  Sorting block of length 25 for bucket 20
  (Using difference cover)
  bucket 26: 50%
  bucket 32: 100%
  Sorting block of length 26 for bucket 10
  (Using difference cover)
  Sorting block of length 16 for bucket 32
  bucket 11: 90%
  (Using difference cover)
  bucket 44: 100%
  bucket 42: 60%
  bucket 38: 100%
  bucket 21: 100%
  bucket 11: 100%
  Entering block accumulator loop for bucket 45:
  bucket 31: 90%
  bucket 35: 100%
  Sorting block of length 17 for bucket 44
  Sorting block of length 26 for bucket 36
  (Using difference cover)
  (Using difference cover)
  bucket 7: 100%
  Sorting block of length 24 for bucket 21
  bucket 43: 90%
  bucket 26: 60%
  bucket 31: 100%
  Sorting block of length 18 for bucket 11
  (Using difference cover)
  (Using difference cover)
  bucket 45: 10%
  Sorting block of length 10 for bucket 7
  bucket 12: 70%
  (Using difference cover)
  Sorting block of length 23 for bucket 31
  (Using difference cover)
  Sorting block of length 17 for bucket 35
  bucket 45: 20%
  (Using difference cover)
  bucket 43: 100%
  bucket 12: 80%
  Sorting block of length 19 for bucket 38
  (Using difference cover)
  Sorting block of length 18 for bucket 43
  bucket 12: 90%
  (Using difference cover)
  bucket 45: 30%
  bucket 42: 70%
  bucket 26: 70%
  bucket 12: 100%
  Sorting block of length 25 for bucket 12
  (Using difference cover)
  bucket 45: 40%
  bucket 26: 80%
  bucket 42: 80%
  bucket 45: 50%
  bucket 42: 90%
  bucket 26: 90%
  bucket 45: 60%
  bucket 26: 100%
  bucket 42: 100%
  Sorting block of length 7 for bucket 26
  bucket 45: 70%
  (Using difference cover)
  Sorting block of length 24 for bucket 42
  (Using difference cover)
  bucket 45: 80%
Getting block 46 of 310
  Reserving size (27) for bucket 46
  Calculating Z arrays for bucket 46
  bucket 45: 90%
  bucket 45: 100%
  Sorting block of length 19 for bucket 45
  (Using difference cover)
  Entering block accumulator loop for bucket 46:
  bucket 46: 10%
  bucket 46: 20%
  bucket 46: 30%
  bucket 46: 40%
  bucket 46: 50%
  bucket 46: 60%
  bucket 46: 70%
  bucket 46: 80%
  bucket 46: 90%
  bucket 46: 100%
  Sorting block of length 12 for bucket 46
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 21 for bucket 16
  Sorting block time: 00:00:00
Returning block of 26 for bucket 6
Getting block 47 of 310
  Reserving size (27) for bucket 47
  Calculating Z arrays for bucket 47
  Entering block accumulator loop for bucket 47:
  bucket 47: 10%
  bucket 47: 20%
  bucket 47: 30%
  bucket 47: 40%
  bucket 47: 50%
  bucket 47: 60%
  bucket 47: 70%
  bucket 47: 80%
  bucket 47: 90%
  bucket 47: 100%
  Sorting block of length 26 for bucket 47
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 19 for bucket 23
Getting block 48 of 310
  Reserving size (27) for bucket 48
  Calculating Z arrays for bucket 48
  Entering block accumulator loop for bucket 48:
  bucket 48: 10%
  bucket 48: 20%
  bucket 48: 30%
  bucket 48: 40%
  bucket 48: 50%
  bucket 48: 60%
  bucket 48: 70%
  bucket 48: 80%
  bucket 48: 90%
  bucket 48: 100%
  Sorting block of length 22 for bucket 48
  (Using difference cover)
Getting block 49 of 310
  Reserving size (27) for bucket 49
  Calculating Z arrays for bucket 49
  Entering block accumulator loop for bucket 49:
  bucket 49: 10%
  bucket 49: 20%
  bucket 49: 30%
  bucket 49: 40%
  bucket 49: 50%
  bucket 49: 60%
  bucket 49: 70%
  bucket 49: 80%
  bucket 49: 90%
  bucket 49: 100%
  Sorting block of length 16 for bucket 49
  (Using difference cover)
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 20 for bucket 5
Returning block of 27 for bucket 3
  Sorting block time: 00:00:00
Returning block of 25 for bucket 27
  Sorting block time: 00:00:00
Returning block of 27 for bucket 14
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 14 for bucket 15
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 26 for bucket 17
Returning block of 26 for bucket 13
Returning block of 17 for bucket 18
Returning block of 27 for bucket 25
Getting block 50 of 310
  Reserving size (27) for bucket 50
  Calculating Z arrays for bucket 50
  Entering block accumulator loop for bucket 50:
  bucket 50: 10%
  bucket 50: 20%
  bucket 50: 30%
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 22 for bucket 41
Returning block of 27 for bucket 34
  bucket 50: 40%
  bucket 50: 50%
  bucket 50: 60%
  bucket 50: 70%
  bucket 50: 80%
  bucket 50: 90%
  bucket 50: 100%
  Sorting block of length 17 for bucket 50
  (Using difference cover)
Getting block 51 of 310
  Reserving size (27) for bucket 51
  Calculating Z arrays for bucket 51
  Entering block accumulator loop for bucket 51:
  bucket 51: 10%
  bucket 51: 20%
  bucket 51: 30%
  bucket 51: 40%
  bucket 51: 50%
  bucket 51: 60%
  bucket 51: 70%
  Sorting block time: 00:00:00
Returning block of 24 for bucket 28
  bucket 51: 80%
  bucket 51: 90%
  bucket 51: 100%
  Sorting block of length 16 for bucket 51
  (Using difference cover)
Getting block 52 of 310
  Reserving size (27) for bucket 52
  Calculating Z arrays for bucket 52
  Entering block accumulator loop for bucket 52:
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 9 for bucket 22
Returning block of 22 for bucket 29
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  bucket 52: 10%
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 11 for bucket 7
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 27 for bucket 37
Returning block of 13 for bucket 46
Returning block of 13 for bucket 33
Returning block of 25 for bucket 9
Returning block of 19 for bucket 8
Returning block of 20 for bucket 45
Returning block of 8 for bucket 26
  bucket 52: 20%
Returning block of 25 for bucket 19
  bucket 52: 30%
  bucket 52: 40%
  bucket 52: 50%
  bucket 52: 60%
  bucket 52: 70%
  bucket 52: 80%
  bucket 52: 90%
  bucket 52: 100%
  Sorting block of length 21 for bucket 52
  (Using difference cover)
Getting block 53 of 310
  Reserving size (27) for bucket 53
  Calculating Z arrays for bucket 53
  Sorting block time: 00:00:00
Returning block of 17 for bucket 4
  Entering block accumulator loop for bucket 53:
  bucket 53: 10%
  bucket 53: 20%
  bucket 53: 30%
  bucket 53: 40%
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 27 for bucket 36
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 18 for bucket 35
  bucket 53: 50%
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 20 for bucket 39
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 25 for bucket 42
Returning block of 25 for bucket 21
  Sorting block time: 00:00:00
Returning block of 20 for bucket 38
Returning block of 27 for bucket 10
Returning block of 27 for bucket 40
Returning block of 19 for bucket 43
Returning block of 12 for bucket 24
Returning block of 18 for bucket 30
Returning block of 26 for bucket 20
Returning block of 19 for bucket 11
  bucket 53: 60%
  bucket 53: 70%
  bucket 53: 80%
  bucket 53: 90%
Getting block 54 of 310
  Reserving size (27) for bucket 54
  Calculating Z arrays for bucket 54
  bucket 53: 100%
  Sorting block of length 8 for bucket 53
  (Using difference cover)
  Entering block accumulator loop for bucket 54:
  bucket 54: 10%
  bucket 54: 20%
  bucket 54: 30%
  bucket 54: 40%
  bucket 54: 50%
  bucket 54: 60%
  bucket 54: 70%
  bucket 54: 80%
  bucket 54: 90%
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 23 for bucket 48
  Sorting block time: 00:00:00
Returning block of 26 for bucket 12
  Sorting block time: 00:00:00
Returning block of 17 for bucket 32
Returning block of 24 for bucket 31
Returning block of 18 for bucket 44
  bucket 54: 100%
Returning block of 27 for bucket 47
  Sorting block of length 25 for bucket 54
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 17 for bucket 49
Getting block 55 of 310
  Reserving size (27) for bucket 55
  Calculating Z arrays for bucket 55
  Entering block accumulator loop for bucket 55:
  bucket 55: 10%
  bucket 55: 20%
  bucket 55: 30%
  bucket 55: 40%
  bucket 55: 50%
  bucket 55: 60%
  bucket 55: 70%
  bucket 55: 80%
  bucket 55: 90%
  bucket 55: 100%
  Sorting block of length 24 for bucket 55
  (Using difference cover)
Getting block 56 of 310
  Reserving size (27) for bucket 56
  Calculating Z arrays for bucket 56
  Entering block accumulator loop for bucket 56:
  bucket 56: 10%
  bucket 56: 20%
  bucket 56: 30%
  bucket 56: 40%
  bucket 56: 50%
  bucket 56: 60%
  bucket 56: 70%
  bucket 56: 80%
  bucket 56: 90%
  Sorting block time: 00:00:00
Returning block of 22 for bucket 52
  bucket 56: 100%
  Sorting block time: 00:00:00
  Sorting block of length 25 for bucket 56
  (Using difference cover)
Returning block of 18 for bucket 50
Getting block 57 of 310
  Reserving size (27) for bucket 57
  Calculating Z arrays for bucket 57
  Sorting block time: 00:00:00
Returning block of 17 for bucket 51
  Entering block accumulator loop for bucket 57:
  bucket 57: 10%
  bucket 57: 20%
  bucket 57: 30%
  bucket 57: 40%
  bucket 57: 50%
  bucket 57: 60%
  bucket 57: 70%
  bucket 57: 80%
  bucket 57: 90%
  bucket 57: 100%
  Sorting block of length 26 for bucket 57
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26 for bucket 54
  Sorting block time: 00:00:00
Returning block of 9 for bucket 53
Getting block 58 of 310
  Reserving size (27) for bucket 58
  Calculating Z arrays for bucket 58
  Entering block accumulator loop for bucket 58:
  bucket 58: 10%
  bucket 58: 20%
  bucket 58: 30%
  bucket 58: 40%
  bucket 58: 50%
  bucket 58: 60%
  bucket 58: 70%
  bucket 58: 80%
  bucket 58: 90%
  bucket 58: 100%
  Sorting block of length 20 for bucket 58
  (Using difference cover)
Getting block 59 of 310
  Reserving size (27) for bucket 59
  Calculating Z arrays for bucket 59
  Entering block accumulator loop for bucket 59:
  bucket 59: 10%
  bucket 59: 20%
  bucket 59: 30%
  Sorting block time: 00:00:00
Returning block of 26 for bucket 56
  Sorting block time: 00:00:00
  bucket 59: 40%
Returning block of 25 for bucket 55
  bucket 59: 50%
  bucket 59: 60%
  bucket 59: 70%
  bucket 59: 80%
  bucket 59: 90%
  bucket 59: 100%
  Sorting block of length 24 for bucket 59
  (Using difference cover)
Getting block 60 of 310
  Reserving size (27) for bucket 60
  Calculating Z arrays for bucket 60
  Entering block accumulator loop for bucket 60:
  Sorting block time: 00:00:00
Returning block of 27 for bucket 57
  bucket 60: 10%
  bucket 60: 20%
  bucket 60: 30%
  bucket 60: 40%
  bucket 60: 50%
  bucket 60: 60%
  bucket 60: 70%
  bucket 60: 80%
  bucket 60: 90%
  bucket 60: 100%
  Sorting block of length 24 for bucket 60
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 21 for bucket 58
Getting block 61 of 310
  Reserving size (27) for bucket 61
  Calculating Z arrays for bucket 61
  Entering block accumulator loop for bucket 61:
  bucket 61: 10%
  bucket 61: 20%
  bucket 61: 30%
  bucket 61: 40%
  bucket 61: 50%
  bucket 61: 60%
  bucket 61: 70%
  bucket 61: 80%
  bucket 61: 90%
  bucket 61: 100%
  Sorting block of length 24 for bucket 61
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 25 for bucket 59
Getting block 62 of 310
  Reserving size (27) for bucket 62
  Calculating Z arrays for bucket 62
  Entering block accumulator loop for bucket 62:
  bucket 62: 10%
  bucket 62: 20%
  bucket 62: 30%
  Sorting block time: 00:00:00
Returning block of 25 for bucket 60
  bucket 62: 40%
  bucket 62: 50%
  Sorting block time: 00:00:00
Returning block of 25 for bucket 61
  bucket 62: 60%
  bucket 62: 70%
  bucket 62: 80%
  bucket 62: 90%
  bucket 62: 100%
  Sorting block of length 12 for bucket 62
  (Using difference cover)
Getting block 63 of 310
  Reserving size (27) for bucket 63
  Calculating Z arrays for bucket 63
  Entering block accumulator loop for bucket 63:
  bucket 63: 10%
  bucket 63: 20%
  bucket 63: 30%
  bucket 63: 40%
  bucket 63: 50%
  bucket 63: 60%
  bucket 63: 70%
  Sorting block time: 00:00:00
Returning block of 13 for bucket 62
  bucket 63: 80%
  bucket 63: 90%
  bucket 63: 100%
  Sorting block of length 20 for bucket 63
  (Using difference cover)
Getting block 64 of 310
  Reserving size (27) for bucket 64
  Calculating Z arrays for bucket 64
  Entering block accumulator loop for bucket 64:
  bucket 64: 10%
  bucket 64: 20%
  bucket 64: 30%
  bucket 64: 40%
  bucket 64: 50%
  bucket 64: 60%
  Sorting block time: 00:00:00
Returning block of 21 for bucket 63
  bucket 64: 70%
  bucket 64: 80%
  bucket 64: 90%
  bucket 64: 100%
  Sorting block of length 14 for bucket 64
  (Using difference cover)
Getting block 65 of 310
  Reserving size (27) for bucket 65
  Calculating Z arrays for bucket 65
  Entering block accumulator loop for bucket 65:
  bucket 65: 10%
  bucket 65: 20%
  bucket 65: 30%
  bucket 65: 40%
  Sorting block time: 00:00:00
Returning block of 15 for bucket 64
  bucket 65: 50%
Getting block 66 of 310
  Reserving size (27) for bucket 66
  Calculating Z arrays for bucket 66
  bucket 65: 60%
  bucket 65: 70%
  Entering block accumulator loop for bucket 66:
  bucket 65: 80%
  bucket 65: 90%
  bucket 66: 10%
  bucket 65: 100%
  Sorting block of length 14 for bucket 65
  (Using difference cover)
  bucket 66: 20%
  bucket 66: 30%
  bucket 66: 40%
  bucket 66: 50%
  bucket 66: 60%
  bucket 66: 70%
  bucket 66: 80%
  bucket 66: 90%
  bucket 66: 100%
  Sorting block of length 16 for bucket 66
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 15 for bucket 65
Getting block 67 of 310
  Reserving size (27) for bucket 67
  Calculating Z arrays for bucket 67
  Sorting block time: 00:00:00
Returning block of 17 for bucket 66
  Entering block accumulator loop for bucket 67:
  bucket 67: 10%
  bucket 67: 20%
  bucket 67: 30%
  bucket 67: 40%
  bucket 67: 50%
  bucket 67: 60%
  bucket 67: 70%
  bucket 67: 80%
  bucket 67: 90%
  bucket 67: 100%
  Sorting block of length 26 for bucket 67
  (Using difference cover)
Getting block 68 of 310
  Reserving size (27) for bucket 68
  Calculating Z arrays for bucket 68
  Entering block accumulator loop for bucket 68:
  bucket 68: 10%
  bucket 68: 20%
  bucket 68: 30%
  bucket 68: 40%
  bucket 68: 50%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 67
  bucket 68: 60%
  bucket 68: 70%
  bucket 68: 80%
  bucket 68: 90%
  bucket 68: 100%
  Sorting block of length 20 for bucket 68
  (Using difference cover)
Getting block 69 of 310
  Reserving size (27) for bucket 69
  Calculating Z arrays for bucket 69
  Entering block accumulator loop for bucket 69:
  bucket 69: 10%
  bucket 69: 20%
  bucket 69: 30%
  bucket 69: 40%
  bucket 69: 50%
  bucket 69: 60%
  bucket 69: 70%
  Sorting block time: 00:00:00
Returning block of 21 for bucket 68
  bucket 69: 80%
  bucket 69: 90%
  bucket 69: 100%
  Sorting block of length 20 for bucket 69
  (Using difference cover)
Getting block 70 of 310
  Reserving size (27) for bucket 70
  Calculating Z arrays for bucket 70
  Entering block accumulator loop for bucket 70:
  bucket 70: 10%
  bucket 70: 20%
  bucket 70: 30%
  bucket 70: 40%
  bucket 70: 50%
  Sorting block time: 00:00:00
Returning block of 21 for bucket 69
  bucket 70: 60%
  bucket 70: 70%
  bucket 70: 80%
  bucket 70: 90%
  bucket 70: 100%
  Sorting block of length 25 for bucket 70
  (Using difference cover)
Getting block 71 of 310
  Reserving size (27) for bucket 71
  Calculating Z arrays for bucket 71
  Entering block accumulator loop for bucket 71:
  bucket 71: 10%
  bucket 71: 20%
  bucket 71: 30%
  bucket 71: 40%
  bucket 71: 50%
  bucket 71: 60%
  bucket 71: 70%
  bucket 71: 80%
  bucket 71: 90%
  bucket 71: 100%
  Sorting block of length 18 for bucket 71
  (Using difference cover)
Getting block 72 of 310
  Reserving size (27) for bucket 72
  Calculating Z arrays for bucket 72
  Entering block accumulator loop for bucket 72:
  bucket 72: 10%
  Sorting block time: 00:00:00
Returning block of 26 for bucket 70
  bucket 72: 20%
  bucket 72: 30%
  Sorting block time: 00:00:00
Returning block of 19 for bucket 71
  bucket 72: 40%
  bucket 72: 50%
  bucket 72: 60%
  bucket 72: 70%
  bucket 72: 80%
  bucket 72: 90%
  bucket 72: 100%
  Sorting block of length 22 for bucket 72
  (Using difference cover)
Getting block 73 of 310
  Reserving size (27) for bucket 73
  Calculating Z arrays for bucket 73
  Entering block accumulator loop for bucket 73:
  bucket 73: 10%
  bucket 73: 20%
  bucket 73: 30%
  bucket 73: 40%
  bucket 73: 50%
  bucket 73: 60%
  bucket 73: 70%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 72
  bucket 73: 80%
  bucket 73: 90%
  bucket 73: 100%
Getting block 74 of 310
  Reserving size (27) for bucket 74
  Calculating Z arrays for bucket 74
  Sorting block of length 20 for bucket 73
  (Using difference cover)
  Entering block accumulator loop for bucket 74:
  bucket 74: 10%
  bucket 74: 20%
  bucket 74: 30%
  bucket 74: 40%
  bucket 74: 50%
  bucket 74: 60%
  bucket 74: 70%
  bucket 74: 80%
  bucket 74: 90%
  bucket 74: 100%
  Sorting block of length 20 for bucket 74
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 21 for bucket 73
  Sorting block time: 00:00:00
Returning block of 21 for bucket 74
Getting block 75 of 310
  Reserving size (27) for bucket 75
  Calculating Z arrays for bucket 75
  Entering block accumulator loop for bucket 75:
  bucket 75: 10%
  bucket 75: 20%
  bucket 75: 30%
  bucket 75: 40%
  bucket 75: 50%
  bucket 75: 60%
  bucket 75: 70%
  bucket 75: 80%
  bucket 75: 90%
  bucket 75: 100%
  Sorting block of length 16 for bucket 75
  (Using difference cover)
Getting block 76 of 310
  Reserving size (27) for bucket 76
  Calculating Z arrays for bucket 76
  Entering block accumulator loop for bucket 76:
  bucket 76: 10%
  bucket 76: 20%
  Sorting block time: 00:00:00
Returning block of 17 for bucket 75
  bucket 76: 30%
  bucket 76: 40%
  bucket 76: 50%
  bucket 76: 60%
  bucket 76: 70%
  bucket 76: 80%
  bucket 76: 90%
  bucket 76: 100%
  Sorting block of length 16 for bucket 76
  (Using difference cover)
Getting block 77 of 310
  Reserving size (27) for bucket 77
  Calculating Z arrays for bucket 77
  Entering block accumulator loop for bucket 77:
  bucket 77: 10%
  bucket 77: 20%
  Sorting block time: 00:00:00
Returning block of 17 for bucket 76
  bucket 77: 30%
  bucket 77: 40%
  bucket 77: 50%
  bucket 77: 60%
  bucket 77: 70%
  bucket 77: 80%
  bucket 77: 90%
  bucket 77: 100%
  Sorting block of length 25 for bucket 77
  (Using difference cover)
Getting block 78 of 310
  Reserving size (27) for bucket 78
  Calculating Z arrays for bucket 78
  Entering block accumulator loop for bucket 78:
  bucket 78: 10%
  bucket 78: 20%
  bucket 78: 30%
  bucket 78: 40%
  bucket 78: 50%
  bucket 78: 60%
  bucket 78: 70%
  bucket 78: 80%
  Sorting block time: 00:00:00
Returning block of 26 for bucket 77
  bucket 78: 90%
  bucket 78: 100%
  Sorting block of length 8 for bucket 78
  (Using difference cover)
Getting block 79 of 310
  Reserving size (27) for bucket 79
  Calculating Z arrays for bucket 79
  Entering block accumulator loop for bucket 79:
  bucket 79: 10%
  bucket 79: 20%
  bucket 79: 30%
  bucket 79: 40%
  bucket 79: 50%
  Sorting block time: 00:00:00
Returning block of 9 for bucket 78
  bucket 79: 60%
  bucket 79: 70%
  bucket 79: 80%
  bucket 79: 90%
  bucket 79: 100%
  Sorting block of length 26 for bucket 79
  (Using difference cover)
Getting block 80 of 310
  Reserving size (27) for bucket 80
  Calculating Z arrays for bucket 80
  Entering block accumulator loop for bucket 80:
  bucket 80: 10%
  bucket 80: 20%
  bucket 80: 30%
  bucket 80: 40%
  bucket 80: 50%
  bucket 80: 60%
  bucket 80: 70%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 79
  bucket 80: 80%
  bucket 80: 90%
  bucket 80: 100%
  Sorting block of length 22 for bucket 80
  (Using difference cover)
Getting block 81 of 310
  Reserving size (27) for bucket 81
  Calculating Z arrays for bucket 81
  Entering block accumulator loop for bucket 81:
  bucket 81: 10%
  bucket 81: 20%
  bucket 81: 30%
  bucket 81: 40%
  bucket 81: 50%
Getting block 82 of 310
  Reserving size (27) for bucket 82
  Calculating Z arrays for bucket 82
  bucket 81: 60%
  bucket 81: 70%
  Entering block accumulator loop for bucket 82:
  bucket 81: 80%
  bucket 81: 90%
  Sorting block time: 00:00:00
  bucket 82: 10%
Returning block of 23 for bucket 80
  bucket 81: 100%
  Sorting block of length 9 for bucket 81
  bucket 82: 20%
  (Using difference cover)
  bucket 82: 30%
  bucket 82: 40%
  bucket 82: 50%
  bucket 82: 60%
  bucket 82: 70%
  bucket 82: 80%
  bucket 82: 90%
  bucket 82: 100%
  Sorting block of length 25 for bucket 82
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 10 for bucket 81
  Sorting block time: 00:00:00
Returning block of 26 for bucket 82
Getting block 83 of 310
  Reserving size (27) for bucket 83
  Calculating Z arrays for bucket 83
  Entering block accumulator loop for bucket 83:
  bucket 83: 10%
  bucket 83: 20%
  bucket 83: 30%
  bucket 83: 40%
Getting block 84 of 310
  Reserving size (27) for bucket 84
  Calculating Z arrays for bucket 84
  bucket 83: 50%
  bucket 83: 60%
  Entering block accumulator loop for bucket 84:
  bucket 83: 70%
  bucket 83: 80%
  bucket 84: 10%
  bucket 83: 90%
  bucket 84: 20%
  bucket 83: 100%
  Sorting block of length 23 for bucket 83
  (Using difference cover)
  bucket 84: 30%
  bucket 84: 40%
  bucket 84: 50%
  bucket 84: 60%
  bucket 84: 70%
  bucket 84: 80%
  bucket 84: 90%
  bucket 84: 100%
  Sorting block of length 2 for bucket 84
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 24 for bucket 83
  Sorting block time: 00:00:00
Returning block of 3 for bucket 84
Getting block 85 of 310
  Reserving size (27) for bucket 85
  Calculating Z arrays for bucket 85
  Entering block accumulator loop for bucket 85:
  bucket 85: 10%
  bucket 85: 20%
  bucket 85: 30%
  bucket 85: 40%
Getting block 86 of 310
  Reserving size (27) for bucket 86
  Calculating Z arrays for bucket 86
  bucket 85: 50%
  bucket 85: 60%
  bucket 85: 70%
  Entering block accumulator loop for bucket 86:
  bucket 85: 80%
  bucket 86: 10%
  bucket 85: 90%
  bucket 86: 20%
  bucket 85: 100%
  Sorting block of length 31 for bucket 85
  (Using difference cover)
  bucket 86: 30%
  bucket 86: 40%
  bucket 86: 50%
  bucket 86: 60%
  bucket 86: 70%
  bucket 86: 80%
  bucket 86: 90%
  bucket 86: 100%
  Sorting block of length 22 for bucket 86
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 32 for bucket 85
Getting block 87 of 310
  Reserving size (27) for bucket 87
  Calculating Z arrays for bucket 87
  Sorting block time: 00:00:00
Returning block of 23 for bucket 86
  Entering block accumulator loop for bucket 87:
  bucket 87: 10%
  bucket 87: 20%
  bucket 87: 30%
  bucket 87: 40%
  bucket 87: 50%
  bucket 87: 60%
  bucket 87: 70%
  bucket 87: 80%
  bucket 87: 90%
  bucket 87: 100%
  Sorting block of length 22 for bucket 87
  (Using difference cover)
Getting block 88 of 310
  Reserving size (27) for bucket 88
  Calculating Z arrays for bucket 88
  Entering block accumulator loop for bucket 88:
  bucket 88: 10%
  bucket 88: 20%
  bucket 88: 30%
  bucket 88: 40%
  bucket 88: 50%
  bucket 88: 60%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 87
  bucket 88: 70%
  bucket 88: 80%
  bucket 88: 90%
  bucket 88: 100%
  Sorting block of length 26 for bucket 88
  (Using difference cover)
Getting block 89 of 310
  Reserving size (27) for bucket 89
  Calculating Z arrays for bucket 89
  Entering block accumulator loop for bucket 89:
  bucket 89: 10%
  bucket 89: 20%
  bucket 89: 30%
  bucket 89: 40%
  bucket 89: 50%
  bucket 89: 60%
  bucket 89: 70%
  bucket 89: 80%
  bucket 89: 90%
  bucket 89: 100%
  Sorting block of length 23 for bucket 89
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 27 for bucket 88
Getting block 90 of 310
  Reserving size (27) for bucket 90
  Calculating Z arrays for bucket 90
  Entering block accumulator loop for bucket 90:
  Sorting block time: 00:00:00
Returning block of 24 for bucket 89
  bucket 90: 10%
  bucket 90: 20%
  bucket 90: 30%
  bucket 90: 40%
  bucket 90: 50%
  bucket 90: 60%
  bucket 90: 70%
  bucket 90: 80%
  bucket 90: 90%
  bucket 90: 100%
  Sorting block of length 26 for bucket 90
  (Using difference cover)
Getting block 91 of 310
  Reserving size (27) for bucket 91
  Calculating Z arrays for bucket 91
  Entering block accumulator loop for bucket 91:
  bucket 91: 10%
  bucket 91: 20%
  bucket 91: 30%
  bucket 91: 40%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 90
  bucket 91: 50%
Getting block 92 of 310
  Reserving size (27) for bucket 92
  Calculating Z arrays for bucket 92
  bucket 91: 60%
  bucket 91: 70%
  Entering block accumulator loop for bucket 92:
  bucket 91: 80%
  bucket 91: 90%
  bucket 92: 10%
  bucket 91: 100%
  Sorting block of length 20 for bucket 91
  (Using difference cover)
  bucket 92: 20%
  bucket 92: 30%
  bucket 92: 40%
  bucket 92: 50%
  bucket 92: 60%
  bucket 92: 70%
  bucket 92: 80%
  bucket 92: 90%
  bucket 92: 100%
  Sorting block of length 15 for bucket 92
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 21 for bucket 91
  Sorting block time: 00:00:00
Returning block of 16 for bucket 92
Getting block 93 of 310
  Reserving size (27) for bucket 93
  Calculating Z arrays for bucket 93
  Entering block accumulator loop for bucket 93:
  bucket 93: 10%
  bucket 93: 20%
  bucket 93: 30%
  bucket 93: 40%
Getting block 94 of 310
  Reserving size (27) for bucket 94
  Calculating Z arrays for bucket 94
  bucket 93: 50%
  Entering block accumulator loop for bucket 94:
  bucket 93: 60%
  bucket 93: 70%
  bucket 94: 10%
  bucket 93: 80%
  bucket 94: 20%
  bucket 93: 90%
  bucket 94: 30%
  bucket 93: 100%
  Sorting block of length 12 for bucket 93
  (Using difference cover)
  bucket 94: 40%
  bucket 94: 50%
  bucket 94: 60%
  bucket 94: 70%
  bucket 94: 80%
  bucket 94: 90%
  bucket 94: 100%
  Sorting block of length 14 for bucket 94
  (Using difference cover)
Getting block 95 of 310
  Reserving size (27) for bucket 95
  Calculating Z arrays for bucket 95
  Sorting block time: 00:00:00
Returning block of 13 for bucket 93
  Entering block accumulator loop for bucket 95:
  bucket 95: 10%
  Sorting block time: 00:00:00
Returning block of 15 for bucket 94
  bucket 95: 20%
Getting block 96 of 310
  Reserving size (27) for bucket 96
  Calculating Z arrays for bucket 96
  bucket 95: 30%
  bucket 95: 40%
  Entering block accumulator loop for bucket 96:
  bucket 95: 50%
  bucket 96: 10%
  bucket 95: 60%
  bucket 96: 20%
  bucket 95: 70%
  bucket 96: 30%
  bucket 95: 80%
  bucket 96: 40%
  bucket 95: 90%
  bucket 96: 50%
  bucket 95: 100%
  bucket 96: 60%
  Sorting block of length 12 for bucket 95
  (Using difference cover)
  bucket 96: 70%
  bucket 96: 80%
  bucket 96: 90%
  bucket 96: 100%
  Sorting block of length 22 for bucket 96
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 13 for bucket 95
  Sorting block time: 00:00:00
Returning block of 23 for bucket 96
Getting block 97 of 310
  Reserving size (27) for bucket 97
  Calculating Z arrays for bucket 97
  Entering block accumulator loop for bucket 97:
  bucket 97: 10%
  bucket 97: 20%
  bucket 97: 30%
  bucket 97: 40%
  bucket 97: 50%
  bucket 97: 60%
  bucket 97: 70%
  bucket 97: 80%
  bucket 97: 90%
  bucket 97: 100%
  Sorting block of length 21 for bucket 97
  (Using difference cover)
Getting block 98 of 310
  Reserving size (27) for bucket 98
  Calculating Z arrays for bucket 98
  Entering block accumulator loop for bucket 98:
  bucket 98: 10%
  bucket 98: 20%
  bucket 98: 30%
Getting block 99 of 310
  Reserving size (27) for bucket 99
  Calculating Z arrays for bucket 99
  bucket 98: 40%
  Entering block accumulator loop for bucket 99:
  bucket 98: 50%
  Sorting block time: 00:00:00
Returning block of 22 for bucket 97
  bucket 99: 10%
  bucket 98: 60%
  bucket 99: 20%
  bucket 98: 70%
  bucket 99: 30%
  bucket 98: 80%
  bucket 99: 40%
  bucket 98: 90%
  bucket 99: 50%
  bucket 98: 100%
  Sorting block of length 11 for bucket 98
  (Using difference cover)
  bucket 99: 60%
  bucket 99: 70%
  bucket 99: 80%
  bucket 99: 90%
  bucket 99: 100%
  Sorting block of length 23 for bucket 99
  (Using difference cover)
Getting block 100 of 310
  Sorting block time: 00:00:00
  Reserving size (27) for bucket 100
  Calculating Z arrays for bucket 100
Returning block of 12 for bucket 98
  Sorting block time: 00:00:00
Returning block of 24 for bucket 99
  Entering block accumulator loop for bucket 100:
  bucket 100: 10%
  bucket 100: 20%
Getting block 101 of 310
  Reserving size (27) for bucket 101
  Calculating Z arrays for bucket 101
  bucket 100: 30%
  bucket 100: 40%
  Entering block accumulator loop for bucket 101:
  bucket 100: 50%
  bucket 101: 10%
  bucket 100: 60%
  bucket 101: 20%
  bucket 100: 70%
  bucket 100: 80%
  bucket 101: 30%
  bucket 100: 90%
  bucket 101: 40%
  bucket 100: 100%
  Sorting block of length 23 for bucket 100
  (Using difference cover)
  bucket 101: 50%
  bucket 101: 60%
  bucket 101: 70%
  bucket 101: 80%
  bucket 101: 90%
  bucket 101: 100%
  Sorting block of length 10 for bucket 101
  (Using difference cover)
Getting block 102 of 310
  Reserving size (27) for bucket 102
  Calculating Z arrays for bucket 102
  Entering block accumulator loop for bucket 102:
  Sorting block time: 00:00:00
Returning block of 24 for bucket 100
  bucket 102: 10%
  bucket 102: 20%
  Sorting block time: 00:00:00
Returning block of 11 for bucket 101
  bucket 102: 30%
  bucket 102: 40%
  bucket 102: 50%
  bucket 102: 60%
  bucket 102: 70%
  bucket 102: 80%
Getting block 103 of 310
  Reserving size (27) for bucket 103
  Calculating Z arrays for bucket 103
  bucket 102: 90%
  bucket 102: 100%
  Sorting block of length 26 for bucket 102
  (Using difference cover)
  Entering block accumulator loop for bucket 103:
  bucket 103: 10%
  bucket 103: 20%
  bucket 103: 30%
Getting block 104 of 310
  Reserving size (27) for bucket 104
  Calculating Z arrays for bucket 104
  bucket 103: 40%
  Entering block accumulator loop for bucket 104:
  bucket 103: 50%
  bucket 104: 10%
  bucket 103: 60%
  bucket 104: 20%
  bucket 103: 70%
  bucket 104: 30%
  bucket 103: 80%
  bucket 104: 40%
  bucket 103: 90%
  bucket 104: 50%
  bucket 104: 60%
  bucket 103: 100%
  Sorting block of length 25 for bucket 103
  (Using difference cover)
  Sorting block time: 00:00:00
  bucket 104: 70%
Returning block of 27 for bucket 102
  bucket 104: 80%
  bucket 104: 90%
  bucket 104: 100%
  Sorting block of length 21 for bucket 104
  (Using difference cover)
Getting block 105 of 310
  Reserving size (27) for bucket 105
  Calculating Z arrays for bucket 105
  Sorting block time: 00:00:00
  Entering block accumulator loop for bucket 105:
Returning block of 26 for bucket 103
  bucket 105: 10%
  Sorting block time: 00:00:00
Returning block of 22 for bucket 104
  bucket 105: 20%
  bucket 105: 30%
  bucket 105: 40%
  bucket 105: 50%
  bucket 105: 60%
  bucket 105: 70%
  bucket 105: 80%
  bucket 105: 90%
  bucket 105: 100%
  Sorting block of length 5 for bucket 105
  (Using difference cover)
Getting block 106 of 310
  Reserving size (27) for bucket 106
  Calculating Z arrays for bucket 106
  Entering block accumulator loop for bucket 106:
  bucket 106: 10%
  bucket 106: 20%
  bucket 106: 30%
  bucket 106: 40%
  bucket 106: 50%
  bucket 106: 60%
  Sorting block time: 00:00:00
Returning block of 6 for bucket 105
  bucket 106: 70%
  bucket 106: 80%
  bucket 106: 90%
  bucket 106: 100%
  Sorting block of length 22 for bucket 106
  (Using difference cover)
Getting block 107 of 310
  Reserving size (27) for bucket 107
  Calculating Z arrays for bucket 107
  Entering block accumulator loop for bucket 107:
  bucket 107: 10%
  bucket 107: 20%
  bucket 107: 30%
  bucket 107: 40%
  bucket 107: 50%
  bucket 107: 60%
  bucket 107: 70%
  bucket 107: 80%
  bucket 107: 90%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 106
  bucket 107: 100%
  Sorting block of length 26 for bucket 107
  (Using difference cover)
Getting block 108 of 310
  Reserving size (27) for bucket 108
  Calculating Z arrays for bucket 108
  Entering block accumulator loop for bucket 108:
  bucket 108: 10%
  bucket 108: 20%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 107
  bucket 108: 30%
  bucket 108: 40%
  bucket 108: 50%
  bucket 108: 60%
  bucket 108: 70%
  bucket 108: 80%
  bucket 108: 90%
  bucket 108: 100%
  Sorting block of length 6 for bucket 108
  (Using difference cover)
Getting block 109 of 310
  Reserving size (27) for bucket 109
  Calculating Z arrays for bucket 109
  Entering block accumulator loop for bucket 109:
  bucket 109: 10%
  bucket 109: 20%
  bucket 109: 30%
Getting block 110 of 310
  Reserving size (27) for bucket 110
  Calculating Z arrays for bucket 110
  bucket 109: 40%
  bucket 109: 50%
  Sorting block time: 00:00:00
  Entering block accumulator loop for bucket 110:
Returning block of 7 for bucket 108
  bucket 109: 60%
  bucket 110: 10%
  bucket 109: 70%
  bucket 110: 20%
  bucket 109: 80%
  bucket 110: 30%
  bucket 109: 90%
  bucket 109: 100%
  Sorting block of length 23 for bucket 109
  (Using difference cover)
  bucket 110: 40%
  bucket 110: 50%
  bucket 110: 60%
  bucket 110: 70%
  bucket 110: 80%
  bucket 110: 90%
  bucket 110: 100%
  Sorting block of length 26 for bucket 110
  (Using difference cover)
Getting block 111 of 310
  Reserving size (27) for bucket 111
  Calculating Z arrays for bucket 111
  Entering block accumulator loop for bucket 111:
  bucket 111: 10%
  bucket 111: 20%
  bucket 111: 30%
  bucket 111: 40%
  Sorting block time: 00:00:00
Returning block of 24 for bucket 109
  bucket 111: 50%
  bucket 111: 60%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 110
  bucket 111: 70%
  bucket 111: 80%
  bucket 111: 90%
  bucket 111: 100%
  Sorting block of length 13 for bucket 111
  (Using difference cover)
Getting block 112 of 310
  Reserving size (27) for bucket 112
  Calculating Z arrays for bucket 112
  Entering block accumulator loop for bucket 112:
  bucket 112: 10%
  Sorting block time: 00:00:00
Returning block of 14 for bucket 111
  bucket 112: 20%
  bucket 112: 30%
  bucket 112: 40%
  bucket 112: 50%
  bucket 112: 60%
  bucket 112: 70%
  bucket 112: 80%
  bucket 112: 90%
  bucket 112: 100%
  Sorting block of length 25 for bucket 112
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26 for bucket 112
Getting block 113 of 310
  Reserving size (27) for bucket 113
  Calculating Z arrays for bucket 113
  Entering block accumulator loop for bucket 113:
  bucket 113: 10%
  bucket 113: 20%
  bucket 113: 30%
  bucket 113: 40%
  bucket 113: 50%
  bucket 113: 60%
  bucket 113: 70%
  bucket 113: 80%
  bucket 113: 90%
  bucket 113: 100%
  Sorting block of length 11 for bucket 113
  (Using difference cover)
Getting block 114 of 310
  Reserving size (27) for bucket 114
  Calculating Z arrays for bucket 114
  Entering block accumulator loop for bucket 114:
  bucket 114: 10%
  bucket 114: 20%
  bucket 114: 30%
  bucket 114: 40%
  bucket 114: 50%
  bucket 114: 60%
  bucket 114: 70%
  Sorting block time: 00:00:00
Returning block of 12 for bucket 113
  bucket 114: 80%
  bucket 114: 90%
  bucket 114: 100%
  Sorting block of length 21 for bucket 114
  (Using difference cover)
Getting block 115 of 310
  Reserving size (27) for bucket 115
  Calculating Z arrays for bucket 115
  Entering block accumulator loop for bucket 115:
  bucket 115: 10%
  bucket 115: 20%
  bucket 115: 30%
  bucket 115: 40%
  bucket 115: 50%
  bucket 115: 60%
  bucket 115: 70%
  Sorting block time: 00:00:00
Returning block of 22 for bucket 114
  bucket 115: 80%
  bucket 115: 90%
  bucket 115: 100%
  Sorting block of length 20 for bucket 115
  (Using difference cover)
Getting block 116 of 310
  Reserving size (27) for bucket 116
  Calculating Z arrays for bucket 116
  Entering block accumulator loop for bucket 116:
  bucket 116: 10%
  bucket 116: 20%
  Sorting block time: 00:00:00
  bucket 116: 30%
Returning block of 21 for bucket 115
  bucket 116: 40%
  bucket 116: 50%
  bucket 116: 60%
  bucket 116: 70%
  bucket 116: 80%
  bucket 116: 90%
  bucket 116: 100%
  Sorting block of length 7 for bucket 116
  (Using difference cover)
Getting block 117 of 310
  Reserving size (27) for bucket 117
  Calculating Z arrays for bucket 117
  Entering block accumulator loop for bucket 117:
  bucket 117: 10%
  bucket 117: 20%
  bucket 117: 30%
  bucket 117: 40%
  bucket 117: 50%
  bucket 117: 60%
  bucket 117: 70%
  bucket 117: 80%
  bucket 117: 90%
  bucket 117: 100%
  Sorting block of length 21 for bucket 117
  (Using difference cover)
Getting block 118 of 310
  Reserving size (27) for bucket 118
  Calculating Z arrays for bucket 118
  Entering block accumulator loop for bucket 118:
  bucket 118: 10%
  Sorting block time: 00:00:00
  bucket 118: 20%
Returning block of 8 for bucket 116
  bucket 118: 30%
  Sorting block time: 00:00:00
Returning block of 22 for bucket 117
Getting block 119 of 310
  Reserving size (27) for bucket 119
  Calculating Z arrays for bucket 119
  bucket 118: 40%
  bucket 118: 50%
  Entering block accumulator loop for bucket 119:
  bucket 118: 60%
  bucket 119: 10%
  bucket 118: 70%
  bucket 119: 20%
  bucket 118: 80%
  bucket 119: 30%
  bucket 118: 90%
  bucket 119: 40%
  bucket 118: 100%
  Sorting block of length 19 for bucket 118
  (Using difference cover)
  bucket 119: 50%
  bucket 119: 60%
  bucket 119: 70%
  bucket 119: 80%
  bucket 119: 90%
  bucket 119: 100%
  Sorting block of length 9 for bucket 119
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 20 for bucket 118
Getting block 120 of 310
  Reserving size (27) for bucket 120
  Calculating Z arrays for bucket 120
  Sorting block time: 00:00:00
Returning block of 10 for bucket 119
  Entering block accumulator loop for bucket 120:
  bucket 120: 10%
  bucket 120: 20%
  bucket 120: 30%
  bucket 120: 40%
  bucket 120: 50%
Getting block 121 of 310
  Reserving size (27) for bucket 121
  Calculating Z arrays for bucket 121
  bucket 120: 60%
  bucket 120: 70%
  Entering block accumulator loop for bucket 121:
  bucket 120: 80%
  bucket 121: 10%
  bucket 120: 90%
  bucket 120: 100%
  bucket 121: 20%
  Sorting block of length 22 for bucket 120
  (Using difference cover)
  bucket 121: 30%
  bucket 121: 40%
  bucket 121: 50%
  bucket 121: 60%
  bucket 121: 70%
  bucket 121: 80%
  bucket 121: 90%
  bucket 121: 100%
  Sorting block of length 24 for bucket 121
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 23 for bucket 120
  Sorting block time: 00:00:00
Returning block of 25 for bucket 121
Getting block 122 of 310
  Reserving size (27) for bucket 122
  Calculating Z arrays for bucket 122
  Entering block accumulator loop for bucket 122:
  bucket 122: 10%
Getting block 123 of 310
  Reserving size (27) for bucket 123
  Calculating Z arrays for bucket 123
  bucket 122: 20%
  Entering block accumulator loop for bucket 123:
  bucket 122: 30%
  bucket 123: 10%
  bucket 122: 40%
  bucket 123: 20%
  bucket 122: 50%
  bucket 123: 30%
  bucket 122: 60%
  bucket 123: 40%
  bucket 122: 70%
  bucket 123: 50%
  bucket 122: 80%
  bucket 123: 60%
  bucket 122: 90%
  bucket 123: 70%
  bucket 122: 100%
  bucket 123: 80%
  Sorting block of length 9 for bucket 122
  (Using difference cover)
  bucket 123: 90%
  bucket 123: 100%
  Sorting block of length 23 for bucket 123
  (Using difference cover)
Getting block 124 of 310
  Reserving size (27) for bucket 124
  Calculating Z arrays for bucket 124
  Entering block accumulator loop for bucket 124:
  bucket 124: 10%
  bucket 124: 20%
  bucket 124: 30%
  bucket 124: 40%
  bucket 124: 50%
  bucket 124: 60%
  bucket 124: 70%
  Sorting block time: 00:00:00
Returning block of 10 for bucket 122
  bucket 124: 80%
  bucket 124: 90%
  Sorting block time: 00:00:00
Returning block of 24 for bucket 123
  bucket 124: 100%
  Sorting block of length 26 for bucket 124
  (Using difference cover)
Getting block 125 of 310
  Reserving size (27) for bucket 125
  Calculating Z arrays for bucket 125
  Entering block accumulator loop for bucket 125:
  bucket 125: 10%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 124
  bucket 125: 20%
  bucket 125: 30%
  bucket 125: 40%
  bucket 125: 50%
  bucket 125: 60%
  bucket 125: 70%
  bucket 125: 80%
  bucket 125: 90%
  bucket 125: 100%
  Sorting block of length 14 for bucket 125
  (Using difference cover)
Getting block 126 of 310
  Reserving size (27) for bucket 126
  Calculating Z arrays for bucket 126
  Entering block accumulator loop for bucket 126:
  bucket 126: 10%
  bucket 126: 20%
  bucket 126: 30%
  bucket 126: 40%
Getting block 127 of 310
  Reserving size (27) for bucket 127
  bucket 126: 50%
  Calculating Z arrays for bucket 127
  bucket 126: 60%
  Entering block accumulator loop for bucket 127:
  bucket 126: 70%
  bucket 126: 80%
  bucket 127: 10%
  Sorting block time: 00:00:00
Returning block of 15 for bucket 125
  bucket 126: 90%
  bucket 127: 20%
  bucket 126: 100%
  Sorting block of length 26 for bucket 126
  (Using difference cover)
  bucket 127: 30%
  bucket 127: 40%
  bucket 127: 50%
  bucket 127: 60%
  bucket 127: 70%
  bucket 127: 80%
  bucket 127: 90%
  bucket 127: 100%
  Sorting block of length 23 for bucket 127
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 27 for bucket 126
Getting block 128 of 310
  Reserving size (27) for bucket 128
  Calculating Z arrays for bucket 128
  Entering block accumulator loop for bucket 128:
  Sorting block time: 00:00:00
Returning block of 24 for bucket 127
  bucket 128: 10%
  bucket 128: 20%
  bucket 128: 30%
  bucket 128: 40%
  bucket 128: 50%
  bucket 128: 60%
  bucket 128: 70%
  bucket 128: 80%
  bucket 128: 90%
  bucket 128: 100%
  Sorting block of length 13 for bucket 128
  (Using difference cover)
Getting block 129 of 310
  Reserving size (27) for bucket 129
  Calculating Z arrays for bucket 129
  Entering block accumulator loop for bucket 129:
  bucket 129: 10%
  bucket 129: 20%
  Sorting block time: 00:00:00
Returning block of 14 for bucket 128
  bucket 129: 30%
  bucket 129: 40%
  bucket 129: 50%
  bucket 129: 60%
  bucket 129: 70%
  bucket 129: 80%
  bucket 129: 90%
  bucket 129: 100%
  Sorting block of length 23 for bucket 129
  (Using difference cover)
Getting block 130 of 310
  Reserving size (27) for bucket 130
  Calculating Z arrays for bucket 130
  Entering block accumulator loop for bucket 130:
  bucket 130: 10%
  bucket 130: 20%
  bucket 130: 30%
  bucket 130: 40%
  bucket 130: 50%
  bucket 130: 60%
  Sorting block time: 00:00:00
Returning block of 24 for bucket 129
  bucket 130: 70%
  bucket 130: 80%
  bucket 130: 90%
  bucket 130: 100%
  Sorting block of length 17 for bucket 130
  (Using difference cover)
Getting block 131 of 310
  Reserving size (27) for bucket 131
  Calculating Z arrays for bucket 131
  Entering block accumulator loop for bucket 131:
  bucket 131: 10%
  bucket 131: 20%
  bucket 131: 30%
  bucket 131: 40%
Getting block 132 of 310
  Reserving size (27) for bucket 132
  Calculating Z arrays for bucket 132
  bucket 131: 50%
  Sorting block time: 00:00:00
Returning block of 18 for bucket 130
  Entering block accumulator loop for bucket 132:
  bucket 131: 60%
  bucket 132: 10%
  bucket 131: 70%
  bucket 132: 20%
  bucket 131: 80%
  bucket 132: 30%
  bucket 131: 90%
  bucket 132: 40%
  bucket 131: 100%
  Sorting block of length 12 for bucket 131
  (Using difference cover)
  bucket 132: 50%
  bucket 132: 60%
  bucket 132: 70%
  bucket 132: 80%
  bucket 132: 90%
  bucket 132: 100%
  Sorting block of length 16 for bucket 132
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 13 for bucket 131
  Sorting block time: 00:00:00
Returning block of 17 for bucket 132
Getting block 133 of 310
  Reserving size (27) for bucket 133
  Calculating Z arrays for bucket 133
  Entering block accumulator loop for bucket 133:
  bucket 133: 10%
  bucket 133: 20%
  bucket 133: 30%
  bucket 133: 40%
  bucket 133: 50%
  bucket 133: 60%
  bucket 133: 70%
  bucket 133: 80%
  bucket 133: 90%
  bucket 133: 100%
  Sorting block of length 25 for bucket 133
  (Using difference cover)
Getting block 134 of 310
  Reserving size (27) for bucket 134
  Calculating Z arrays for bucket 134
  Entering block accumulator loop for bucket 134:
  bucket 134: 10%
  bucket 134: 20%
  bucket 134: 30%
  bucket 134: 40%
  bucket 134: 50%
  bucket 134: 60%
  bucket 134: 70%
  bucket 134: 80%
  bucket 134: 90%
  bucket 134: 100%
  Sorting block of length 24 for bucket 134
  Sorting block time: 00:00:00
  (Using difference cover)
Returning block of 26 for bucket 133
Getting block 135 of 310
  Reserving size (27) for bucket 135
  Calculating Z arrays for bucket 135
  Entering block accumulator loop for bucket 135:
  bucket 135: 10%
  bucket 135: 20%
  bucket 135: 30%
  bucket 135: 40%
  bucket 135: 50%
  bucket 135: 60%
  Sorting block time: 00:00:00
Returning block of 25 for bucket 134
  bucket 135: 70%
  bucket 135: 80%
  bucket 135: 90%
  bucket 135: 100%
  Sorting block of length 9 for bucket 135
  (Using difference cover)
Getting block 136 of 310
  Reserving size (27) for bucket 136
  Calculating Z arrays for bucket 136
  Entering block accumulator loop for bucket 136:
  bucket 136: 10%
  bucket 136: 20%
  bucket 136: 30%
  bucket 136: 40%
  bucket 136: 50%
  bucket 136: 60%
  Sorting block time: 00:00:00
Returning block of 10 for bucket 135
  bucket 136: 70%
  bucket 136: 80%
  bucket 136: 90%
  bucket 136: 100%
  Sorting block of length 21 for bucket 136
  (Using difference cover)
Getting block 137 of 310
  Reserving size (27) for bucket 137
  Calculating Z arrays for bucket 137
  Entering block accumulator loop for bucket 137:
  bucket 137: 10%
  bucket 137: 20%
  bucket 137: 30%
  Sorting block time: 00:00:00
Returning block of 22 for bucket 136
  bucket 137: 40%
Getting block 138 of 310
  Reserving size (27) for bucket 138
  Calculating Z arrays for bucket 138
  bucket 137: 50%
  bucket 137: 60%
  Entering block accumulator loop for bucket 138:
  bucket 137: 70%
  bucket 138: 10%
  bucket 137: 80%
  bucket 138: 20%
  bucket 137: 90%
  bucket 138: 30%
  bucket 137: 100%
  Sorting block of length 25 for bucket 137
  (Using difference cover)
  bucket 138: 40%
  bucket 138: 50%
  bucket 138: 60%
  bucket 138: 70%
  bucket 138: 80%
  bucket 138: 90%
  bucket 138: 100%
  Sorting block of length 22 for bucket 138
  (Using difference cover)
Getting block 139 of 310
  Reserving size (27) for bucket 139
  Calculating Z arrays for bucket 139
  Entering block accumulator loop for bucket 139:
  Sorting block time: 00:00:00
Returning block of 26 for bucket 137
  bucket 139: 10%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 138
  bucket 139: 20%
  bucket 139: 30%
Getting block 140 of 310
  Reserving size (27) for bucket 140
  Calculating Z arrays for bucket 140
  bucket 139: 40%
  Entering block accumulator loop for bucket 140:
  bucket 139: 50%
  bucket 140: 10%
  bucket 139: 60%
  bucket 140: 20%
  bucket 139: 70%
  bucket 140: 30%
  bucket 139: 80%
  bucket 140: 40%
  bucket 139: 90%
  bucket 140: 50%
  bucket 139: 100%
  Sorting block of length 10 for bucket 139
  (Using difference cover)
  bucket 140: 60%
  bucket 140: 70%
  bucket 140: 80%
  bucket 140: 90%
  bucket 140: 100%
  Sorting block of length 20 for bucket 140
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 11 for bucket 139
  Sorting block time: 00:00:00
Returning block of 21 for bucket 140
Getting block 141 of 310
  Reserving size (27) for bucket 141
  Calculating Z arrays for bucket 141
  Entering block accumulator loop for bucket 141:
  bucket 141: 10%
  bucket 141: 20%
  bucket 141: 30%
  bucket 141: 40%
  bucket 141: 50%
  bucket 141: 60%
  bucket 141: 70%
  bucket 141: 80%
  bucket 141: 90%
  bucket 141: 100%
  Sorting block of length 7 for bucket 141
  (Using difference cover)
Getting block 142 of 310
  Reserving size (27) for bucket 142
  Calculating Z arrays for bucket 142
  Entering block accumulator loop for bucket 142:
  bucket 142: 10%
  bucket 142: 20%
  Sorting block time: 00:00:00
Returning block of 8 for bucket 141
Getting block 143 of 310
  Reserving size (27) for bucket 143
  Calculating Z arrays for bucket 143
  bucket 142: 30%
  Entering block accumulator loop for bucket 143:
  bucket 142: 40%
  bucket 143: 10%
  bucket 142: 50%
  bucket 143: 20%
  bucket 142: 60%
  bucket 143: 30%
  bucket 142: 70%
  bucket 143: 40%
  bucket 142: 80%
  bucket 143: 50%
  bucket 142: 90%
  bucket 143: 60%
  bucket 142: 100%
  Sorting block of length 24 for bucket 142
  (Using difference cover)
  bucket 143: 70%
  bucket 143: 80%
  bucket 143: 90%
  bucket 143: 100%
  Sorting block of length 23 for bucket 143
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 25 for bucket 142
  Sorting block time: 00:00:00
Getting block 144 of 310
  Reserving size (27) for bucket 144
  Calculating Z arrays for bucket 144
Returning block of 24 for bucket 143
  Entering block accumulator loop for bucket 144:
  bucket 144: 10%
  bucket 144: 20%
  bucket 144: 30%
Getting block 145 of 310
  Reserving size (27) for bucket 145
  Calculating Z arrays for bucket 145
  bucket 144: 40%
  bucket 144: 50%
  Entering block accumulator loop for bucket 145:
  bucket 144: 60%
  bucket 145: 10%
  bucket 144: 70%
  bucket 144: 80%
  bucket 145: 20%
  bucket 144: 90%
  bucket 145: 30%
  bucket 144: 100%
  Sorting block of length 19 for bucket 144
  (Using difference cover)
  bucket 145: 40%
  bucket 145: 50%
  bucket 145: 60%
  bucket 145: 70%
  bucket 145: 80%
  bucket 145: 90%
  bucket 145: 100%
  Sorting block of length 13 for bucket 145
  (Using difference cover)
Getting block 146 of 310
  Reserving size (27) for bucket 146
  Calculating Z arrays for bucket 146
  Entering block accumulator loop for bucket 146:
  bucket 146: 10%
  bucket 146: 20%
  bucket 146: 30%
  bucket 146: 40%
  Sorting block time: 00:00:00
  bucket 146: 50%
Returning block of 20 for bucket 144
  bucket 146: 60%
  Sorting block time: 00:00:00
  bucket 146: 70%
Returning block of 14 for bucket 145
  bucket 146: 80%
  bucket 146: 90%
  bucket 146: 100%
  Sorting block of length 25 for bucket 146
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26 for bucket 146
Getting block 147 of 310
  Reserving size (27) for bucket 147
  Calculating Z arrays for bucket 147
  Entering block accumulator loop for bucket 147:
  bucket 147: 10%
  bucket 147: 20%
  bucket 147: 30%
  bucket 147: 40%
  bucket 147: 50%
  bucket 147: 60%
  bucket 147: 70%
  bucket 147: 80%
  bucket 147: 90%
  bucket 147: 100%
  Sorting block of length 22 for bucket 147
  (Using difference cover)
Getting block 148 of 310
  Reserving size (27) for bucket 148
  Calculating Z arrays for bucket 148
  Entering block accumulator loop for bucket 148:
  bucket 148: 10%
  bucket 148: 20%
  bucket 148: 30%
  bucket 148: 40%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 147
  bucket 148: 50%
  bucket 148: 60%
  bucket 148: 70%
  bucket 148: 80%
  bucket 148: 90%
  bucket 148: 100%
  Sorting block of length 24 for bucket 148
  (Using difference cover)
Getting block 149 of 310
  Reserving size (27) for bucket 149
  Calculating Z arrays for bucket 149
  Entering block accumulator loop for bucket 149:
  bucket 149: 10%
  bucket 149: 20%
  bucket 149: 30%
  bucket 149: 40%
  bucket 149: 50%
  bucket 149: 60%
  bucket 149: 70%
  Sorting block time: 00:00:00
Returning block of 25 for bucket 148
  bucket 149: 80%
  bucket 149: 90%
  bucket 149: 100%
  Sorting block of length 15 for bucket 149
  (Using difference cover)
Getting block 150 of 310
  Reserving size (27) for bucket 150
  Calculating Z arrays for bucket 150
  Entering block accumulator loop for bucket 150:
  bucket 150: 10%
  bucket 150: 20%
  bucket 150: 30%
Getting block 151 of 310
  Reserving size (27) for bucket 151
  Calculating Z arrays for bucket 151
  bucket 150: 40%
  Sorting block time: 00:00:00
Returning block of 16 for bucket 149
  bucket 150: 50%
  Entering block accumulator loop for bucket 151:
  bucket 150: 60%
  bucket 151: 10%
  bucket 150: 70%
  bucket 151: 20%
  bucket 150: 80%
  bucket 151: 30%
  bucket 150: 90%
  bucket 151: 40%
  bucket 150: 100%
  Sorting block of length 25 for bucket 150
  (Using difference cover)
  bucket 151: 50%
  bucket 151: 60%
  bucket 151: 70%
  bucket 151: 80%
  bucket 151: 90%
  bucket 151: 100%
  Sorting block of length 6 for bucket 151
  (Using difference cover)
Getting block 152 of 310
  Reserving size (27) for bucket 152
  Calculating Z arrays for bucket 152
  Entering block accumulator loop for bucket 152:
  Sorting block time: 00:00:00
Returning block of 26 for bucket 150
  bucket 152: 10%
  Sorting block time: 00:00:00
Returning block of 7 for bucket 151
  bucket 152: 20%
  bucket 152: 30%
  bucket 152: 40%
  bucket 152: 50%
  bucket 152: 60%
  bucket 152: 70%
  bucket 152: 80%
  bucket 152: 90%
  bucket 152: 100%
  Sorting block of length 21 for bucket 152
  (Using difference cover)
Getting block 153 of 310
  Reserving size (27) for bucket 153
  Calculating Z arrays for bucket 153
  Entering block accumulator loop for bucket 153:
  bucket 153: 10%
  bucket 153: 20%
  bucket 153: 30%
  bucket 153: 40%
  bucket 153: 50%
  Sorting block time: 00:00:00
Returning block of 22 for bucket 152
  bucket 153: 60%
  bucket 153: 70%
  bucket 153: 80%
  bucket 153: 90%
  bucket 153: 100%
  Sorting block of length 12 for bucket 153
  (Using difference cover)
Getting block 154 of 310
  Reserving size (27) for bucket 154
  Calculating Z arrays for bucket 154
  Entering block accumulator loop for bucket 154:
  bucket 154: 10%
  bucket 154: 20%
  bucket 154: 30%
  bucket 154: 40%
  bucket 154: 50%
  bucket 154: 60%
  bucket 154: 70%
  bucket 154: 80%
  Sorting block time: 00:00:00
Returning block of 13 for bucket 153
  bucket 154: 90%
  bucket 154: 100%
  Sorting block of length 16 for bucket 154
  (Using difference cover)
Getting block 155 of 310
  Reserving size (27) for bucket 155
  Calculating Z arrays for bucket 155
  Entering block accumulator loop for bucket 155:
  bucket 155: 10%
  bucket 155: 20%
  bucket 155: 30%
  bucket 155: 40%
  Sorting block time: 00:00:00
Returning block of 17 for bucket 154
Getting block 156 of 310
  Reserving size (27) for bucket 156
  Calculating Z arrays for bucket 156
  bucket 155: 50%
  bucket 155: 60%
  Entering block accumulator loop for bucket 156:
  bucket 155: 70%
  bucket 155: 80%
  bucket 156: 10%
  bucket 155: 90%
  bucket 156: 20%
  bucket 155: 100%
  Sorting block of length 14 for bucket 155
  (Using difference cover)
  bucket 156: 30%
  bucket 156: 40%
  bucket 156: 50%
  bucket 156: 60%
  bucket 156: 70%
  bucket 156: 80%
  bucket 156: 90%
  bucket 156: 100%
  Sorting block of length 19 for bucket 156
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 15 for bucket 155
  Sorting block time: 00:00:00
Returning block of 20 for bucket 156
Getting block 157 of 310
  Reserving size (27) for bucket 157
  Calculating Z arrays for bucket 157
  Entering block accumulator loop for bucket 157:
  bucket 157: 10%
  bucket 157: 20%
  bucket 157: 30%
Getting block 158 of 310
  Reserving size (27) for bucket 158
  Calculating Z arrays for bucket 158
  bucket 157: 40%
  bucket 157: 50%
  Entering block accumulator loop for bucket 158:
  bucket 157: 60%
  bucket 158: 10%
  bucket 157: 70%
  bucket 158: 20%
  bucket 157: 80%
  bucket 158: 30%
  bucket 157: 90%
  bucket 157: 100%
  bucket 158: 40%
  Sorting block of length 22 for bucket 157
  (Using difference cover)
  bucket 158: 50%
  bucket 158: 60%
  bucket 158: 70%
  bucket 158: 80%
  bucket 158: 90%
  bucket 158: 100%
  Sorting block of length 18 for bucket 158
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 23 for bucket 157
  Sorting block time: 00:00:00
Returning block of 19 for bucket 158
Getting block 159 of 310
  Reserving size (27) for bucket 159
  Calculating Z arrays for bucket 159
  Entering block accumulator loop for bucket 159:
  bucket 159: 10%
  bucket 159: 20%
  bucket 159: 30%
  bucket 159: 40%
  bucket 159: 50%
  bucket 159: 60%
  bucket 159: 70%
  bucket 159: 80%
  bucket 159: 90%
  bucket 159: 100%
  Sorting block of length 9 for bucket 159
  (Using difference cover)
Getting block 160 of 310
  Reserving size (27) for bucket 160
  Calculating Z arrays for bucket 160
  Entering block accumulator loop for bucket 160:
  bucket 160: 10%
  bucket 160: 20%
  bucket 160: 30%
  bucket 160: 40%
  bucket 160: 50%
  bucket 160: 60%
  Sorting block time: 00:00:00
Returning block of 10 for bucket 159
  bucket 160: 70%
  bucket 160: 80%
  bucket 160: 90%
  bucket 160: 100%
  Sorting block of length 18 for bucket 160
  (Using difference cover)
Getting block 161 of 310
  Reserving size (27) for bucket 161
  Calculating Z arrays for bucket 161
  Entering block accumulator loop for bucket 161:
  bucket 161: 10%
  bucket 161: 20%
  bucket 161: 30%
  bucket 161: 40%
  bucket 161: 50%
  bucket 161: 60%
  bucket 161: 70%
  bucket 161: 80%
  bucket 161: 90%
  bucket 161: 100%
  Sorting block of length 22 for bucket 161
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 19 for bucket 160
Getting block 162 of 310
  Reserving size (27) for bucket 162
  Calculating Z arrays for bucket 162
  Entering block accumulator loop for bucket 162:
  bucket 162: 10%
  bucket 162: 20%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 161
  bucket 162: 30%
  bucket 162: 40%
  bucket 162: 50%
  bucket 162: 60%
  bucket 162: 70%
  bucket 162: 80%
  bucket 162: 90%
  bucket 162: 100%
  Sorting block of length 23 for bucket 162
  (Using difference cover)
Getting block 163 of 310
  Reserving size (27) for bucket 163
  Calculating Z arrays for bucket 163
  Entering block accumulator loop for bucket 163:
  bucket 163: 10%
  bucket 163: 20%
  bucket 163: 30%
  bucket 163: 40%
  Sorting block time: 00:00:00
Returning block of 24 for bucket 162
  bucket 163: 50%
  bucket 163: 60%
  bucket 163: 70%
  bucket 163: 80%
  bucket 163: 90%
  bucket 163: 100%
  Sorting block of length 13 for bucket 163
  (Using difference cover)
Getting block 164 of 310
  Reserving size (27) for bucket 164
  Calculating Z arrays for bucket 164
  Entering block accumulator loop for bucket 164:
  bucket 164: 10%
  bucket 164: 20%
  bucket 164: 30%
  bucket 164: 40%
Getting block 165 of 310
  Reserving size (27) for bucket 165
  Calculating Z arrays for bucket 165
  Sorting block time: 00:00:00
  bucket 164: 50%
Returning block of 14 for bucket 163
  bucket 164: 60%
  Entering block accumulator loop for bucket 165:
  bucket 164: 70%
  bucket 165: 10%
  bucket 164: 80%
  bucket 165: 20%
  bucket 164: 90%
  bucket 165: 30%
  bucket 164: 100%
  Sorting block of length 18 for bucket 164
  (Using difference cover)
  bucket 165: 40%
  bucket 165: 50%
  bucket 165: 60%
  bucket 165: 70%
  bucket 165: 80%
  bucket 165: 90%
  bucket 165: 100%
  Sorting block of length 19 for bucket 165
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 19 for bucket 164
  Sorting block time: 00:00:00
Returning block of 20 for bucket 165
Getting block 166 of 310
  Reserving size (27) for bucket 166
  Calculating Z arrays for bucket 166
  Entering block accumulator loop for bucket 166:
  bucket 166: 10%
Getting block 167 of 310
  Reserving size (27) for bucket 167
  Calculating Z arrays for bucket 167
  bucket 166: 20%
  bucket 166: 30%
  Entering block accumulator loop for bucket 167:
  bucket 166: 40%
  bucket 167: 10%
  bucket 166: 50%
  bucket 167: 20%
  bucket 167: 30%
  bucket 166: 60%
  bucket 167: 40%
  bucket 166: 70%
  bucket 167: 50%
  bucket 166: 80%
  bucket 167: 60%
  bucket 166: 90%
  bucket 167: 70%
  bucket 166: 100%
  bucket 167: 80%
  Sorting block of length 24 for bucket 166
  (Using difference cover)
  bucket 167: 90%
  bucket 167: 100%
  Sorting block of length 18 for bucket 167
  (Using difference cover)
Getting block 168 of 310
  Reserving size (27) for bucket 168
  Calculating Z arrays for bucket 168
  Entering block accumulator loop for bucket 168:
  bucket 168: 10%
  bucket 168: 20%
  Sorting block time: 00:00:00
Returning block of 25 for bucket 166
Getting block 169 of 310
  Reserving size (27) for bucket 169
  Calculating Z arrays for bucket 169
  bucket 168: 30%
  Sorting block time: 00:00:00
Returning block of 19 for bucket 167
  Entering block accumulator loop for bucket 169:
  bucket 168: 40%
  bucket 169: 10%
  bucket 168: 50%
  bucket 169: 20%
  bucket 168: 60%
  bucket 169: 30%
  bucket 168: 70%
  bucket 169: 40%
  bucket 168: 80%
  bucket 169: 50%
  bucket 168: 90%
  bucket 169: 60%
  bucket 168: 100%
  bucket 169: 70%
  Sorting block of length 23 for bucket 168
  (Using difference cover)
  bucket 169: 80%
  bucket 169: 90%
  bucket 169: 100%
  Sorting block of length 15 for bucket 169
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 24 for bucket 168
Getting block 170 of 310
  Reserving size (27) for bucket 170
  Calculating Z arrays for bucket 170
  Sorting block time: 00:00:00
Returning block of 16 for bucket 169
  Entering block accumulator loop for bucket 170:
  bucket 170: 10%
  bucket 170: 20%
  bucket 170: 30%
  bucket 170: 40%
  bucket 170: 50%
  bucket 170: 60%
  bucket 170: 70%
Getting block 171 of 310
  Reserving size (27) for bucket 171
  Calculating Z arrays for bucket 171
  bucket 170: 80%
  Entering block accumulator loop for bucket 171:
  bucket 170: 90%
  bucket 171: 10%
  bucket 170: 100%
  Sorting block of length 25 for bucket 170
  (Using difference cover)
  bucket 171: 20%
  bucket 171: 30%
  bucket 171: 40%
  bucket 171: 50%
  bucket 171: 60%
  bucket 171: 70%
  bucket 171: 80%
  bucket 171: 90%
  bucket 171: 100%
  Sorting block of length 10 for bucket 171
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26 for bucket 170
  Sorting block time: 00:00:00
Returning block of 11 for bucket 171
Getting block 172 of 310
  Reserving size (27) for bucket 172
  Calculating Z arrays for bucket 172
  Entering block accumulator loop for bucket 172:
  bucket 172: 10%
  bucket 172: 20%
  bucket 172: 30%
  bucket 172: 40%
  bucket 172: 50%
Getting block 173 of 310
  Reserving size (27) for bucket 173
  Calculating Z arrays for bucket 173
  bucket 172: 60%
  bucket 172: 70%
  Entering block accumulator loop for bucket 173:
  bucket 172: 80%
  bucket 173: 10%
  bucket 172: 90%
  bucket 173: 20%
  bucket 172: 100%
  Sorting block of length 17 for bucket 172
  (Using difference cover)
  bucket 173: 30%
  bucket 173: 40%
  bucket 173: 50%
  bucket 173: 60%
  bucket 173: 70%
  bucket 173: 80%
  bucket 173: 90%
  bucket 173: 100%
  Sorting block of length 9 for bucket 173
  (Using difference cover)
Getting block 174 of 310
  Reserving size (27) for bucket 174
  Calculating Z arrays for bucket 174
  Entering block accumulator loop for bucket 174:
  bucket 174: 10%
  bucket 174: 20%
  bucket 174: 30%
  bucket 174: 40%
  Sorting block time: 00:00:00
Returning block of 18 for bucket 172
  bucket 174: 50%
  bucket 174: 60%
  Sorting block time: 00:00:00
Returning block of 10 for bucket 173
  bucket 174: 70%
  bucket 174: 80%
  bucket 174: 90%
  bucket 174: 100%
  Sorting block of length 23 for bucket 174
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 24 for bucket 174
Getting block 175 of 310
  Reserving size (27) for bucket 175
  Calculating Z arrays for bucket 175
  Entering block accumulator loop for bucket 175:
  bucket 175: 10%
  bucket 175: 20%
Getting block 176 of 310
  Reserving size (27) for bucket 176
  Calculating Z arrays for bucket 176
  bucket 175: 30%
  Entering block accumulator loop for bucket 176:
  bucket 175: 40%
  bucket 176: 10%
  bucket 175: 50%
  bucket 176: 20%
  bucket 175: 60%
  bucket 176: 30%
  bucket 175: 70%
  bucket 176: 40%
  bucket 176: 50%
  bucket 175: 80%
  bucket 176: 60%
  bucket 175: 90%
  bucket 176: 70%
  bucket 176: 80%
  bucket 175: 100%
  Sorting block of length 13 for bucket 175
  (Using difference cover)
  bucket 176: 90%
  bucket 176: 100%
  Sorting block of length 26 for bucket 176
  (Using difference cover)
Getting block 177 of 310
  Reserving size (27) for bucket 177
  Calculating Z arrays for bucket 177
  Entering block accumulator loop for bucket 177:
  bucket 177: 10%
  bucket 177: 20%
  bucket 177: 30%
  bucket 177: 40%
  bucket 177: 50%
  bucket 177: 60%
  bucket 177: 70%
  Sorting block time: 00:00:00
  bucket 177: 80%
Returning block of 14 for bucket 175
  bucket 177: 90%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 176
  bucket 177: 100%
  Sorting block of length 22 for bucket 177
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 23 for bucket 177
Getting block 178 of 310
  Reserving size (27) for bucket 178
  Calculating Z arrays for bucket 178
  Entering block accumulator loop for bucket 178:
  bucket 178: 10%
  bucket 178: 20%
  bucket 178: 30%
  bucket 178: 40%
  bucket 178: 50%
  bucket 178: 60%
  bucket 178: 70%
  bucket 178: 80%
  bucket 178: 90%
  bucket 178: 100%
  Sorting block of length 25 for bucket 178
  (Using difference cover)
Getting block 179 of 310
  Reserving size (27) for bucket 179
  Calculating Z arrays for bucket 179
  Entering block accumulator loop for bucket 179:
  bucket 179: 10%
  bucket 179: 20%
  bucket 179: 30%
  bucket 179: 40%
  bucket 179: 50%
  bucket 179: 60%
  Sorting block time: 00:00:00
Returning block of 26 for bucket 178
  bucket 179: 70%
  bucket 179: 80%
  bucket 179: 90%
  bucket 179: 100%
  Sorting block of length 15 for bucket 179
  (Using difference cover)
Getting block 180 of 310
  Reserving size (27) for bucket 180
  Calculating Z arrays for bucket 180
  Entering block accumulator loop for bucket 180:
  bucket 180: 10%
  bucket 180: 20%
  bucket 180: 30%
  bucket 180: 40%
Getting block 181 of 310
  Reserving size (27) for bucket 181
  Calculating Z arrays for bucket 181
  bucket 180: 50%
  bucket 180: 60%
  Entering block accumulator loop for bucket 181:
  bucket 180: 70%
  bucket 181: 10%
  Sorting block time: 00:00:00
Returning block of 16 for bucket 179
  bucket 180: 80%
  bucket 181: 20%
  bucket 180: 90%
  bucket 181: 30%
  bucket 180: 100%
  Sorting block of length 26 for bucket 180
  (Using difference cover)
  bucket 181: 40%
  bucket 181: 50%
  bucket 181: 60%
  bucket 181: 70%
  bucket 181: 80%
  bucket 181: 90%
  bucket 181: 100%
  Sorting block of length 18 for bucket 181
  (Using difference cover)
Getting block 182 of 310
  Reserving size (27) for bucket 182
  Calculating Z arrays for bucket 182
  Entering block accumulator loop for bucket 182:
  bucket 182: 10%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 180
  bucket 182: 20%
  bucket 182: 30%
  Sorting block time: 00:00:00
Returning block of 19 for bucket 181
  bucket 182: 40%
  bucket 182: 50%
  bucket 182: 60%
  bucket 182: 70%
  bucket 182: 80%
  bucket 182: 90%
  bucket 182: 100%
  Sorting block of length 23 for bucket 182
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 24 for bucket 182
Getting block 183 of 310
  Reserving size (27) for bucket 183
  Calculating Z arrays for bucket 183
  Entering block accumulator loop for bucket 183:
  bucket 183: 10%
  bucket 183: 20%
  bucket 183: 30%
  bucket 183: 40%
  bucket 183: 50%
  bucket 183: 60%
  bucket 183: 70%
  bucket 183: 80%
  bucket 183: 90%
  bucket 183: 100%
  Sorting block of length 6 for bucket 183
  (Using difference cover)
Getting block 184 of 310
  Reserving size (27) for bucket 184
  Calculating Z arrays for bucket 184
  Entering block accumulator loop for bucket 184:
  bucket 184: 10%
  bucket 184: 20%
  Sorting block time: 00:00:00
Returning block of 7 for bucket 183
  bucket 184: 30%
  bucket 184: 40%
  bucket 184: 50%
Getting block 185 of 310
  Reserving size (27) for bucket 185
  Calculating Z arrays for bucket 185
  bucket 184: 60%
  bucket 184: 70%
  Entering block accumulator loop for bucket 185:
  bucket 184: 80%
  bucket 185: 10%
  bucket 184: 90%
  bucket 185: 20%
  bucket 184: 100%
  Sorting block of length 26 for bucket 184
  (Using difference cover)
  bucket 185: 30%
  bucket 185: 40%
  bucket 185: 50%
  bucket 185: 60%
  bucket 185: 70%
  bucket 185: 80%
  bucket 185: 90%
  bucket 185: 100%
  Sorting block of length 19 for bucket 185
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 27 for bucket 184
  Sorting block time: 00:00:00
Returning block of 20 for bucket 185
Getting block 186 of 310
  Reserving size (27) for bucket 186
  Calculating Z arrays for bucket 186
  Entering block accumulator loop for bucket 186:
  bucket 186: 10%
  bucket 186: 20%
  bucket 186: 30%
  bucket 186: 40%
Getting block 187 of 310
  Reserving size (27) for bucket 187
  Calculating Z arrays for bucket 187
  bucket 186: 50%
  bucket 186: 60%
  Entering block accumulator loop for bucket 187:
  bucket 186: 70%
  bucket 187: 10%
  bucket 186: 80%
  bucket 187: 20%
  bucket 186: 90%
  bucket 187: 30%
  bucket 186: 100%
  bucket 187: 40%
  Sorting block of length 16 for bucket 186
  (Using difference cover)
  bucket 187: 50%
  bucket 187: 60%
  bucket 187: 70%
  bucket 187: 80%
  bucket 187: 90%
  bucket 187: 100%
  Sorting block of length 24 for bucket 187
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 17 for bucket 186
  Sorting block time: 00:00:00
Returning block of 25 for bucket 187
Getting block 188 of 310
  Reserving size (27) for bucket 188
  Calculating Z arrays for bucket 188
  Entering block accumulator loop for bucket 188:
  bucket 188: 10%
  bucket 188: 20%
Getting block 189 of 310
  Reserving size (27) for bucket 189
  Calculating Z arrays for bucket 189
  bucket 188: 30%
  Entering block accumulator loop for bucket 189:
  bucket 188: 40%
  bucket 189: 10%
  bucket 188: 50%
  bucket 189: 20%
  bucket 188: 60%
  bucket 189: 30%
  bucket 188: 70%
  bucket 189: 40%
  bucket 188: 80%
  bucket 189: 50%
  bucket 188: 90%
  bucket 189: 60%
  bucket 188: 100%
  Sorting block of length 25 for bucket 188
  (Using difference cover)
  bucket 189: 70%
  bucket 189: 80%
  bucket 189: 90%
  bucket 189: 100%
  Sorting block of length 26 for bucket 189
  (Using difference cover)
  Sorting block time: 00:00:00
Getting block 190 of 310
  Reserving size (27) for bucket 190
  Calculating Z arrays for bucket 190
Returning block of 26 for bucket 188
  Entering block accumulator loop for bucket 190:
  Sorting block time: 00:00:00
Returning block of 27 for bucket 189
  bucket 190: 10%
  bucket 190: 20%
Getting block 191 of 310
  Reserving size (27) for bucket 191
  Calculating Z arrays for bucket 191
  bucket 190: 30%
  Entering block accumulator loop for bucket 191:
  bucket 190: 40%
  bucket 191: 10%
  bucket 190: 50%
  bucket 191: 20%
  bucket 190: 60%
  bucket 191: 30%
  bucket 190: 70%
  bucket 191: 40%
  bucket 190: 80%
  bucket 191: 50%
  bucket 190: 90%
  bucket 191: 60%
  bucket 190: 100%
  Sorting block of length 18 for bucket 190
  (Using difference cover)
  bucket 191: 70%
  bucket 191: 80%
  bucket 191: 90%
  bucket 191: 100%
  Sorting block of length 22 for bucket 191
  (Using difference cover)
  Sorting block time: 00:00:00
Getting block 192 of 310
  Reserving size (27) for bucket 192
  Calculating Z arrays for bucket 192
Returning block of 19 for bucket 190
  Sorting block time: 00:00:00
  Entering block accumulator loop for bucket 192:
Returning block of 23 for bucket 191
  bucket 192: 10%
  bucket 192: 20%
  bucket 192: 30%
  bucket 192: 40%
  bucket 192: 50%
  bucket 192: 60%
  bucket 192: 70%
  bucket 192: 80%
  bucket 192: 90%
Getting block 193 of 310
  Reserving size (27) for bucket 193
  Calculating Z arrays for bucket 193
  bucket 192: 100%
  Sorting block of length 8 for bucket 192
  (Using difference cover)
  Entering block accumulator loop for bucket 193:
  bucket 193: 10%
  bucket 193: 20%
  bucket 193: 30%
  bucket 193: 40%
  bucket 193: 50%
  bucket 193: 60%
  bucket 193: 70%
  bucket 193: 80%
  bucket 193: 90%
  bucket 193: 100%
  Sorting block of length 18 for bucket 193
  (Using difference cover)
Getting block 194 of 310
  Reserving size (27) for bucket 194
  Calculating Z arrays for bucket 194
  Entering block accumulator loop for bucket 194:
  bucket 194: 10%
  bucket 194: 20%
  bucket 194: 30%
  bucket 194: 40%
Getting block 195 of 310
  Reserving size (27) for bucket 195
  Sorting block time: 00:00:00
  bucket 194: 50%
  Calculating Z arrays for bucket 195
Returning block of 9 for bucket 192
  bucket 194: 60%
  Sorting block time: 00:00:00
  bucket 194: 70%
Returning block of 19 for bucket 193
  Entering block accumulator loop for bucket 195:
  bucket 194: 80%
  bucket 195: 10%
  bucket 194: 90%
  bucket 195: 20%
  bucket 194: 100%
  Sorting block of length 8 for bucket 194
  (Using difference cover)
  bucket 195: 30%
  bucket 195: 40%
  bucket 195: 50%
  bucket 195: 60%
  bucket 195: 70%
  bucket 195: 80%
  bucket 195: 90%
  bucket 195: 100%
  Sorting block of length 23 for bucket 195
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 9 for bucket 194
  Sorting block time: 00:00:00
Returning block of 24 for bucket 195
Getting block 196 of 310
  Reserving size (27) for bucket 196
  Calculating Z arrays for bucket 196
  Entering block accumulator loop for bucket 196:
  bucket 196: 10%
  bucket 196: 20%
  bucket 196: 30%
  bucket 196: 40%
  bucket 196: 50%
  bucket 196: 60%
  bucket 196: 70%
  bucket 196: 80%
  bucket 196: 90%
  bucket 196: 100%
  Sorting block of length 16 for bucket 196
  (Using difference cover)
Getting block 197 of 310
  Reserving size (27) for bucket 197
  Calculating Z arrays for bucket 197
  Entering block accumulator loop for bucket 197:
  Sorting block time: 00:00:00
  bucket 197: 10%
Returning block of 17 for bucket 196
  bucket 197: 20%
  bucket 197: 30%
  bucket 197: 40%
  bucket 197: 50%
  bucket 197: 60%
Getting block 198 of 310
  Reserving size (27) for bucket 198
  Calculating Z arrays for bucket 198
  bucket 197: 70%
  bucket 197: 80%
  Entering block accumulator loop for bucket 198:
  bucket 197: 90%
  bucket 198: 10%
  bucket 197: 100%
  bucket 198: 20%
  Sorting block of length 24 for bucket 197
  (Using difference cover)
  bucket 198: 30%
  bucket 198: 40%
  bucket 198: 50%
  bucket 198: 60%
  bucket 198: 70%
  bucket 198: 80%
  bucket 198: 90%
  bucket 198: 100%
  Sorting block of length 22 for bucket 198
  (Using difference cover)
Getting block 199 of 310
  Reserving size (27) for bucket 199
  Calculating Z arrays for bucket 199
  Entering block accumulator loop for bucket 199:
  bucket 199: 10%
  bucket 199: 20%
  bucket 199: 30%
  bucket 199: 40%
  bucket 199: 50%
  bucket 199: 60%
  bucket 199: 70%
  bucket 199: 80%
  bucket 199: 90%
  bucket 199: 100%
  Sorting block of length 26 for bucket 199
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 25 for bucket 197
Getting block 200 of 310
  Reserving size (27) for bucket 200
  Calculating Z arrays for bucket 200
  Entering block accumulator loop for bucket 200:
  bucket 200: 10%
  bucket 200: 20%
  bucket 200: 30%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 198
  bucket 200: 40%
  bucket 200: 50%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 199
  bucket 200: 60%
  bucket 200: 70%
  bucket 200: 80%
  bucket 200: 90%
  bucket 200: 100%
  Sorting block of length 26 for bucket 200
  (Using difference cover)
Getting block 201 of 310
  Reserving size (27) for bucket 201
  Calculating Z arrays for bucket 201
  Entering block accumulator loop for bucket 201:
  bucket 201: 10%
  bucket 201: 20%
  bucket 201: 30%
  Sorting block time: 00:00:00
  bucket 201: 40%
Returning block of 27 for bucket 200
  bucket 201: 50%
  bucket 201: 60%
  bucket 201: 70%
  bucket 201: 80%
  bucket 201: 90%
  bucket 201: 100%
  Sorting block of length 23 for bucket 201
  (Using difference cover)
Getting block 202 of 310
  Reserving size (27) for bucket 202
  Calculating Z arrays for bucket 202
  Entering block accumulator loop for bucket 202:
  bucket 202: 10%
  bucket 202: 20%
  bucket 202: 30%
  bucket 202: 40%
  bucket 202: 50%
  bucket 202: 60%
  Sorting block time: 00:00:00
Returning block of 24 for bucket 201
  bucket 202: 70%
  bucket 202: 80%
  bucket 202: 90%
  bucket 202: 100%
  Sorting block of length 19 for bucket 202
  (Using difference cover)
Getting block 203 of 310
  Reserving size (27) for bucket 203
  Calculating Z arrays for bucket 203
  Entering block accumulator loop for bucket 203:
  bucket 203: 10%
  bucket 203: 20%
  bucket 203: 30%
  bucket 203: 40%
  bucket 203: 50%
  Sorting block time: 00:00:00
Returning block of 20 for bucket 202
  bucket 203: 60%
Getting block 204 of 310
  Reserving size (27) for bucket 204
  Calculating Z arrays for bucket 204
  bucket 203: 70%
  bucket 203: 80%
  Entering block accumulator loop for bucket 204:
  bucket 203: 90%
  bucket 204: 10%
  bucket 203: 100%
  Sorting block of length 26 for bucket 203
  (Using difference cover)
  bucket 204: 20%
  bucket 204: 30%
  bucket 204: 40%
  bucket 204: 50%
  bucket 204: 60%
  bucket 204: 70%
  bucket 204: 80%
  bucket 204: 90%
  bucket 204: 100%
  Sorting block of length 21 for bucket 204
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 27 for bucket 203
  Sorting block time: 00:00:00
Returning block of 22 for bucket 204
Getting block 205 of 310
  Reserving size (27) for bucket 205
  Calculating Z arrays for bucket 205
  Entering block accumulator loop for bucket 205:
  bucket 205: 10%
  bucket 205: 20%
  bucket 205: 30%
  bucket 205: 40%
  bucket 205: 50%
  bucket 205: 60%
  bucket 205: 70%
  bucket 205: 80%
  bucket 205: 90%
  bucket 205: 100%
  Sorting block of length 19 for bucket 205
  (Using difference cover)
Getting block 206 of 310
  Reserving size (27) for bucket 206
  Calculating Z arrays for bucket 206
  Entering block accumulator loop for bucket 206:
  bucket 206: 10%
  bucket 206: 20%
  Sorting block time: 00:00:00
Returning block of 20 for bucket 205
  bucket 206: 30%
  bucket 206: 40%
  bucket 206: 50%
  bucket 206: 60%
  bucket 206: 70%
  bucket 206: 80%
  bucket 206: 90%
  bucket 206: 100%
  Sorting block of length 13 for bucket 206
  (Using difference cover)
Getting block 207 of 310
  Reserving size (27) for bucket 207
  Calculating Z arrays for bucket 207
  Entering block accumulator loop for bucket 207:
  bucket 207: 10%
  bucket 207: 20%
  bucket 207: 30%
  bucket 207: 40%
  bucket 207: 50%
  bucket 207: 60%
  Sorting block time: 00:00:00
Returning block of 14 for bucket 206
  bucket 207: 70%
  bucket 207: 80%
  bucket 207: 90%
  bucket 207: 100%
  Sorting block of length 25 for bucket 207
  (Using difference cover)
Getting block 208 of 310
  Reserving size (27) for bucket 208
  Calculating Z arrays for bucket 208
  Entering block accumulator loop for bucket 208:
  bucket 208: 10%
  bucket 208: 20%
  bucket 208: 30%
  Sorting block time: 00:00:00
Getting block 209 of 310
  Reserving size (27) for bucket 209
  Calculating Z arrays for bucket 209
Returning block of 26 for bucket 207
  bucket 208: 40%
  bucket 208: 50%
  Entering block accumulator loop for bucket 209:
  bucket 208: 60%
  bucket 209: 10%
  bucket 208: 70%
  bucket 209: 20%
  bucket 208: 80%
  bucket 209: 30%
  bucket 208: 90%
  bucket 209: 40%
  bucket 208: 100%
  Sorting block of length 23 for bucket 208
  (Using difference cover)
  bucket 209: 50%
  bucket 209: 60%
  bucket 209: 70%
  bucket 209: 80%
  bucket 209: 90%
  bucket 209: 100%
  Sorting block of length 9 for bucket 209
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 24 for bucket 208
  Sorting block time: 00:00:00
Returning block of 10 for bucket 209
Getting block 210 of 310
  Reserving size (27) for bucket 210
  Calculating Z arrays for bucket 210
  Entering block accumulator loop for bucket 210:
  bucket 210: 10%
  bucket 210: 20%
  bucket 210: 30%
  bucket 210: 40%
  bucket 210: 50%
  bucket 210: 60%
  bucket 210: 70%
  bucket 210: 80%
  bucket 210: 90%
  bucket 210: 100%
  Sorting block of length 25 for bucket 210
  (Using difference cover)
Getting block 211 of 310
  Reserving size (27) for bucket 211
  Calculating Z arrays for bucket 211
  Entering block accumulator loop for bucket 211:
  bucket 211: 10%
  bucket 211: 20%
  bucket 211: 30%
  bucket 211: 40%
  bucket 211: 50%
  bucket 211: 60%
  Sorting block time: 00:00:00
Returning block of 26 for bucket 210
  bucket 211: 70%
  bucket 211: 80%
  bucket 211: 90%
  bucket 211: 100%
  Sorting block of length 26 for bucket 211
  (Using difference cover)
Getting block 212 of 310
  Reserving size (27) for bucket 212
  Calculating Z arrays for bucket 212
  Entering block accumulator loop for bucket 212:
  bucket 212: 10%
  bucket 212: 20%
  bucket 212: 30%
  bucket 212: 40%
  bucket 212: 50%
  bucket 212: 60%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 211
  bucket 212: 70%
  bucket 212: 80%
  bucket 212: 90%
  bucket 212: 100%
  Sorting block of length 15 for bucket 212
  (Using difference cover)
Getting block 213 of 310
  Reserving size (27) for bucket 213
  Calculating Z arrays for bucket 213
  Entering block accumulator loop for bucket 213:
  bucket 213: 10%
  bucket 213: 20%
  bucket 213: 30%
  bucket 213: 40%
  Sorting block time: 00:00:00
Returning block of 16 for bucket 212
  bucket 213: 50%
  bucket 213: 60%
  bucket 213: 70%
  bucket 213: 80%
  bucket 213: 90%
  bucket 213: 100%
  Sorting block of length 18 for bucket 213
  (Using difference cover)
Getting block 214 of 310
  Reserving size (27) for bucket 214
  Calculating Z arrays for bucket 214
  Entering block accumulator loop for bucket 214:
  bucket 214: 10%
  bucket 214: 20%
  bucket 214: 30%
  bucket 214: 40%
  bucket 214: 50%
Getting block 215 of 310
  Reserving size (27) for bucket 215
  Calculating Z arrays for bucket 215
  bucket 214: 60%
  bucket 214: 70%
  Entering block accumulator loop for bucket 215:
  bucket 214: 80%
  bucket 215: 10%
  bucket 214: 90%
  bucket 215: 20%
  Sorting block time: 00:00:00
Returning block of 19 for bucket 213
  bucket 214: 100%
  Sorting block of length 10 for bucket 214
  (Using difference cover)
  bucket 215: 30%
  bucket 215: 40%
  bucket 215: 50%
  bucket 215: 60%
  bucket 215: 70%
  bucket 215: 80%
  bucket 215: 90%
  bucket 215: 100%
  Sorting block of length 22 for bucket 215
  (Using difference cover)
Getting block 216 of 310
  Reserving size (27) for bucket 216
  Calculating Z arrays for bucket 216
  Entering block accumulator loop for bucket 216:
  Sorting block time: 00:00:00
Returning block of 11 for bucket 214
  bucket 216: 10%
  bucket 216: 20%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 215
  bucket 216: 30%
  bucket 216: 40%
  bucket 216: 50%
  bucket 216: 60%
  bucket 216: 70%
  bucket 216: 80%
  bucket 216: 90%
  bucket 216: 100%
  Sorting block of length 26 for bucket 216
  (Using difference cover)
Getting block 217 of 310
  Reserving size (27) for bucket 217
  Calculating Z arrays for bucket 217
  Entering block accumulator loop for bucket 217:
  Sorting block time: 00:00:00
  bucket 217: 10%
Returning block of 27 for bucket 216
  bucket 217: 20%
  bucket 217: 30%
  bucket 217: 40%
  bucket 217: 50%
  bucket 217: 60%
  bucket 217: 70%
  bucket 217: 80%
  bucket 217: 90%
  bucket 217: 100%
  Sorting block of length 16 for bucket 217
  (Using difference cover)
Getting block 218 of 310
  Reserving size (27) for bucket 218
  Calculating Z arrays for bucket 218
  Entering block accumulator loop for bucket 218:
  bucket 218: 10%
  bucket 218: 20%
  bucket 218: 30%
  Sorting block time: 00:00:00
Returning block of 17 for bucket 217
  bucket 218: 40%
  bucket 218: 50%
  bucket 218: 60%
  bucket 218: 70%
  bucket 218: 80%
  bucket 218: 90%
  bucket 218: 100%
  Sorting block of length 17 for bucket 218
  (Using difference cover)
Getting block 219 of 310
  Reserving size (27) for bucket 219
  Calculating Z arrays for bucket 219
  Entering block accumulator loop for bucket 219:
  Sorting block time: 00:00:00
Returning block of 18 for bucket 218
  bucket 219: 10%
  bucket 219: 20%
  bucket 219: 30%
  bucket 219: 40%
  bucket 219: 50%
  bucket 219: 60%
  bucket 219: 70%
  bucket 219: 80%
  bucket 219: 90%
  bucket 219: 100%
  Sorting block of length 24 for bucket 219
  (Using difference cover)
Getting block 220 of 310
  Reserving size (27) for bucket 220
  Calculating Z arrays for bucket 220
  Entering block accumulator loop for bucket 220:
  bucket 220: 10%
  bucket 220: 20%
  bucket 220: 30%
  bucket 220: 40%
  bucket 220: 50%
  Sorting block time: 00:00:00
Returning block of 25 for bucket 219
  bucket 220: 60%
  bucket 220: 70%
  bucket 220: 80%
  bucket 220: 90%
  bucket 220: 100%
  Sorting block of length 12 for bucket 220
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 13 for bucket 220
Getting block 221 of 310
  Reserving size (27) for bucket 221
  Calculating Z arrays for bucket 221
  Entering block accumulator loop for bucket 221:
  bucket 221: 10%
  bucket 221: 20%
  bucket 221: 30%
  bucket 221: 40%
  bucket 221: 50%
  bucket 221: 60%
  bucket 221: 70%
  bucket 221: 80%
  bucket 221: 90%
  bucket 221: 100%
  Sorting block of length 17 for bucket 221
  (Using difference cover)
Getting block 222 of 310
  Reserving size (27) for bucket 222
  Calculating Z arrays for bucket 222
  Entering block accumulator loop for bucket 222:
  bucket 222: 10%
  bucket 222: 20%
  bucket 222: 30%
  bucket 222: 40%
  Sorting block time: 00:00:00
Returning block of 18 for bucket 221
  bucket 222: 50%
  bucket 222: 60%
  bucket 222: 70%
  bucket 222: 80%
  bucket 222: 90%
  bucket 222: 100%
  Sorting block of length 25 for bucket 222
  (Using difference cover)
Getting block 223 of 310
  Reserving size (27) for bucket 223
  Calculating Z arrays for bucket 223
  Entering block accumulator loop for bucket 223:
  bucket 223: 10%
  bucket 223: 20%
  bucket 223: 30%
  bucket 223: 40%
  bucket 223: 50%
  bucket 223: 60%
  Sorting block time: 00:00:00
Returning block of 26 for bucket 222
  bucket 223: 70%
  bucket 223: 80%
  bucket 223: 90%
  bucket 223: 100%
  Sorting block of length 26 for bucket 223
  (Using difference cover)
Getting block 224 of 310
  Reserving size (27) for bucket 224
  Calculating Z arrays for bucket 224
  Entering block accumulator loop for bucket 224:
  bucket 224: 10%
  bucket 224: 20%
  bucket 224: 30%
  bucket 224: 40%
  bucket 224: 50%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 223
  bucket 224: 60%
  bucket 224: 70%
  bucket 224: 80%
  bucket 224: 90%
  bucket 224: 100%
  Sorting block of length 12 for bucket 224
  (Using difference cover)
Getting block 225 of 310
  Reserving size (27) for bucket 225
  Calculating Z arrays for bucket 225
  Entering block accumulator loop for bucket 225:
  bucket 225: 10%
  bucket 225: 20%
  bucket 225: 30%
Getting block 226 of 310
  Reserving size (27) for bucket 226
  Calculating Z arrays for bucket 226
  bucket 225: 40%
  bucket 225: 50%
  Entering block accumulator loop for bucket 226:
  Sorting block time: 00:00:00
Returning block of 13 for bucket 224
  bucket 225: 60%
  bucket 226: 10%
  bucket 225: 70%
  bucket 226: 20%
  bucket 225: 80%
  bucket 226: 30%
  bucket 225: 90%
  bucket 226: 40%
  bucket 225: 100%
  Sorting block of length 26 for bucket 225
  (Using difference cover)
  bucket 226: 50%
  bucket 226: 60%
  bucket 226: 70%
  bucket 226: 80%
  bucket 226: 90%
  bucket 226: 100%
  Sorting block of length 26 for bucket 226
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 27 for bucket 225
Getting block 227 of 310
  Reserving size (27) for bucket 227
  Calculating Z arrays for bucket 227
  Sorting block time: 00:00:00
Returning block of 27 for bucket 226
  Entering block accumulator loop for bucket 227:
  bucket 227: 10%
  bucket 227: 20%
  bucket 227: 30%
  bucket 227: 40%
  bucket 227: 50%
Getting block 228 of 310
  Reserving size (27) for bucket 228
  Calculating Z arrays for bucket 228
  bucket 227: 60%
  bucket 227: 70%
  Entering block accumulator loop for bucket 228:
  bucket 227: 80%
  bucket 227: 90%
  bucket 228: 10%
  bucket 227: 100%
  bucket 228: 20%
  Sorting block of length 12 for bucket 227
  (Using difference cover)
  bucket 228: 30%
  bucket 228: 40%
  bucket 228: 50%
  bucket 228: 60%
  bucket 228: 70%
  bucket 228: 80%
  bucket 228: 90%
  bucket 228: 100%
  Sorting block of length 22 for bucket 228
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 13 for bucket 227
  Sorting block time: 00:00:00
Returning block of 23 for bucket 228
Getting block 229 of 310
  Reserving size (27) for bucket 229
  Calculating Z arrays for bucket 229
  Entering block accumulator loop for bucket 229:
  bucket 229: 10%
  bucket 229: 20%
  bucket 229: 30%
  bucket 229: 40%
  bucket 229: 50%
  bucket 229: 60%
  bucket 229: 70%
  bucket 229: 80%
  bucket 229: 90%
Getting block 230 of 310
  Reserving size (27) for bucket 230
  Calculating Z arrays for bucket 230
  bucket 229: 100%
  Sorting block of length 20 for bucket 229
  (Using difference cover)
  Entering block accumulator loop for bucket 230:
  bucket 230: 10%
  bucket 230: 20%
  bucket 230: 30%
  bucket 230: 40%
  bucket 230: 50%
Getting block 231 of 310
  Reserving size (27) for bucket 231
  Calculating Z arrays for bucket 231
  bucket 230: 60%
  bucket 230: 70%
  Entering block accumulator loop for bucket 231:
  bucket 230: 80%
  bucket 231: 10%
  bucket 230: 90%
  bucket 231: 20%
  bucket 230: 100%
  Sorting block of length 15 for bucket 230
  (Using difference cover)
  bucket 231: 30%
  bucket 231: 40%
  bucket 231: 50%
  bucket 231: 60%
  bucket 231: 70%
  bucket 231: 80%
  bucket 231: 90%
  bucket 231: 100%
  Sorting block of length 19 for bucket 231
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 21 for bucket 229
Getting block 232 of 310
  Reserving size (27) for bucket 232
  Calculating Z arrays for bucket 232
  Entering block accumulator loop for bucket 232:
  bucket 232: 10%
  bucket 232: 20%
  bucket 232: 30%
  bucket 232: 40%
  Sorting block time: 00:00:00
Returning block of 16 for bucket 230
  bucket 232: 50%
  bucket 232: 60%
  Sorting block time: 00:00:00
Returning block of 20 for bucket 231
  bucket 232: 70%
  bucket 232: 80%
  bucket 232: 90%
  bucket 232: 100%
  Sorting block of length 25 for bucket 232
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26 for bucket 232
Getting block 233 of 310
  Reserving size (27) for bucket 233
  Calculating Z arrays for bucket 233
  Entering block accumulator loop for bucket 233:
  bucket 233: 10%
  bucket 233: 20%
  bucket 233: 30%
  bucket 233: 40%
  bucket 233: 50%
  bucket 233: 60%
  bucket 233: 70%
  bucket 233: 80%
  bucket 233: 90%
  bucket 233: 100%
  Sorting block of length 4 for bucket 233
  (Using difference cover)
Getting block 234 of 310
  Reserving size (27) for bucket 234
  Calculating Z arrays for bucket 234
  Entering block accumulator loop for bucket 234:
  bucket 234: 10%
  bucket 234: 20%
  bucket 234: 30%
  bucket 234: 40%
  Sorting block time: 00:00:00
Returning block of 5 for bucket 233
  bucket 234: 50%
  bucket 234: 60%
  bucket 234: 70%
  bucket 234: 80%
  bucket 234: 90%
  bucket 234: 100%
  Sorting block of length 26 for bucket 234
  (Using difference cover)
Getting block 235 of 310
  Reserving size (27) for bucket 235
  Calculating Z arrays for bucket 235
  Entering block accumulator loop for bucket 235:
  bucket 235: 10%
  bucket 235: 20%
  bucket 235: 30%
  bucket 235: 40%
Getting block 236 of 310
  Reserving size (27) for bucket 236
  Calculating Z arrays for bucket 236
  bucket 235: 50%
  bucket 235: 60%
  Entering block accumulator loop for bucket 236:
  bucket 235: 70%
  bucket 235: 80%
  bucket 236: 10%
  bucket 235: 90%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 234
  bucket 236: 20%
  bucket 235: 100%
  Sorting block of length 23 for bucket 235
  (Using difference cover)
  bucket 236: 30%
  bucket 236: 40%
  bucket 236: 50%
  bucket 236: 60%
  bucket 236: 70%
  bucket 236: 80%
  bucket 236: 90%
  bucket 236: 100%
  Sorting block of length 10 for bucket 236
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 24 for bucket 235
  Sorting block time: 00:00:00
Returning block of 11 for bucket 236
Getting block 237 of 310
  Reserving size (27) for bucket 237
  Calculating Z arrays for bucket 237
  Entering block accumulator loop for bucket 237:
  bucket 237: 10%
  bucket 237: 20%
  bucket 237: 30%
  bucket 237: 40%
Getting block 238 of 310
  Reserving size (27) for bucket 238
  Calculating Z arrays for bucket 238
  bucket 237: 50%
  bucket 237: 60%
  Entering block accumulator loop for bucket 238:
  bucket 237: 70%
  bucket 238: 10%
  bucket 237: 80%
  bucket 238: 20%
  bucket 238: 30%
  bucket 237: 90%
  bucket 238: 40%
  bucket 237: 100%
  Sorting block of length 25 for bucket 237
  bucket 238: 50%
  (Using difference cover)
  bucket 238: 60%
  bucket 238: 70%
  bucket 238: 80%
  bucket 238: 90%
  bucket 238: 100%
  Sorting block of length 8 for bucket 238
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26 for bucket 237
  Sorting block time: 00:00:00
Returning block of 9 for bucket 238
Getting block 239 of 310
  Reserving size (27) for bucket 239
  Calculating Z arrays for bucket 239
  Entering block accumulator loop for bucket 239:
  bucket 239: 10%
  bucket 239: 20%
  bucket 239: 30%
  bucket 239: 40%
  bucket 239: 50%
  bucket 239: 60%
  bucket 239: 70%
  bucket 239: 80%
  bucket 239: 90%
  bucket 239: 100%
  Sorting block of length 26 for bucket 239
  (Using difference cover)
Getting block 240 of 310
  Reserving size (27) for bucket 240
  Calculating Z arrays for bucket 240
  Entering block accumulator loop for bucket 240:
  bucket 240: 10%
  bucket 240: 20%
  bucket 240: 30%
  bucket 240: 40%
  bucket 240: 50%
  bucket 240: 60%
  bucket 240: 70%
  bucket 240: 80%
  bucket 240: 90%
  bucket 240: 100%
  Sorting block of length 6 for bucket 240
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 27 for bucket 239
  Sorting block time: 00:00:00
Returning block of 7 for bucket 240
Getting block 241 of 310
  Reserving size (27) for bucket 241
  Calculating Z arrays for bucket 241
  Entering block accumulator loop for bucket 241:
  bucket 241: 10%
  bucket 241: 20%
  bucket 241: 30%
  bucket 241: 40%
  bucket 241: 50%
  bucket 241: 60%
  bucket 241: 70%
  bucket 241: 80%
  bucket 241: 90%
  bucket 241: 100%
  Sorting block of length 26 for bucket 241
  (Using difference cover)
Getting block 242 of 310
  Reserving size (27) for bucket 242
  Calculating Z arrays for bucket 242
  Entering block accumulator loop for bucket 242:
  bucket 242: 10%
  bucket 242: 20%
  bucket 242: 30%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 241
  bucket 242: 40%
  bucket 242: 50%
  bucket 242: 60%
  bucket 242: 70%
  bucket 242: 80%
  bucket 242: 90%
  bucket 242: 100%
  Sorting block of length 4 for bucket 242
  (Using difference cover)
Getting block 243 of 310
  Reserving size (27) for bucket 243
  Calculating Z arrays for bucket 243
  Entering block accumulator loop for bucket 243:
  bucket 243: 10%
  bucket 243: 20%
  bucket 243: 30%
  bucket 243: 40%
  bucket 243: 50%
  Sorting block time: 00:00:00
Returning block of 5 for bucket 242
  bucket 243: 60%
  bucket 243: 70%
  bucket 243: 80%
  bucket 243: 90%
  bucket 243: 100%
  Sorting block of length 26 for bucket 243
  (Using difference cover)
Getting block 244 of 310
  Reserving size (27) for bucket 244
  Calculating Z arrays for bucket 244
  Entering block accumulator loop for bucket 244:
  bucket 244: 10%
  bucket 244: 20%
  bucket 244: 30%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 243
  bucket 244: 40%
  bucket 244: 50%
  bucket 244: 60%
  bucket 244: 70%
  bucket 244: 80%
  bucket 244: 90%
  bucket 244: 100%
  Sorting block of length 18 for bucket 244
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 19 for bucket 244
Getting block 245 of 310
  Reserving size (27) for bucket 245
  Calculating Z arrays for bucket 245
  Entering block accumulator loop for bucket 245:
  bucket 245: 10%
  bucket 245: 20%
  bucket 245: 30%
  bucket 245: 40%
  bucket 245: 50%
  bucket 245: 60%
  bucket 245: 70%
  bucket 245: 80%
  bucket 245: 90%
  bucket 245: 100%
  Sorting block of length 24 for bucket 245
  (Using difference cover)
Getting block 246 of 310
  Reserving size (27) for bucket 246
  Calculating Z arrays for bucket 246
  Entering block accumulator loop for bucket 246:
  bucket 246: 10%
  bucket 246: 20%
  bucket 246: 30%
  bucket 246: 40%
  bucket 246: 50%
  bucket 246: 60%
  bucket 246: 70%
  Sorting block time: 00:00:00
Returning block of 25 for bucket 245
  bucket 246: 80%
  bucket 246: 90%
  bucket 246: 100%
  Sorting block of length 17 for bucket 246
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 18 for bucket 246
Getting block 247 of 310
  Reserving size (27) for bucket 247
  Calculating Z arrays for bucket 247
  Entering block accumulator loop for bucket 247:
  bucket 247: 10%
  bucket 247: 20%
  bucket 247: 30%
  bucket 247: 40%
  bucket 247: 50%
Getting block 248 of 310
  Reserving size (27) for bucket 248
  Calculating Z arrays for bucket 248
  bucket 247: 60%
  bucket 247: 70%
  Entering block accumulator loop for bucket 248:
  bucket 247: 80%
  bucket 247: 90%
  bucket 248: 10%
  bucket 247: 100%
  Sorting block of length 22 for bucket 247
  (Using difference cover)
  bucket 248: 20%
  bucket 248: 30%
  bucket 248: 40%
  bucket 248: 50%
  bucket 248: 60%
  bucket 248: 70%
  bucket 248: 80%
  bucket 248: 90%
  bucket 248: 100%
  Sorting block of length 18 for bucket 248
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 23 for bucket 247
  Sorting block time: 00:00:00
Returning block of 19 for bucket 248
Getting block 249 of 310
  Reserving size (27) for bucket 249
  Calculating Z arrays for bucket 249
  Entering block accumulator loop for bucket 249:
  bucket 249: 10%
  bucket 249: 20%
  bucket 249: 30%
  bucket 249: 40%
  bucket 249: 50%
  bucket 249: 60%
  bucket 249: 70%
  bucket 249: 80%
  bucket 249: 90%
  bucket 249: 100%
Getting block 250 of 310
  Reserving size (27) for bucket 250
  Calculating Z arrays for bucket 250
  Sorting block of length 25 for bucket 249
  (Using difference cover)
  Entering block accumulator loop for bucket 250:
  bucket 250: 10%
  bucket 250: 20%
  bucket 250: 30%
  bucket 250: 40%
  bucket 250: 50%
  bucket 250: 60%
  bucket 250: 70%
  bucket 250: 80%
  bucket 250: 90%
  bucket 250: 100%
  Sorting block of length 23 for bucket 250
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26 for bucket 249
  Sorting block time: 00:00:00
Returning block of 24 for bucket 250
Getting block 251 of 310
  Reserving size (27) for bucket 251
  Calculating Z arrays for bucket 251
  Entering block accumulator loop for bucket 251:
  bucket 251: 10%
  bucket 251: 20%
Getting block 252 of 310
  Reserving size (27) for bucket 252
  Calculating Z arrays for bucket 252
  bucket 251: 30%
  Entering block accumulator loop for bucket 252:
  bucket 251: 40%
  bucket 252: 10%
  bucket 252: 20%
  bucket 251: 50%
  bucket 252: 30%
  bucket 251: 60%
  bucket 252: 40%
  bucket 252: 50%
  bucket 251: 70%
  bucket 252: 60%
  bucket 251: 80%
  bucket 252: 70%
  bucket 252: 80%
  bucket 251: 90%
  bucket 252: 90%
  bucket 251: 100%
  Sorting block of length 18 for bucket 251
  bucket 252: 100%
  (Using difference cover)
  Sorting block of length 23 for bucket 252
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 24 for bucket 252
  Sorting block time: 00:00:00
Returning block of 19 for bucket 251
Getting block 253 of 310
  Reserving size (27) for bucket 253
  Calculating Z arrays for bucket 253
  Entering block accumulator loop for bucket 253:
  bucket 253: 10%
  bucket 253: 20%
  bucket 253: 30%
  bucket 253: 40%
  bucket 253: 50%
  bucket 253: 60%
  bucket 253: 70%
  bucket 253: 80%
  bucket 253: 90%
  bucket 253: 100%
  Sorting block of length 14 for bucket 253
  (Using difference cover)
Getting block 254 of 310
  Reserving size (27) for bucket 254
  Calculating Z arrays for bucket 254
  Entering block accumulator loop for bucket 254:
  bucket 254: 10%
  bucket 254: 20%
  bucket 254: 30%
  bucket 254: 40%
  bucket 254: 50%
  bucket 254: 60%
Getting block 255 of 310
  Reserving size (27) for bucket 255
  Calculating Z arrays for bucket 255
  bucket 254: 70%
  bucket 254: 80%
  bucket 254: 90%
  Entering block accumulator loop for bucket 255:
  bucket 254: 100%
  Sorting block time: 00:00:00
  Sorting block of length 15 for bucket 254
  (Using difference cover)
Returning block of 15 for bucket 253
  bucket 255: 10%
  bucket 255: 20%
  bucket 255: 30%
  bucket 255: 40%
  bucket 255: 50%
  bucket 255: 60%
  bucket 255: 70%
  bucket 255: 80%
  bucket 255: 90%
  bucket 255: 100%
  Sorting block time: 00:00:00
  Sorting block of length 20 for bucket 255
  (Using difference cover)
Returning block of 16 for bucket 254
  Sorting block time: 00:00:00
Returning block of 21 for bucket 255
Getting block 256 of 310
  Reserving size (27) for bucket 256
  Calculating Z arrays for bucket 256
  Entering block accumulator loop for bucket 256:
  bucket 256: 10%
  bucket 256: 20%
  bucket 256: 30%
  bucket 256: 40%
  bucket 256: 50%
  bucket 256: 60%
  bucket 256: 70%
  bucket 256: 80%
  bucket 256: 90%
  bucket 256: 100%
  Sorting block of length 26 for bucket 256
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 27 for bucket 256
Getting block 257 of 310
  Reserving size (27) for bucket 257
  Calculating Z arrays for bucket 257
  Entering block accumulator loop for bucket 257:
  bucket 257: 10%
  bucket 257: 20%
  bucket 257: 30%
Getting block 258 of 310
  Reserving size (27) for bucket 258
  Calculating Z arrays for bucket 258
  bucket 257: 40%
  bucket 257: 50%
  Entering block accumulator loop for bucket 258:
  bucket 257: 60%
  bucket 258: 10%
  bucket 257: 70%
  bucket 258: 20%
  bucket 257: 80%
  bucket 258: 30%
  bucket 257: 90%
  bucket 258: 40%
  bucket 257: 100%
  bucket 258: 50%
  Sorting block of length 25 for bucket 257
  (Using difference cover)
  bucket 258: 60%
  bucket 258: 70%
  bucket 258: 80%
  bucket 258: 90%
  bucket 258: 100%
  Sorting block of length 26 for bucket 258
  (Using difference cover)
Getting block 259 of 310
  Reserving size (27) for bucket 259
  Calculating Z arrays for bucket 259
  Entering block accumulator loop for bucket 259:
  bucket 259: 10%
  Sorting block time: 00:00:00
Returning block of 26 for bucket 257
  bucket 259: 20%
  Sorting block time: 00:00:00
  bucket 259: 30%
Returning block of 27 for bucket 258
  bucket 259: 40%
  bucket 259: 50%
  bucket 259: 60%
  bucket 259: 70%
  bucket 259: 80%
  bucket 259: 90%
  bucket 259: 100%
  Sorting block of length 12 for bucket 259
  (Using difference cover)
Getting block 260 of 310
  Reserving size (27) for bucket 260
  Calculating Z arrays for bucket 260
  Entering block accumulator loop for bucket 260:
  bucket 260: 10%
  bucket 260: 20%
  bucket 260: 30%
  bucket 260: 40%
  bucket 260: 50%
  bucket 260: 60%
Getting block 261 of 310
  Reserving size (27) for bucket 261
  Calculating Z arrays for bucket 261
  bucket 260: 70%
  Sorting block time: 00:00:00
Returning block of 13 for bucket 259
  bucket 260: 80%
  Entering block accumulator loop for bucket 261:
  bucket 260: 90%
  bucket 261: 10%
  bucket 260: 100%
  Sorting block of length 25 for bucket 260
  (Using difference cover)
  bucket 261: 20%
  bucket 261: 30%
  bucket 261: 40%
  bucket 261: 50%
  bucket 261: 60%
  bucket 261: 70%
  bucket 261: 80%
  bucket 261: 90%
  bucket 261: 100%
  Sorting block of length 19 for bucket 261
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26 for bucket 260
  Sorting block time: 00:00:00
Returning block of 20 for bucket 261
Getting block 262 of 310
  Reserving size (27) for bucket 262
  Calculating Z arrays for bucket 262
  Entering block accumulator loop for bucket 262:
  bucket 262: 10%
  bucket 262: 20%
  bucket 262: 30%
  bucket 262: 40%
  bucket 262: 50%
  bucket 262: 60%
  bucket 262: 70%
  bucket 262: 80%
  bucket 262: 90%
  bucket 262: 100%
  Sorting block of length 26 for bucket 262
  (Using difference cover)
Getting block 263 of 310
  Reserving size (27) for bucket 263
  Calculating Z arrays for bucket 263
  Entering block accumulator loop for bucket 263:
  Sorting block time: 00:00:00
Returning block of 27 for bucket 262
  bucket 263: 10%
  bucket 263: 20%
  bucket 263: 30%
  bucket 263: 40%
  bucket 263: 50%
  bucket 263: 60%
  bucket 263: 70%
  bucket 263: 80%
  bucket 263: 90%
Getting block 264 of 310
  Reserving size (27) for bucket 264
  Calculating Z arrays for bucket 264
  bucket 263: 100%
  Sorting block of length 18 for bucket 263
  (Using difference cover)
  Entering block accumulator loop for bucket 264:
  bucket 264: 10%
  bucket 264: 20%
  bucket 264: 30%
  bucket 264: 40%
  bucket 264: 50%
Getting block 265 of 310
  Reserving size (27) for bucket 265
  bucket 264: 60%
  Calculating Z arrays for bucket 265
  bucket 264: 70%
  Entering block accumulator loop for bucket 265:
  bucket 264: 80%
  bucket 264: 90%
  bucket 265: 10%
  bucket 264: 100%
  bucket 265: 20%
  Sorting block of length 21 for bucket 264
  (Using difference cover)
  bucket 265: 30%
  bucket 265: 40%
  bucket 265: 50%
  bucket 265: 60%
  bucket 265: 70%
  bucket 265: 80%
  bucket 265: 90%
  bucket 265: 100%
  Sorting block of length 24 for bucket 265
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 19 for bucket 263
Getting block 266 of 310
  Reserving size (27) for bucket 266
  Calculating Z arrays for bucket 266
  Entering block accumulator loop for bucket 266:
  Sorting block time: 00:00:00
  bucket 266: 10%
Returning block of 22 for bucket 264
  bucket 266: 20%
  Sorting block time: 00:00:00
Returning block of 25 for bucket 265
  bucket 266: 30%
  bucket 266: 40%
  bucket 266: 50%
  bucket 266: 60%
  bucket 266: 70%
  bucket 266: 80%
  bucket 266: 90%
  bucket 266: 100%
  Sorting block of length 8 for bucket 266
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 9 for bucket 266
Getting block 267 of 310
  Reserving size (27) for bucket 267
  Calculating Z arrays for bucket 267
  Entering block accumulator loop for bucket 267:
  bucket 267: 10%
  bucket 267: 20%
  bucket 267: 30%
  bucket 267: 40%
  bucket 267: 50%
  bucket 267: 60%
  bucket 267: 70%
Getting block 268 of 310
  Reserving size (27) for bucket 268
  Calculating Z arrays for bucket 268
  bucket 267: 80%
  bucket 267: 90%
  bucket 267: 100%
  Sorting block of length 26 for bucket 267
  (Using difference cover)
  Entering block accumulator loop for bucket 268:
  bucket 268: 10%
  bucket 268: 20%
  bucket 268: 30%
  bucket 268: 40%
  bucket 268: 50%
  bucket 268: 60%
  bucket 268: 70%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 267
  bucket 268: 80%
  bucket 268: 90%
  bucket 268: 100%
  Sorting block of length 26 for bucket 268
  (Using difference cover)
Getting block 269 of 310
  Reserving size (27) for bucket 269
  Calculating Z arrays for bucket 269
  Entering block accumulator loop for bucket 269:
  bucket 269: 10%
  Sorting block time: 00:00:00
  bucket 269: 20%
Returning block of 27 for bucket 268
  bucket 269: 30%
  bucket 269: 40%
  bucket 269: 50%
  bucket 269: 60%
  bucket 269: 70%
  bucket 269: 80%
  bucket 269: 90%
  bucket 269: 100%
  Sorting block of length 25 for bucket 269
  (Using difference cover)
Getting block 270 of 310
  Reserving size (27) for bucket 270
  Calculating Z arrays for bucket 270
  Entering block accumulator loop for bucket 270:
  bucket 270: 10%
  bucket 270: 20%
  bucket 270: 30%
  bucket 270: 40%
  bucket 270: 50%
  bucket 270: 60%
  bucket 270: 70%
  bucket 270: 80%
  bucket 270: 90%
  Sorting block time: 00:00:00
Returning block of 26 for bucket 269
  bucket 270: 100%
  Sorting block of length 19 for bucket 270
  (Using difference cover)
Getting block 271 of 310
  Reserving size (27) for bucket 271
  Calculating Z arrays for bucket 271
  Entering block accumulator loop for bucket 271:
  bucket 271: 10%
  bucket 271: 20%
  bucket 271: 30%
  Sorting block time: 00:00:00
Returning block of 20 for bucket 270
  bucket 271: 40%
  bucket 271: 50%
  bucket 271: 60%
  bucket 271: 70%
  bucket 271: 80%
  bucket 271: 90%
  bucket 271: 100%
  Sorting block of length 16 for bucket 271
  (Using difference cover)
Getting block 272 of 310
  Reserving size (27) for bucket 272
  Calculating Z arrays for bucket 272
  Entering block accumulator loop for bucket 272:
  bucket 272: 10%
  bucket 272: 20%
  bucket 272: 30%
  Sorting block time: 00:00:00
Returning block of 17 for bucket 271
  bucket 272: 40%
  bucket 272: 50%
Getting block 273 of 310
  Reserving size (27) for bucket 273
  Calculating Z arrays for bucket 273
  bucket 272: 60%
  bucket 272: 70%
  Entering block accumulator loop for bucket 273:
  bucket 272: 80%
  bucket 273: 10%
  bucket 273: 20%
  bucket 272: 90%
  bucket 273: 30%
  bucket 272: 100%
  Sorting block of length 26 for bucket 272
  (Using difference cover)
  bucket 273: 40%
  bucket 273: 50%
  bucket 273: 60%
  bucket 273: 70%
  bucket 273: 80%
  bucket 273: 90%
  bucket 273: 100%
  Sorting block of length 26 for bucket 273
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 27 for bucket 272
  Sorting block time: 00:00:00
Returning block of 27 for bucket 273
Getting block 274 of 310
  Reserving size (27) for bucket 274
  Calculating Z arrays for bucket 274
  Entering block accumulator loop for bucket 274:
  bucket 274: 10%
  bucket 274: 20%
  bucket 274: 30%
  bucket 274: 40%
Getting block 275 of 310
  Reserving size (27) for bucket 275
  Calculating Z arrays for bucket 275
  bucket 274: 50%
  bucket 274: 60%
  Entering block accumulator loop for bucket 275:
  bucket 274: 70%
  bucket 275: 10%
  bucket 274: 80%
  bucket 275: 20%
  bucket 274: 90%
  bucket 275: 30%
  bucket 274: 100%
  Sorting block of length 9 for bucket 274
  (Using difference cover)
  bucket 275: 40%
  bucket 275: 50%
  bucket 275: 60%
  bucket 275: 70%
  bucket 275: 80%
  bucket 275: 90%
  bucket 275: 100%
  Sorting block of length 17 for bucket 275
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 10 for bucket 274
  Sorting block time: 00:00:00
Returning block of 18 for bucket 275
Getting block 276 of 310
  Reserving size (27) for bucket 276
  Calculating Z arrays for bucket 276
  Entering block accumulator loop for bucket 276:
  bucket 276: 10%
  bucket 276: 20%
  bucket 276: 30%
  bucket 276: 40%
  bucket 276: 50%
  bucket 276: 60%
  bucket 276: 70%
  bucket 276: 80%
Getting block 277 of 310
  Reserving size (27) for bucket 277
  Calculating Z arrays for bucket 277
  bucket 276: 90%
  Entering block accumulator loop for bucket 277:
  bucket 276: 100%
  Sorting block of length 26 for bucket 276
  (Using difference cover)
  bucket 277: 10%
  bucket 277: 20%
  bucket 277: 30%
  bucket 277: 40%
  bucket 277: 50%
  bucket 277: 60%
  bucket 277: 70%
  bucket 277: 80%
  bucket 277: 90%
  bucket 277: 100%
  Sorting block of length 16 for bucket 277
  (Using difference cover)
Getting block 278 of 310
  Reserving size (27) for bucket 278
  Calculating Z arrays for bucket 278
  Entering block accumulator loop for bucket 278:
  bucket 278: 10%
  bucket 278: 20%
  bucket 278: 30%
  bucket 278: 40%
  bucket 278: 50%
  bucket 278: 60%
  bucket 278: 70%
  bucket 278: 80%
  bucket 278: 90%
  bucket 278: 100%
  Sorting block of length 11 for bucket 278
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 27 for bucket 276
Getting block 279 of 310
  Reserving size (27) for bucket 279
  Calculating Z arrays for bucket 279
  Entering block accumulator loop for bucket 279:
  bucket 279: 10%
  Sorting block time: 00:00:00
Returning block of 17 for bucket 277
  bucket 279: 20%
  bucket 279: 30%
  Sorting block time: 00:00:00
Returning block of 12 for bucket 278
  bucket 279: 40%
  bucket 279: 50%
  bucket 279: 60%
  bucket 279: 70%
  bucket 279: 80%
  bucket 279: 90%
  bucket 279: 100%
  Sorting block of length 24 for bucket 279
  (Using difference cover)
Getting block 280 of 310
  Reserving size (27) for bucket 280
  Calculating Z arrays for bucket 280
  Sorting block time: 00:00:00
Returning block of 25 for bucket 279
  Entering block accumulator loop for bucket 280:
  bucket 280: 10%
  bucket 280: 20%
  bucket 280: 30%
  bucket 280: 40%
  bucket 280: 50%
  bucket 280: 60%
  bucket 280: 70%
  bucket 280: 80%
  bucket 280: 90%
  bucket 280: 100%
  Sorting block of length 6 for bucket 280
  (Using difference cover)
Getting block 281 of 310
  Reserving size (27) for bucket 281
  Calculating Z arrays for bucket 281
  Entering block accumulator loop for bucket 281:
  bucket 281: 10%
  bucket 281: 20%
  bucket 281: 30%
  bucket 281: 40%
  bucket 281: 50%
  Sorting block time: 00:00:00
Returning block of 7 for bucket 280
  bucket 281: 60%
  bucket 281: 70%
  bucket 281: 80%
Getting block 282 of 310
  Reserving size (27) for bucket 282
  Calculating Z arrays for bucket 282
  bucket 281: 90%
  bucket 281: 100%
  Sorting block of length 25 for bucket 281
  (Using difference cover)
  Entering block accumulator loop for bucket 282:
  bucket 282: 10%
  bucket 282: 20%
Getting block 283 of 310
  Reserving size (27) for bucket 283
  Calculating Z arrays for bucket 283
  bucket 282: 30%
  bucket 282: 40%
  Entering block accumulator loop for bucket 283:
  bucket 282: 50%
  bucket 283: 10%
  bucket 283: 20%
  bucket 282: 60%
  bucket 283: 30%
  bucket 282: 70%
  bucket 283: 40%
  bucket 283: 50%
  bucket 282: 80%
  bucket 283: 60%
  bucket 282: 90%
  bucket 283: 70%
  bucket 283: 80%
  bucket 282: 100%
  Sorting block of length 25 for bucket 282
  (Using difference cover)
  bucket 283: 90%
  bucket 283: 100%
  Sorting block of length 24 for bucket 283
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26 for bucket 281
Getting block 284 of 310
  Reserving size (27) for bucket 284
  Calculating Z arrays for bucket 284
  Sorting block time: 00:00:00
Returning block of 26 for bucket 282
  Sorting block time: 00:00:00
  Entering block accumulator loop for bucket 284:
Returning block of 25 for bucket 283
  bucket 284: 10%
  bucket 284: 20%
  bucket 284: 30%
Getting block 285 of 310
  Reserving size (27) for bucket 285
  Calculating Z arrays for bucket 285
  bucket 284: 40%
  Entering block accumulator loop for bucket 285:
  bucket 284: 50%
  bucket 285: 10%
  bucket 284: 60%
  bucket 285: 20%
  bucket 284: 70%
  bucket 285: 30%
  bucket 284: 80%
  bucket 285: 40%
  bucket 284: 90%
  bucket 285: 50%
  bucket 285: 60%
  bucket 284: 100%
  Sorting block of length 24 for bucket 284
  (Using difference cover)
  bucket 285: 70%
  bucket 285: 80%
  bucket 285: 90%
  bucket 285: 100%
  Sorting block of length 24 for bucket 285
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 25 for bucket 284
  Sorting block time: 00:00:00
Returning block of 25 for bucket 285
Getting block 286 of 310
  Reserving size (27) for bucket 286
  Calculating Z arrays for bucket 286
  Entering block accumulator loop for bucket 286:
  bucket 286: 10%
  bucket 286: 20%
  bucket 286: 30%
  bucket 286: 40%
  bucket 286: 50%
Getting block 287 of 310
  Reserving size (27) for bucket 287
  Calculating Z arrays for bucket 287
  bucket 286: 60%
  bucket 286: 70%
  Entering block accumulator loop for bucket 287:
  bucket 286: 80%
  bucket 287: 10%
  bucket 286: 90%
  bucket 287: 20%
  bucket 286: 100%
  Sorting block of length 25 for bucket 286
  (Using difference cover)
  bucket 287: 30%
  bucket 287: 40%
  bucket 287: 50%
  bucket 287: 60%
  bucket 287: 70%
  bucket 287: 80%
  bucket 287: 90%
  bucket 287: 100%
  Sorting block of length 17 for bucket 287
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 26 for bucket 286
  Sorting block time: 00:00:00
Returning block of 18 for bucket 287
Getting block 288 of 310
  Reserving size (27) for bucket 288
  Calculating Z arrays for bucket 288
  Entering block accumulator loop for bucket 288:
  bucket 288: 10%
  bucket 288: 20%
  bucket 288: 30%
  bucket 288: 40%
  bucket 288: 50%
  bucket 288: 60%
  bucket 288: 70%
  bucket 288: 80%
  bucket 288: 90%
  bucket 288: 100%
  Sorting block of length 22 for bucket 288
  (Using difference cover)
Getting block 289 of 310
  Reserving size (27) for bucket 289
  Calculating Z arrays for bucket 289
  Entering block accumulator loop for bucket 289:
  bucket 289: 10%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 288
  bucket 289: 20%
  bucket 289: 30%
  bucket 289: 40%
  bucket 289: 50%
  bucket 289: 60%
  bucket 289: 70%
  bucket 289: 80%
  bucket 289: 90%
  bucket 289: 100%
  Sorting block of length 24 for bucket 289
  (Using difference cover)
Getting block 290 of 310
  Reserving size (27) for bucket 290
  Calculating Z arrays for bucket 290
  Entering block accumulator loop for bucket 290:
  bucket 290: 10%
  bucket 290: 20%
  bucket 290: 30%
  bucket 290: 40%
Getting block 291 of 310
  Reserving size (27) for bucket 291
  Calculating Z arrays for bucket 291
  bucket 290: 50%
  bucket 290: 60%
  Entering block accumulator loop for bucket 291:
  bucket 290: 70%
  bucket 291: 10%
  bucket 290: 80%
  bucket 291: 20%
  bucket 290: 90%
  bucket 290: 100%
  Sorting block time: 00:00:00
  bucket 291: 30%
  Sorting block of length 20 for bucket 290
  (Using difference cover)
Returning block of 25 for bucket 289
  bucket 291: 40%
  bucket 291: 50%
  bucket 291: 60%
  bucket 291: 70%
  bucket 291: 80%
  bucket 291: 90%
  bucket 291: 100%
  Sorting block of length 23 for bucket 291
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 21 for bucket 290
  Sorting block time: 00:00:00
Returning block of 24 for bucket 291
Getting block 292 of 310
  Reserving size (27) for bucket 292
  Calculating Z arrays for bucket 292
  Entering block accumulator loop for bucket 292:
  bucket 292: 10%
  bucket 292: 20%
  bucket 292: 30%
Getting block 293 of 310
  Reserving size (27) for bucket 293
  Calculating Z arrays for bucket 293
  bucket 292: 40%
  bucket 292: 50%
  Entering block accumulator loop for bucket 293:
  bucket 292: 60%
  bucket 293: 10%
  bucket 292: 70%
  bucket 293: 20%
  bucket 292: 80%
  bucket 293: 30%
  bucket 293: 40%
  bucket 292: 90%
  bucket 293: 50%
  bucket 292: 100%
  Sorting block of length 21 for bucket 292
  (Using difference cover)
  bucket 293: 60%
  bucket 293: 70%
  bucket 293: 80%
  bucket 293: 90%
  bucket 293: 100%
  Sorting block of length 14 for bucket 293
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 22 for bucket 292
Getting block 294 of 310
  Reserving size (27) for bucket 294
  Calculating Z arrays for bucket 294
  Sorting block time: 00:00:00
Returning block of 15 for bucket 293
  Entering block accumulator loop for bucket 294:
  bucket 294: 10%
  bucket 294: 20%
  bucket 294: 30%
  bucket 294: 40%
  bucket 294: 50%
  bucket 294: 60%
  bucket 294: 70%
  bucket 294: 80%
Getting block 295 of 310
  Reserving size (27) for bucket 295
  bucket 294: 90%
  Calculating Z arrays for bucket 295
  bucket 294: 100%
  Sorting block of length 14 for bucket 294
  (Using difference cover)
  Entering block accumulator loop for bucket 295:
  bucket 295: 10%
  bucket 295: 20%
  bucket 295: 30%
  bucket 295: 40%
  bucket 295: 50%
  bucket 295: 60%
  bucket 295: 70%
  Sorting block time: 00:00:00
Returning block of 15 for bucket 294
  bucket 295: 80%
  bucket 295: 90%
  bucket 295: 100%
  Sorting block of length 17 for bucket 295
  (Using difference cover)
  Sorting block time: 00:00:00
Getting block 296 of 310
  Reserving size (27) for bucket 296
  Calculating Z arrays for bucket 296
Returning block of 18 for bucket 295
  Entering block accumulator loop for bucket 296:
  bucket 296: 10%
  bucket 296: 20%
  bucket 296: 30%
  bucket 296: 40%
  bucket 296: 50%
  bucket 296: 60%
  bucket 296: 70%
  bucket 296: 80%
  bucket 296: 90%
  bucket 296: 100%
  Sorting block of length 15 for bucket 296
  (Using difference cover)
Getting block 297 of 310
  Reserving size (27) for bucket 297
  Calculating Z arrays for bucket 297
  Entering block accumulator loop for bucket 297:
  bucket 297: 10%
  bucket 297: 20%
  bucket 297: 30%
  bucket 297: 40%
  bucket 297: 50%
  bucket 297: 60%
  bucket 297: 70%
  bucket 297: 80%
  bucket 297: 90%
  Sorting block time: 00:00:00
Returning block of 16 for bucket 296
  bucket 297: 100%
  Sorting block of length 25 for bucket 297
  (Using difference cover)
Getting block 298 of 310
  Reserving size (27) for bucket 298
  Calculating Z arrays for bucket 298
  Entering block accumulator loop for bucket 298:
  bucket 298: 10%
  Sorting block time: 00:00:00
Returning block of 26 for bucket 297
  bucket 298: 20%
  bucket 298: 30%
  bucket 298: 40%
  bucket 298: 50%
  bucket 298: 60%
  bucket 298: 70%
  bucket 298: 80%
  bucket 298: 90%
  bucket 298: 100%
  Sorting block of length 18 for bucket 298
  (Using difference cover)
Getting block 299 of 310
  Reserving size (27) for bucket 299
  Calculating Z arrays for bucket 299
  Entering block accumulator loop for bucket 299:
  bucket 299: 10%
  bucket 299: 20%
  bucket 299: 30%
  Sorting block time: 00:00:00
Returning block of 19 for bucket 298
Getting block 300 of 310
  Reserving size (27) for bucket 300
  Calculating Z arrays for bucket 300
  bucket 299: 40%
  bucket 299: 50%
  Entering block accumulator loop for bucket 300:
  bucket 299: 60%
  bucket 300: 10%
  bucket 299: 70%
  bucket 300: 20%
  bucket 299: 80%
  bucket 300: 30%
  bucket 299: 90%
  bucket 300: 40%
  bucket 299: 100%
  bucket 300: 50%
  Sorting block of length 18 for bucket 299
  (Using difference cover)
  bucket 300: 60%
  bucket 300: 70%
  bucket 300: 80%
  bucket 300: 90%
  bucket 300: 100%
  Sorting block of length 23 for bucket 300
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 19 for bucket 299
  Sorting block time: 00:00:00
Returning block of 24 for bucket 300
Getting block 301 of 310
  Reserving size (27) for bucket 301
  Calculating Z arrays for bucket 301
  Entering block accumulator loop for bucket 301:
  bucket 301: 10%
  bucket 301: 20%
  bucket 301: 30%
  bucket 301: 40%
  bucket 301: 50%
  bucket 301: 60%
  bucket 301: 70%
  bucket 301: 80%
  bucket 301: 90%
Getting block 302 of 310
  Reserving size (27) for bucket 302
  Calculating Z arrays for bucket 302
  bucket 301: 100%
  Sorting block of length 26 for bucket 301
  (Using difference cover)
  Entering block accumulator loop for bucket 302:
  bucket 302: 10%
  bucket 302: 20%
  bucket 302: 30%
  bucket 302: 40%
  bucket 302: 50%
  bucket 302: 60%
  bucket 302: 70%
  bucket 302: 80%
  bucket 302: 90%
Getting block 303 of 310
  Sorting block time: 00:00:00
Returning block of 27 for bucket 301
  Reserving size (27) for bucket 303
  Calculating Z arrays for bucket 303
  bucket 302: 100%
  Sorting block of length 12 for bucket 302
  (Using difference cover)
  Entering block accumulator loop for bucket 303:
  bucket 303: 10%
  bucket 303: 20%
  bucket 303: 30%
  bucket 303: 40%
Getting block 304 of 310
  Reserving size (27) for bucket 304
  Calculating Z arrays for bucket 304
  bucket 303: 50%
  bucket 303: 60%
  Entering block accumulator loop for bucket 304:
  bucket 303: 70%
  bucket 304: 10%
  bucket 303: 80%
  bucket 304: 20%
  bucket 303: 90%
  bucket 304: 30%
  Sorting block time: 00:00:00
Returning block of 13 for bucket 302
  bucket 303: 100%
  bucket 304: 40%
  Sorting block of length 14 for bucket 303
  (Using difference cover)
  bucket 304: 50%
  bucket 304: 60%
  bucket 304: 70%
  bucket 304: 80%
  bucket 304: 90%
  bucket 304: 100%
  Sorting block of length 19 for bucket 304
  (Using difference cover)
Getting block 305 of 310
  Reserving size (27) for bucket 305
  Calculating Z arrays for bucket 305
  Sorting block time: 00:00:00
Returning block of 15 for bucket 303
  Entering block accumulator loop for bucket 305:
  bucket 305: 10%
  Sorting block time: 00:00:00
Returning block of 20 for bucket 304
  bucket 305: 20%
  bucket 305: 30%
  bucket 305: 40%
Getting block 306 of 310
  Reserving size (27) for bucket 306
  Calculating Z arrays for bucket 306
  bucket 305: 50%
  Entering block accumulator loop for bucket 306:
  bucket 305: 60%
  bucket 306: 10%
  bucket 305: 70%
  bucket 306: 20%
  bucket 305: 80%
  bucket 306: 30%
  bucket 305: 90%
  bucket 306: 40%
  bucket 305: 100%
  Sorting block of length 26 for bucket 305
  (Using difference cover)
  bucket 306: 50%
  bucket 306: 60%
  bucket 306: 70%
  bucket 306: 80%
  bucket 306: 90%
  bucket 306: 100%
  Sorting block of length 23 for bucket 306
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 27 for bucket 305
Getting block 307 of 310
  Sorting block time: 00:00:00
  Reserving size (27) for bucket 307
  Calculating Z arrays for bucket 307
Returning block of 24 for bucket 306
  Entering block accumulator loop for bucket 307:
  bucket 307: 10%
  bucket 307: 20%
  bucket 307: 30%
  bucket 307: 40%
  bucket 307: 50%
  bucket 307: 60%
  bucket 307: 70%
  bucket 307: 80%
  bucket 307: 90%
  bucket 307: 100%
  Sorting block of length 17 for bucket 307
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 18 for bucket 307
Getting block 308 of 310
  Reserving size (27) for bucket 308
  Calculating Z arrays for bucket 308
  Entering block accumulator loop for bucket 308:
  bucket 308: 10%
  bucket 308: 20%
  bucket 308: 30%
Getting block 309 of 310
  Reserving size (27) for bucket 309
  Calculating Z arrays for bucket 309
  bucket 308: 40%
  Entering block accumulator loop for bucket 309:
  bucket 308: 50%
  bucket 309: 10%
  bucket 308: 60%
  bucket 309: 20%
  bucket 308: 70%
  bucket 309: 30%
  bucket 309: 40%
  bucket 308: 80%
  bucket 309: 50%
  bucket 308: 90%
  bucket 309: 60%
  bucket 309: 70%
  bucket 308: 100%
  Sorting block of length 18 for bucket 308
  (Using difference cover)
  bucket 309: 80%
  bucket 309: 90%
  bucket 309: 100%
  Sorting block of length 26 for bucket 309
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 19 for bucket 308
  Sorting block time: 00:00:00
Getting block 310 of 310
Returning block of 27 for bucket 309
  Reserving size (27) for bucket 310
  Calculating Z arrays for bucket 310
  Entering block accumulator loop for bucket 310:
  bucket 310: 10%
  bucket 310: 20%
  bucket 310: 30%
  bucket 310: 40%
  bucket 310: 50%
  bucket 310: 60%
  bucket 310: 70%
  bucket 310: 80%
  bucket 310: 90%
  bucket 310: 100%
  Sorting block of length 26 for bucket 310
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 27 for bucket 310

Finished index generation for p_salmo from /users/PDS0325/sachitk26/packages/tart/validation/alignment/outputs/p_salmo/switch_seqs_delta1000-1000

Found these reference files:
/users/PDS0325/sachitk26/packages/tart/validation/alignment/outputs/p_cholor_aureo3084/switch_seqs_delta1000-1000/unified.fna
-------------------------------------------------
-------------------------------------------------

Generating index for /users/PDS0325/sachitk26/packages/tart/validation/alignment/outputs/p_cholor_aureo3084/switch_seqs_delta1000-1000/unified.fna
Success
Building DifferenceCoverSample
  Building sPrime
  Building sPrimeOrder
  V-Sorting samples
  V-Sorting samples time: 00:00:00
  Allocating rank array
  Ranking v-sort output
  Ranking v-sort output time: 00:00:00
  Invoking Larsson-Sadakane on ranks
  Invoking Larsson-Sadakane on ranks time: 00:00:00
  Sanity-checking and returning
Building samples
Reserving space for 474 sample suffixes
Generating random suffixes
QSorting 474 sample offsets, eliminating duplicates
QSorting sample offsets, eliminating duplicates time: 00:00:00
Multikey QSorting 466 samples
  (Using difference cover)
  Multikey QSorting samples time: 00:00:00
Calculating bucket sizes
Splitting and merging
  Splitting and merging time: 00:00:00
Split 65, merged 205; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 35, merged 37; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 16, merged 17; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 5, merged 12; iterating...
Splitting and merging
  Splitting and merging time: 00:00:00
Split 1, merged 2; iterating...
Avg bucket size: 46.9652 (target: 64)
Getting block 1 of 316
Getting block 2 of 316
Getting block 3 of 316
  Reserving size (65) for bucket 3
  Reserving size (65) for bucket 2
Getting block 5 of 316
  Reserving size (65) for bucket 5
  Calculating Z arrays for bucket 3
  Calculating Z arrays for bucket 5
  Reserving size (65) for bucket 1
Getting block 10 of 316
Getting block 6 of 316
  Reserving size (65) for bucket 6
  Reserving size (65) for bucket 10
Getting block 7 of 316
  Calculating Z arrays for bucket 2
Getting block 8 of 316
  Calculating Z arrays for bucket 6
  Calculating Z arrays for bucket 1
Getting block 4 of 316
Getting block 12 of 316
Getting block 11 of 316
  Entering block accumulator loop for bucket 6:
  Entering block accumulator loop for bucket 5:
Getting block 13 of 316
  Calculating Z arrays for bucket 10
  Entering block accumulator loop for bucket 1:
Getting block 16 of 316
Getting block 14 of 316
  Reserving size (65) for bucket 8
  bucket 6: 10%
  Entering block accumulator loop for bucket 10:
  Reserving size (65) for bucket 16
Getting block 19 of 316
  bucket 6: 20%
  Reserving size (65) for bucket 11
Getting block 18 of 316
Getting block 17 of 316
  bucket 1: 10%
  Entering block accumulator loop for bucket 3:
Getting block 24 of 316
  Reserving size (65) for bucket 14
  Reserving size (65) for bucket 18
  Entering block accumulator loop for bucket 2:
Getting block 26 of 316
  bucket 1: 20%
  Calculating Z arrays for bucket 18
  Reserving size (65) for bucket 13
Getting block 15 of 316
  Calculating Z arrays for bucket 11
Getting block 30 of 316
  Calculating Z arrays for bucket 8
  Reserving size (65) for bucket 4
  Reserving size (65) for bucket 30
Getting block 28 of 316
Getting block 25 of 316
Getting block 20 of 316
  Calculating Z arrays for bucket 16
  Entering block accumulator loop for bucket 11:
  Calculating Z arrays for bucket 13
Getting block 21 of 316
  Calculating Z arrays for bucket 4
Getting block 34 of 316
  Reserving size (65) for bucket 7
  Reserving size (65) for bucket 12
  Entering block accumulator loop for bucket 4:
  Calculating Z arrays for bucket 14
  bucket 6: 30%
  Entering block accumulator loop for bucket 18:
  bucket 2: 10%
Getting block 29 of 316
  Entering block accumulator loop for bucket 8:
  Calculating Z arrays for bucket 30
  Reserving size (65) for bucket 28
  Reserving size (65) for bucket 17
  Reserving size (65) for bucket 29
  bucket 2: 20%
  bucket 5: 10%
  Calculating Z arrays for bucket 28
  bucket 3: 10%
Getting block 37 of 316
  Reserving size (65) for bucket 34
Getting block 33 of 316
  bucket 3: 20%
  bucket 8: 10%
Getting block 31 of 316
  Reserving size (65) for bucket 33
Getting block 40 of 316
Getting block 23 of 316
Getting block 9 of 316
  Reserving size (65) for bucket 15
  Entering block accumulator loop for bucket 14:
  bucket 1: 30%
  Reserving size (65) for bucket 21
  Reserving size (65) for bucket 9
  bucket 18: 10%
Getting block 38 of 316
  Entering block accumulator loop for bucket 30:
  Reserving size (65) for bucket 23
  Entering block accumulator loop for bucket 28:
  Reserving size (65) for bucket 37
Getting block 36 of 316
  Calculating Z arrays for bucket 21
Getting block 35 of 316
  Reserving size (65) for bucket 26
  Reserving size (65) for bucket 24
  Calculating Z arrays for bucket 37
  Calculating Z arrays for bucket 9
  Reserving size (65) for bucket 35
Getting block 22 of 316
  Reserving size (65) for bucket 36
  bucket 1: 40%
  Entering block accumulator loop for bucket 37:
  bucket 6: 40%
  bucket 18: 20%
Getting block 32 of 316
  bucket 6: 50%
  bucket 11: 10%
  Reserving size (65) for bucket 20
  Calculating Z arrays for bucket 34
  bucket 2: 30%
  bucket 8: 20%
  Calculating Z arrays for bucket 23
Getting block 42 of 316
  bucket 5: 20%
  bucket 2: 40%
  bucket 10: 10%
  Calculating Z arrays for bucket 20
  bucket 11: 20%
  Entering block accumulator loop for bucket 9:
  Calculating Z arrays for bucket 17
  bucket 18: 30%
  Reserving size (65) for bucket 38
  Entering block accumulator loop for bucket 21:
  bucket 1: 50%
  Entering block accumulator loop for bucket 23:
  Calculating Z arrays for bucket 36
  Entering block accumulator loop for bucket 13:
  Calculating Z arrays for bucket 15
  Calculating Z arrays for bucket 38
  Reserving size (65) for bucket 32
  Entering block accumulator loop for bucket 16:
  Calculating Z arrays for bucket 7
  Calculating Z arrays for bucket 12
  bucket 10: 20%
  bucket 5: 30%
  bucket 30: 10%
  Entering block accumulator loop for bucket 34:
  Calculating Z arrays for bucket 32
  bucket 8: 30%
  Reserving size (65) for bucket 31
  Reserving size (65) for bucket 25
  bucket 14: 10%
  Reserving size (65) for bucket 42
  bucket 18: 40%
  Calculating Z arrays for bucket 35
  bucket 1: 60%
  Entering block accumulator loop for bucket 17:
  Entering block accumulator loop for bucket 20:
  Entering block accumulator loop for bucket 7:
  Reserving size (65) for bucket 22
  Calculating Z arrays for bucket 25
  bucket 5: 40%
Getting block 27 of 316
  Calculating Z arrays for bucket 22
  Entering block accumulator loop for bucket 15:
  bucket 8: 40%
  Calculating Z arrays for bucket 33
  bucket 28: 10%
  bucket 30: 20%
  bucket 5: 50%
  bucket 1: 70%
  bucket 3: 30%
  bucket 34: 10%
Getting block 43 of 316
  Entering block accumulator loop for bucket 32:
  bucket 14: 20%
  Calculating Z arrays for bucket 42
  bucket 5: 60%
  Calculating Z arrays for bucket 31
  Entering block accumulator loop for bucket 12:
  bucket 11: 30%
  bucket 4: 10%
  bucket 10: 30%
  bucket 14: 30%
  bucket 2: 50%
  Reserving size (65) for bucket 27
  Reserving size (65) for bucket 43
  Calculating Z arrays for bucket 27
  bucket 28: 20%
  Reserving size (65) for bucket 40
  Calculating Z arrays for bucket 29
  bucket 20: 10%
  Calculating Z arrays for bucket 24
  Entering block accumulator loop for bucket 22:
  bucket 3: 40%
  Entering block accumulator loop for bucket 35:
  bucket 18: 50%
  bucket 37: 10%
  Entering block accumulator loop for bucket 31:
  bucket 34: 20%
  Calculating Z arrays for bucket 43
  bucket 8: 50%
  Entering block accumulator loop for bucket 27:
  bucket 3: 50%
  bucket 5: 70%
  Entering block accumulator loop for bucket 24:
  bucket 34: 30%
  bucket 8: 60%
  bucket 12: 10%
  bucket 7: 10%
  bucket 18: 60%
  Entering block accumulator loop for bucket 33:
  bucket 9: 10%
  bucket 37: 20%
  bucket 20: 20%
  Reserving size (65) for bucket 19
  bucket 35: 10%
  Entering block accumulator loop for bucket 36:
  bucket 10: 40%
  bucket 18: 70%
  Calculating Z arrays for bucket 19
  bucket 20: 30%
  bucket 13: 10%
  bucket 22: 10%
  Entering block accumulator loop for bucket 43:
  bucket 3: 60%
  bucket 12: 20%
  bucket 8: 70%
  bucket 5: 80%
  Entering block accumulator loop for bucket 42:
  Entering block accumulator loop for bucket 38:
  bucket 10: 50%
  bucket 35: 20%
  bucket 5: 90%
  bucket 34: 40%
  Entering block accumulator loop for bucket 25:
  Entering block accumulator loop for bucket 29:
Getting block 39 of 316
  bucket 7: 20%
  bucket 37: 30%
  bucket 1: 80%
  bucket 36: 10%
  bucket 11: 40%
  bucket 4: 20%
  Entering block accumulator loop for bucket 19:
  bucket 12: 30%
  bucket 7: 30%
  bucket 2: 60%
  bucket 22: 20%
  bucket 6: 60%
Getting block 41 of 316
  bucket 24: 10%
  bucket 18: 80%
  bucket 17: 10%
  bucket 37: 40%
  bucket 16: 10%
  bucket 25: 10%
  bucket 7: 40%
  bucket 27: 10%
  Reserving size (65) for bucket 39
  bucket 8: 80%
  bucket 5: 100%
  bucket 35: 30%
  bucket 28: 30%
  bucket 3: 70%
  bucket 7: 50%
  bucket 29: 10%
  bucket 2: 70%
  bucket 8: 90%
  bucket 25: 20%
  bucket 13: 20%
  Sorting block of length 41 for bucket 5
  (Using difference cover)
  bucket 21: 10%
  bucket 1: 90%
  bucket 43: 10%
  bucket 27: 20%
  bucket 35: 40%
  bucket 38: 10%
  bucket 4: 30%
  bucket 31: 10%
  Calculating Z arrays for bucket 39
  bucket 22: 30%
  bucket 43: 20%
  bucket 7: 60%
  bucket 4: 40%
  bucket 29: 20%
  Calculating Z arrays for bucket 40
  bucket 27: 30%
  bucket 30: 30%
  bucket 3: 80%
  bucket 21: 20%
  bucket 36: 20%
  bucket 9: 20%
  bucket 37: 50%
  bucket 38: 20%
  bucket 13: 30%
  bucket 6: 70%
  bucket 17: 20%
  bucket 11: 50%
  bucket 15: 10%
  bucket 42: 10%
  bucket 34: 50%
  bucket 29: 30%
  bucket 8: 100%
  bucket 6: 80%
  bucket 24: 20%
  bucket 11: 60%
  bucket 20: 40%
  bucket 4: 50%
  bucket 18: 90%
  bucket 6: 90%
  bucket 17: 30%
  bucket 36: 30%
  bucket 24: 30%
  bucket 13: 40%
  bucket 31: 20%
  bucket 30: 40%
  bucket 29: 40%
  bucket 33: 10%
  bucket 7: 70%
  bucket 3: 90%
  bucket 27: 40%
  Entering block accumulator loop for bucket 40:
  Sorting block time: 00:00:00
  bucket 30: 50%
  Calculating Z arrays for bucket 26
  bucket 35: 50%
  bucket 1: 100%
  bucket 29: 50%
  bucket 42: 20%
Returning block of 42 for bucket 5
  bucket 27: 50%
  Sorting block of length 52 for bucket 8
  (Using difference cover)
  bucket 11: 70%
  bucket 24: 40%
  bucket 13: 50%
  bucket 42: 30%
  bucket 22: 40%
  bucket 31: 30%
  bucket 18: 100%
  Sorting block of length 29 for bucket 1
  (Using difference cover)
  bucket 13: 60%
  bucket 17: 40%
  bucket 4: 60%
  Sorting block of length 23 for bucket 18
  (Using difference cover)
  bucket 21: 30%
  bucket 7: 80%
  bucket 12: 40%
  bucket 30: 60%
  bucket 31: 40%
  bucket 22: 50%
  bucket 2: 80%
  bucket 28: 40%
  bucket 13: 70%
  bucket 7: 90%
  bucket 43: 30%
  bucket 10: 60%
  bucket 15: 20%
  bucket 38: 30%
  bucket 30: 70%
  bucket 37: 60%
  bucket 13: 80%
  bucket 15: 30%
  Reserving size (65) for bucket 41
  bucket 4: 70%
  bucket 27: 60%
  bucket 30: 80%
  bucket 22: 60%
  bucket 42: 40%
  bucket 7: 100%
  bucket 6: 100%
  bucket 14: 40%
  bucket 21: 40%
  Calculating Z arrays for bucket 41
  bucket 10: 70%
  bucket 35: 60%
  bucket 36: 40%
  bucket 23: 10%
  bucket 28: 50%
  bucket 43: 40%
  bucket 11: 80%
  Entering block accumulator loop for bucket 26:
  bucket 27: 70%
  bucket 40: 10%
  bucket 28: 60%
  bucket 29: 60%
  bucket 42: 50%
  bucket 12: 50%
  bucket 23: 20%
  Entering block accumulator loop for bucket 39:
  bucket 31: 50%
  bucket 29: 70%
  Sorting block of length 49 for bucket 6
  (Using difference cover)
  bucket 38: 40%
  bucket 43: 50%
  bucket 4: 80%
  bucket 36: 50%
  bucket 14: 50%
  bucket 32: 10%
  bucket 29: 80%
  bucket 16: 20%
  bucket 4: 90%
  bucket 35: 70%
  bucket 17: 50%
  bucket 32: 20%
  bucket 42: 60%
  bucket 33: 20%
  bucket 40: 20%
  bucket 16: 30%
  bucket 43: 60%
  bucket 25: 30%
  bucket 12: 60%
  bucket 30: 90%
  bucket 33: 30%
  bucket 4: 100%
  bucket 3: 100%
  bucket 35: 80%
  bucket 37: 70%
  bucket 36: 60%
  bucket 27: 80%
  bucket 43: 70%
  bucket 33: 40%
  bucket 19: 10%
  bucket 25: 40%
  bucket 32: 30%
  bucket 17: 60%
  bucket 34: 60%
  bucket 26: 10%
  bucket 16: 40%
  bucket 38: 50%
  bucket 13: 90%
  Sorting block of length 35 for bucket 4
  (Using difference cover)
  bucket 10: 80%
  bucket 14: 60%
  bucket 35: 90%
  bucket 24: 50%
  bucket 36: 70%
  bucket 16: 50%
  bucket 17: 70%
  Sorting block time: 00:00:00
Getting block 44 of 316
  bucket 9: 30%
  bucket 20: 50%
  bucket 16: 60%
  bucket 17: 80%
  bucket 24: 60%
  Entering block accumulator loop for bucket 41:
  bucket 36: 80%
  bucket 37: 80%
  bucket 21: 50%
  bucket 32: 40%
  bucket 9: 40%
  bucket 17: 90%
  bucket 20: 60%
  Reserving size (65) for bucket 44
Returning block of 53 for bucket 8
  bucket 11: 90%
  bucket 14: 70%
  bucket 38: 60%
  bucket 32: 50%
  bucket 15: 40%
  bucket 31: 60%
  bucket 28: 70%
  bucket 12: 70%
  bucket 26: 20%
  bucket 43: 80%
  bucket 33: 50%
  bucket 35: 100%
  bucket 21: 60%
  bucket 13: 100%
  bucket 10: 90%
  bucket 37: 90%
  bucket 32: 60%
  bucket 21: 70%
  bucket 20: 70%
  bucket 14: 80%
  bucket 41: 10%
  bucket 19: 20%
  bucket 9: 50%
  Calculating Z arrays for bucket 44
  bucket 38: 70%
  Sorting block of length 61 for bucket 13
  (Using difference cover)
  bucket 40: 30%
  bucket 43: 90%
  Sorting block of length 21 for bucket 7
  bucket 20: 80%
  (Using difference cover)
  bucket 24: 70%
  bucket 21: 80%
  bucket 38: 80%
  Sorting block of length 56 for bucket 35
  bucket 41: 20%
  (Using difference cover)
  bucket 33: 60%
  bucket 29: 90%
  bucket 31: 70%
  bucket 43: 100%
  bucket 9: 60%
  bucket 32: 70%
  bucket 17: 100%
  Entering block accumulator loop for bucket 44:
  bucket 16: 70%
  bucket 36: 90%
  bucket 21: 90%
  bucket 29: 100%
  bucket 26: 30%
  bucket 25: 50%
  bucket 34: 70%
  bucket 2: 90%
  Sorting block of length 53 for bucket 29
  (Using difference cover)
  bucket 10: 100%
  bucket 40: 40%
  bucket 28: 80%
  bucket 31: 80%
  bucket 21: 100%
  bucket 37: 100%
  bucket 19: 30%
  Sorting block of length 18 for bucket 43
  bucket 2: 100%
  (Using difference cover)
  bucket 27: 90%
  bucket 28: 90%
  Sorting block of length 58 for bucket 17
  (Using difference cover)
  bucket 22: 70%
  bucket 20: 90%
  Sorting block of length 29 for bucket 21
  (Using difference cover)
  bucket 41: 30%
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  bucket 20: 100%
  bucket 9: 70%
  bucket 32: 80%
  bucket 36: 100%
  bucket 42: 70%
  Sorting block of length 35 for bucket 36
  (Using difference cover)
  Sorting block of length 35 for bucket 20
  (Using difference cover)
  bucket 14: 90%
Returning block of 30 for bucket 1
  bucket 28: 100%
  bucket 26: 40%
  bucket 22: 80%
  bucket 34: 80%
  bucket 16: 80%
  Sorting block of length 59 for bucket 37
  (Using difference cover)
  bucket 40: 50%
  bucket 42: 80%
  Sorting block of length 48 for bucket 10
  bucket 34: 90%
  (Using difference cover)
  Sorting block of length 41 for bucket 2
  (Using difference cover)
  bucket 25: 60%
  bucket 26: 50%
  bucket 16: 90%
  bucket 11: 100%
  bucket 19: 40%
  bucket 25: 70%
  bucket 16: 100%
  bucket 15: 50%
  bucket 41: 40%
  Sorting block of length 53 for bucket 11
  (Using difference cover)
  bucket 22: 90%
  bucket 41: 50%
  bucket 15: 60%
  bucket 9: 80%
  bucket 12: 80%
  bucket 39: 10%
  bucket 34: 100%
  bucket 24: 80%
  bucket 31: 90%
  bucket 26: 60%
  bucket 25: 80%
  bucket 27: 100%
  bucket 12: 90%
  bucket 44: 10%
  Sorting block of length 62 for bucket 27
  (Using difference cover)
  Sorting block of length 50 for bucket 28
  (Using difference cover)
  Sorting block of length 39 for bucket 3
  (Using difference cover)
  bucket 42: 90%
  bucket 40: 60%
  bucket 23: 30%
  bucket 30: 100%
  Sorting block of length 42 for bucket 34
  bucket 26: 70%
  (Using difference cover)
Getting block 46 of 316
  bucket 41: 60%
  bucket 44: 20%
  bucket 24: 90%
Returning block of 24 for bucket 18
  bucket 12: 100%
  bucket 33: 70%
  Sorting block of length 48 for bucket 12
  (Using difference cover)
  bucket 22: 100%
  bucket 24: 100%
  bucket 44: 30%
  bucket 40: 70%
  bucket 31: 100%
  bucket 33: 80%
  bucket 42: 100%
  bucket 41: 70%
  Sorting block of length 56 for bucket 42
  (Using difference cover)
  Sorting block of length 12 for bucket 30
  (Using difference cover)
  Sorting block of length 60 for bucket 22
  bucket 15: 70%
  bucket 33: 90%
  Sorting block of length 60 for bucket 24
  (Using difference cover)
  bucket 38: 90%
  (Using difference cover)
  bucket 41: 80%
  bucket 26: 80%
  bucket 23: 40%
  Reserving size (65) for bucket 46
  bucket 39: 20%
  Calculating Z arrays for bucket 46
  bucket 25: 90%
  bucket 38: 100%
  bucket 41: 90%
  bucket 40: 80%
  bucket 14: 100%
  bucket 9: 90%
  bucket 44: 40%
Getting block 47 of 316
  bucket 39: 30%
  Sorting block of length 58 for bucket 31
  bucket 26: 90%
  bucket 40: 90%
  Reserving size (65) for bucket 47
  Calculating Z arrays for bucket 47
  (Using difference cover)
  bucket 44: 50%
  bucket 23: 50%
  bucket 25: 100%
  Entering block accumulator loop for bucket 46:
  bucket 40: 100%
  Sorting block of length 26 for bucket 25
  (Using difference cover)
Getting block 45 of 316
  bucket 26: 100%
  bucket 15: 80%
  bucket 32: 90%
  Sorting block of length 19 for bucket 14
  (Using difference cover)
  bucket 44: 60%
  bucket 9: 100%
  Sorting block of length 57 for bucket 38
  (Using difference cover)
  bucket 19: 50%
  Sorting block of length 44 for bucket 16
  bucket 15: 90%
  bucket 46: 10%
  Sorting block of length 45 for bucket 26
  (Using difference cover)
  bucket 39: 40%
  bucket 23: 60%
  (Using difference cover)
  bucket 19: 60%
  Entering block accumulator loop for bucket 47:
  bucket 46: 20%
  bucket 15: 100%
  bucket 41: 100%
  bucket 39: 50%
  Sorting block of length 33 for bucket 41
  (Using difference cover)
  Sorting block of length 62 for bucket 15
  (Using difference cover)
  bucket 32: 100%
  Sorting block of length 61 for bucket 32
  (Using difference cover)
  bucket 33: 100%
  Reserving size (65) for bucket 45
  bucket 19: 70%
  bucket 23: 70%
  bucket 46: 30%
  Calculating Z arrays for bucket 45
  Sorting block of length 53 for bucket 40
  (Using difference cover)
  Sorting block of length 41 for bucket 33
  (Using difference cover)
  Sorting block time: 00:00:00
  bucket 39: 60%
  bucket 46: 40%
  bucket 23: 80%
  Sorting block of length 16 for bucket 9
  (Using difference cover)
Returning block of 50 for bucket 6
  bucket 19: 80%
  bucket 47: 10%
  bucket 46: 50%
  bucket 39: 70%
  bucket 23: 90%
  Entering block accumulator loop for bucket 45:
  bucket 44: 70%
  bucket 19: 90%
  bucket 46: 60%
  bucket 47: 20%
  bucket 23: 100%
  Sorting block of length 64 for bucket 23
  (Using difference cover)
  bucket 39: 80%
  bucket 46: 70%
  bucket 44: 80%
  bucket 45: 10%
Getting block 48 of 316
  Reserving size (65) for bucket 48
  Calculating Z arrays for bucket 48
  bucket 19: 100%
  bucket 47: 30%
  bucket 46: 80%
  bucket 44: 90%
  bucket 39: 90%
  Sorting block of length 52 for bucket 19
  (Using difference cover)
  bucket 45: 20%
  Entering block accumulator loop for bucket 48:
  bucket 44: 100%
  bucket 39: 100%
  bucket 46: 90%
  Sorting block of length 63 for bucket 39
  (Using difference cover)
  Sorting block of length 51 for bucket 44
  (Using difference cover)
  bucket 45: 30%
  bucket 47: 40%
  bucket 46: 100%
  Sorting block of length 55 for bucket 46
  (Using difference cover)
  bucket 45: 40%
  bucket 47: 50%
  bucket 48: 10%
  bucket 47: 60%
  bucket 45: 50%
  bucket 48: 20%
  bucket 47: 70%
  bucket 45: 60%
  bucket 48: 30%
  bucket 47: 80%
  bucket 45: 70%
  bucket 48: 40%
  bucket 47: 90%
  bucket 45: 80%
  bucket 48: 50%
  bucket 47: 100%
  Sorting block of length 49 for bucket 47
  (Using difference cover)
  bucket 45: 90%
  bucket 48: 60%
  bucket 48: 70%
  bucket 45: 100%
  Sorting block of length 45 for bucket 45
  (Using difference cover)
  bucket 48: 80%
  bucket 48: 90%
  bucket 48: 100%
  Sorting block of length 48 for bucket 48
  (Using difference cover)
Getting block 49 of 316
  Reserving size (65) for bucket 49
  Calculating Z arrays for bucket 49
  Entering block accumulator loop for bucket 49:
  bucket 49: 10%
  bucket 49: 20%
  bucket 49: 30%
  bucket 49: 40%
  bucket 49: 50%
  bucket 49: 60%
  bucket 49: 70%
  bucket 49: 80%
  bucket 49: 90%
  bucket 49: 100%
  Sorting block of length 29 for bucket 49
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 36 for bucket 4
Getting block 50 of 316
  Reserving size (65) for bucket 50
  Calculating Z arrays for bucket 50
  Entering block accumulator loop for bucket 50:
  bucket 50: 10%
  bucket 50: 20%
  bucket 50: 30%
  bucket 50: 40%
  bucket 50: 50%
  bucket 50: 60%
  bucket 50: 70%
  bucket 50: 80%
  bucket 50: 90%
  bucket 50: 100%
  Sorting block of length 54 for bucket 50
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 22 for bucket 7
  Sorting block time: 00:00:00
Returning block of 62 for bucket 13
Getting block 51 of 316
  Reserving size (65) for bucket 51
  Calculating Z arrays for bucket 51
  Entering block accumulator loop for bucket 51:
  bucket 51: 10%
  Sorting block time: 00:00:00
  bucket 51: 20%
Returning block of 50 for bucket 47
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 49 for bucket 48
  Sorting block time: 00:00:00
Returning block of 59 for bucket 17
Returning block of 54 for bucket 11
Returning block of 62 for bucket 32
  bucket 51: 30%
  bucket 51: 40%
  Sorting block time: 00:00:00
Returning block of 19 for bucket 43
  bucket 51: 50%
  bucket 51: 60%
  bucket 51: 70%
  bucket 51: 80%
  bucket 51: 90%
  bucket 51: 100%
  Sorting block of length 54 for bucket 51
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 57 for bucket 35
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 36 for bucket 36
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 46 for bucket 45
Returning block of 54 for bucket 29
  Sorting block time: 00:00:00
Returning block of 64 for bucket 39
Returning block of 30 for bucket 21
Returning block of 43 for bucket 34
Returning block of 60 for bucket 37
Returning block of 42 for bucket 2
Getting block 52 of 316
  Reserving size (65) for bucket 52
  Calculating Z arrays for bucket 52
  Entering block accumulator loop for bucket 52:
  bucket 52: 10%
  bucket 52: 20%
  bucket 52: 30%
  bucket 52: 40%
  bucket 52: 50%
  bucket 52: 60%
  bucket 52: 70%
  bucket 52: 80%
  bucket 52: 90%
  bucket 52: 100%
  Sorting block of length 40 for bucket 52
  (Using difference cover)
Getting block 53 of 316
  Reserving size (65) for bucket 53
  Calculating Z arrays for bucket 53
  Entering block accumulator loop for bucket 53:
  bucket 53: 10%
  bucket 53: 20%
  bucket 53: 30%
  bucket 53: 40%
  bucket 53: 50%
  bucket 53: 60%
  bucket 53: 70%
  Sorting block time: 00:00:00
Returning block of 13 for bucket 30
  bucket 53: 80%
Getting block 54 of 316
  Reserving size (65) for bucket 54
  Calculating Z arrays for bucket 54
  bucket 53: 90%
  bucket 53: 100%
  Sorting block of length 52 for bucket 53
  (Using difference cover)
  Entering block accumulator loop for bucket 54:
  bucket 54: 10%
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 63 for bucket 27
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 34 for bucket 41
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 20 for bucket 14
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 57 for bucket 42
Returning block of 36 for bucket 20
Returning block of 63 for bucket 15
Returning block of 58 for bucket 38
Returning block of 30 for bucket 49
  Sorting block time: 00:00:00
Returning block of 53 for bucket 19
  bucket 54: 20%
Returning block of 17 for bucket 9
Returning block of 49 for bucket 10
Returning block of 51 for bucket 28
Returning block of 49 for bucket 12
  bucket 54: 30%
Returning block of 56 for bucket 46
  Sorting block time: 00:00:00
Returning block of 45 for bucket 16
  bucket 54: 40%
  bucket 54: 50%
Getting block 55 of 316
  Sorting block time: 00:00:00
  Reserving size (65) for bucket 55
  Calculating Z arrays for bucket 55
Returning block of 61 for bucket 22
  bucket 54: 60%
  Entering block accumulator loop for bucket 55:
  bucket 54: 70%
  Sorting block time: 00:00:00
Returning block of 54 for bucket 40
  bucket 55: 10%
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
  bucket 54: 80%
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 59 for bucket 31
Returning block of 65 for bucket 23
Returning block of 40 for bucket 3
  bucket 55: 20%
  bucket 54: 90%
Returning block of 27 for bucket 25
  Sorting block time: 00:00:00
Returning block of 46 for bucket 26
Returning block of 61 for bucket 24
  bucket 55: 30%
  bucket 54: 100%
  Sorting block of length 18 for bucket 54
  (Using difference cover)
  bucket 55: 40%
  bucket 55: 50%
  bucket 55: 60%
  bucket 55: 70%
  bucket 55: 80%
  bucket 55: 90%
  bucket 55: 100%
  Sorting block of length 55 for bucket 55
  (Using difference cover)
Getting block 56 of 316
  Reserving size (65) for bucket 56
  Sorting block time: 00:00:00
  Calculating Z arrays for bucket 56
Returning block of 52 for bucket 44
  Entering block accumulator loop for bucket 56:
  bucket 56: 10%
  Sorting block time: 00:00:00
Returning block of 42 for bucket 33
  bucket 56: 20%
  bucket 56: 30%
  bucket 56: 40%
  bucket 56: 50%
  bucket 56: 60%
  bucket 56: 70%
Getting block 57 of 316
  Reserving size (65) for bucket 57
  Calculating Z arrays for bucket 57
  bucket 56: 80%
  Entering block accumulator loop for bucket 57:
  bucket 56: 90%
  bucket 56: 100%
  bucket 57: 10%
  Sorting block of length 49 for bucket 56
  (Using difference cover)
  bucket 57: 20%
  bucket 57: 30%
  bucket 57: 40%
  bucket 57: 50%
  bucket 57: 60%
  Sorting block time: 00:00:00
Returning block of 55 for bucket 50
  bucket 57: 70%
Getting block 58 of 316
  Reserving size (65) for bucket 58
  bucket 57: 80%
  Calculating Z arrays for bucket 58
  bucket 57: 90%
  Entering block accumulator loop for bucket 58:
  bucket 57: 100%
  Sorting block of length 45 for bucket 57
  (Using difference cover)
  bucket 58: 10%
  bucket 58: 20%
  bucket 58: 30%
  bucket 58: 40%
  Sorting block time: 00:00:00
Returning block of 55 for bucket 51
  bucket 58: 50%
Getting block 59 of 316
  Reserving size (65) for bucket 59
  bucket 58: 60%
  Calculating Z arrays for bucket 59
  Entering block accumulator loop for bucket 59:
  bucket 58: 70%
  bucket 59: 10%
  bucket 58: 80%
  bucket 59: 20%
  bucket 58: 90%
  bucket 59: 30%
  bucket 58: 100%
  Sorting block of length 57 for bucket 58
  (Using difference cover)
  bucket 59: 40%
  Sorting block time: 00:00:00
Returning block of 53 for bucket 53
  bucket 59: 50%
  bucket 59: 60%
  bucket 59: 70%
  Sorting block time: 00:00:00
Returning block of 41 for bucket 52
  bucket 59: 80%
  bucket 59: 90%
Getting block 60 of 316
  Reserving size (65) for bucket 60
  Calculating Z arrays for bucket 60
  bucket 59: 100%
  Sorting block of length 60 for bucket 59
  (Using difference cover)
  Entering block accumulator loop for bucket 60:
  bucket 60: 10%
  bucket 60: 20%
  bucket 60: 30%
  bucket 60: 40%
  Sorting block time: 00:00:00
Returning block of 19 for bucket 54
  bucket 60: 50%
  bucket 60: 60%
  bucket 60: 70%
  Sorting block time: 00:00:00
  Sorting block time: 00:00:00
Returning block of 56 for bucket 55
Returning block of 50 for bucket 56
  bucket 60: 80%
Getting block 61 of 316
  Reserving size (65) for bucket 61
  Calculating Z arrays for bucket 61
  bucket 60: 90%
  bucket 60: 100%
  Entering block accumulator loop for bucket 61:
  Sorting block of length 47 for bucket 60
  (Using difference cover)
  bucket 61: 10%
  bucket 61: 20%
  bucket 61: 30%
  Sorting block time: 00:00:00
Returning block of 58 for bucket 58
  bucket 61: 40%
  Sorting block time: 00:00:00
Returning block of 46 for bucket 57
  bucket 61: 50%
  bucket 61: 60%
  bucket 61: 70%
Getting block 62 of 316
  Reserving size (65) for bucket 62
  Calculating Z arrays for bucket 62
  bucket 61: 80%
  Entering block accumulator loop for bucket 62:
  bucket 61: 90%
  Sorting block time: 00:00:00
Returning block of 61 for bucket 59
  bucket 61: 100%
  Sorting block of length 49 for bucket 61
  (Using difference cover)
  bucket 62: 10%
  Sorting block time: 00:00:00
Returning block of 48 for bucket 60
  bucket 62: 20%
  bucket 62: 30%
  bucket 62: 40%
  bucket 62: 50%
  bucket 62: 60%
Getting block 63 of 316
  Reserving size (65) for bucket 63
  Calculating Z arrays for bucket 63
  bucket 62: 70%
  Sorting block time: 00:00:00
Returning block of 50 for bucket 61
  Entering block accumulator loop for bucket 63:
  bucket 62: 80%
  bucket 63: 10%
  bucket 62: 90%
  bucket 62: 100%
  bucket 63: 20%
  Sorting block of length 37 for bucket 62
  (Using difference cover)
  bucket 63: 30%
  bucket 63: 40%
  bucket 63: 50%
  bucket 63: 60%
Getting block 64 of 316
  Reserving size (65) for bucket 64
  Calculating Z arrays for bucket 64
  bucket 63: 70%
  Entering block accumulator loop for bucket 64:
  bucket 63: 80%
  bucket 63: 90%
  Sorting block time: 00:00:00
  bucket 64: 10%
Returning block of 38 for bucket 62
  bucket 63: 100%
  Sorting block of length 46 for bucket 63
  (Using difference cover)
  bucket 64: 20%
  bucket 64: 30%
  bucket 64: 40%
Getting block 65 of 316
  Reserving size (65) for bucket 65
  Calculating Z arrays for bucket 65
  bucket 64: 50%
  Entering block accumulator loop for bucket 65:
  bucket 64: 60%
  bucket 65: 10%
  bucket 64: 70%
  bucket 65: 20%
  bucket 64: 80%
  Sorting block time: 00:00:00
Returning block of 47 for bucket 63
  bucket 65: 30%
  bucket 64: 90%
  bucket 65: 40%
  bucket 64: 100%
  Sorting block of length 55 for bucket 64
  (Using difference cover)
  bucket 65: 50%
Getting block 66 of 316
  Reserving size (65) for bucket 66
  Calculating Z arrays for bucket 66
  bucket 65: 60%
  bucket 65: 70%
  Entering block accumulator loop for bucket 66:
  bucket 65: 80%
  bucket 66: 10%
  bucket 65: 90%
  bucket 66: 20%
  bucket 65: 100%
  Sorting block of length 58 for bucket 65
  (Using difference cover)
  bucket 66: 30%
  bucket 66: 40%
  bucket 66: 50%
Getting block 67 of 316
  Reserving size (65) for bucket 67
  Calculating Z arrays for bucket 67
  bucket 66: 60%
  Entering block accumulator loop for bucket 67:
  bucket 66: 70%
  bucket 67: 10%
  bucket 66: 80%
  Sorting block time: 00:00:00
Returning block of 56 for bucket 64
  bucket 67: 20%
  bucket 66: 90%
  bucket 67: 30%
  Sorting block time: 00:00:00
  bucket 66: 100%
Returning block of 59 for bucket 65
  Sorting block of length 63 for bucket 66
  (Using difference cover)
  bucket 67: 40%
  bucket 67: 50%
Getting block 68 of 316
  Reserving size (65) for bucket 68
  Calculating Z arrays for bucket 68
  bucket 67: 60%
  Entering block accumulator loop for bucket 68:
  bucket 67: 70%
  bucket 68: 10%
  bucket 67: 80%
  bucket 68: 20%
  bucket 67: 90%
  bucket 68: 30%
  bucket 67: 100%
  Sorting block of length 59 for bucket 67
  (Using difference cover)
  Sorting block time: 00:00:00
  bucket 68: 40%
Returning block of 64 for bucket 66
  bucket 68: 50%
  bucket 68: 60%
  bucket 68: 70%
  bucket 68: 80%
Getting block 69 of 316
  Reserving size (65) for bucket 69
  Calculating Z arrays for bucket 69
  bucket 68: 90%
  Entering block accumulator loop for bucket 69:
  bucket 68: 100%
  Sorting block of length 23 for bucket 68
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 60 for bucket 67
  bucket 69: 10%
  bucket 69: 20%
  bucket 69: 30%
  bucket 69: 40%
  bucket 69: 50%
Getting block 70 of 316
  Reserving size (65) for bucket 70
  Calculating Z arrays for bucket 70
  Sorting block time: 00:00:00
  bucket 69: 60%
Returning block of 24 for bucket 68
  Entering block accumulator loop for bucket 70:
  bucket 69: 70%
  bucket 69: 80%
  bucket 70: 10%
  bucket 69: 90%
  bucket 70: 20%
  bucket 69: 100%
  Sorting block of length 42 for bucket 69
  (Using difference cover)
  bucket 70: 30%
  bucket 70: 40%
  bucket 70: 50%
Getting block 71 of 316
  Reserving size (65) for bucket 71
  Calculating Z arrays for bucket 71
  bucket 70: 60%
  Entering block accumulator loop for bucket 71:
  bucket 70: 70%
  bucket 70: 80%
  bucket 71: 10%
  bucket 70: 90%
  bucket 71: 20%
  Sorting block time: 00:00:00
Returning block of 43 for bucket 69
  bucket 70: 100%
  Sorting block of length 26 for bucket 70
  (Using difference cover)
  bucket 71: 30%
  bucket 71: 40%
  bucket 71: 50%
  bucket 71: 60%
Getting block 72 of 316
  Reserving size (65) for bucket 72
  Calculating Z arrays for bucket 72
  bucket 71: 70%
  Entering block accumulator loop for bucket 72:
  bucket 71: 80%
  bucket 72: 10%
  bucket 71: 90%
  bucket 72: 20%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 70
  bucket 71: 100%
  Sorting block of length 55 for bucket 71
  (Using difference cover)
  bucket 72: 30%
  bucket 72: 40%
  bucket 72: 50%
  bucket 72: 60%
Getting block 73 of 316
  Reserving size (65) for bucket 73
  Calculating Z arrays for bucket 73
  bucket 72: 70%
  Entering block accumulator loop for bucket 73:
  bucket 72: 80%
  bucket 72: 90%
  bucket 73: 10%
  Sorting block time: 00:00:00
Returning block of 56 for bucket 71
  bucket 72: 100%
  Sorting block of length 29 for bucket 72
  (Using difference cover)
  bucket 73: 20%
  bucket 73: 30%
  bucket 73: 40%
  bucket 73: 50%
Getting block 74 of 316
  Reserving size (65) for bucket 74
  Calculating Z arrays for bucket 74
  bucket 73: 60%
  Entering block accumulator loop for bucket 74:
  bucket 73: 70%
  Sorting block time: 00:00:00
Returning block of 30 for bucket 72
  bucket 73: 80%
  bucket 74: 10%
  bucket 73: 90%
  bucket 74: 20%
  bucket 73: 100%
  Sorting block of length 57 for bucket 73
  (Using difference cover)
  bucket 74: 30%
  bucket 74: 40%
  bucket 74: 50%
Getting block 75 of 316
  Reserving size (65) for bucket 75
  Calculating Z arrays for bucket 75
  bucket 74: 60%
  Entering block accumulator loop for bucket 75:
  bucket 74: 70%
  bucket 74: 80%
  bucket 75: 10%
  bucket 74: 90%
  Sorting block time: 00:00:00
  bucket 75: 20%
Returning block of 58 for bucket 73
  bucket 74: 100%
  Sorting block of length 56 for bucket 74
  (Using difference cover)
  bucket 75: 30%
  bucket 75: 40%
  bucket 75: 50%
  bucket 75: 60%
Getting block 76 of 316
  Reserving size (65) for bucket 76
  Calculating Z arrays for bucket 76
  bucket 75: 70%
  Entering block accumulator loop for bucket 76:
  bucket 75: 80%
  bucket 76: 10%
  Sorting block time: 00:00:00
  bucket 75: 90%
Returning block of 57 for bucket 74
  bucket 76: 20%
  bucket 75: 100%
  Sorting block of length 64 for bucket 75
  (Using difference cover)
  bucket 76: 30%
  bucket 76: 40%
  bucket 76: 50%
Getting block 77 of 316
  Reserving size (65) for bucket 77
  Calculating Z arrays for bucket 77
  bucket 76: 60%
  Entering block accumulator loop for bucket 77:
  bucket 76: 70%
  bucket 77: 10%
  bucket 76: 80%
  Sorting block time: 00:00:00
Returning block of 65 for bucket 75
  bucket 77: 20%
  bucket 76: 90%
  bucket 77: 30%
  bucket 76: 100%
  Sorting block of length 24 for bucket 76
  (Using difference cover)
  bucket 77: 40%
  bucket 77: 50%
Getting block 78 of 316
  Reserving size (65) for bucket 78
  Calculating Z arrays for bucket 78
  bucket 77: 60%
  Entering block accumulator loop for bucket 78:
  bucket 77: 70%
  bucket 77: 80%
  bucket 78: 10%
  bucket 77: 90%
  bucket 78: 20%
  Sorting block time: 00:00:00
  bucket 77: 100%
Returning block of 25 for bucket 76
  Sorting block of length 60 for bucket 77
  (Using difference cover)
  bucket 78: 30%
  bucket 78: 40%
  bucket 78: 50%
Getting block 79 of 316
  Reserving size (65) for bucket 79
  Calculating Z arrays for bucket 79
  bucket 78: 60%
  Entering block accumulator loop for bucket 79:
  bucket 78: 70%
  bucket 78: 80%
  bucket 79: 10%
  bucket 78: 90%
  bucket 79: 20%
  Sorting block time: 00:00:00
Returning block of 61 for bucket 77
  bucket 78: 100%
  Sorting block of length 58 for bucket 78
  (Using difference cover)
  bucket 79: 30%
  bucket 79: 40%
  bucket 79: 50%
  bucket 79: 60%
  bucket 79: 70%
Getting block 80 of 316
  Reserving size (65) for bucket 80
  Calculating Z arrays for bucket 80
  bucket 79: 80%
  Entering block accumulator loop for bucket 80:
  bucket 79: 90%
  Sorting block time: 00:00:00
Returning block of 59 for bucket 78
  bucket 80: 10%
  bucket 79: 100%
  Sorting block of length 55 for bucket 79
  (Using difference cover)
  bucket 80: 20%
  bucket 80: 30%
  bucket 80: 40%
  bucket 80: 50%
  bucket 80: 60%
Getting block 81 of 316
  Reserving size (65) for bucket 81
  bucket 80: 70%
  Calculating Z arrays for bucket 81
  bucket 80: 80%
  Entering block accumulator loop for bucket 81:
  bucket 80: 90%
  Sorting block time: 00:00:00
Returning block of 56 for bucket 79
  bucket 81: 10%
  bucket 80: 100%
  Sorting block of length 15 for bucket 80
  (Using difference cover)
  bucket 81: 20%
  bucket 81: 30%
  bucket 81: 40%
  bucket 81: 50%
  bucket 81: 60%
Getting block 82 of 316
  Reserving size (65) for bucket 82
  Calculating Z arrays for bucket 82
  bucket 81: 70%
  Sorting block time: 00:00:00
Returning block of 16 for bucket 80
  Entering block accumulator loop for bucket 82:
  bucket 81: 80%
  bucket 81: 90%
  bucket 82: 10%
  bucket 81: 100%
  Sorting block of length 49 for bucket 81
  (Using difference cover)
  bucket 82: 20%
  bucket 82: 30%
  bucket 82: 40%
  bucket 82: 50%
  bucket 82: 60%
Getting block 83 of 316
  Reserving size (65) for bucket 83
  Calculating Z arrays for bucket 83
  bucket 82: 70%
  Entering block accumulator loop for bucket 83:
  bucket 82: 80%
  Sorting block time: 00:00:00
Returning block of 50 for bucket 81
  bucket 83: 10%
  bucket 82: 90%
  bucket 82: 100%
  Sorting block of length 33 for bucket 82
  bucket 83: 20%
  (Using difference cover)
  bucket 83: 30%
  bucket 83: 40%
  bucket 83: 50%
  bucket 83: 60%
  bucket 83: 70%
Getting block 84 of 316
  Reserving size (65) for bucket 84
  Calculating Z arrays for bucket 84
  bucket 83: 80%
  Sorting block time: 00:00:00
  Entering block accumulator loop for bucket 84:
Returning block of 34 for bucket 82
  bucket 83: 90%
  bucket 84: 10%
  bucket 83: 100%
  Sorting block of length 50 for bucket 83
  (Using difference cover)
  bucket 84: 20%
  bucket 84: 30%
  bucket 84: 40%
  bucket 84: 50%
  bucket 84: 60%
Getting block 85 of 316
  Reserving size (65) for bucket 85
  Calculating Z arrays for bucket 85
  bucket 84: 70%
  Sorting block time: 00:00:00
Returning block of 51 for bucket 83
  Entering block accumulator loop for bucket 85:
  bucket 84: 80%
  bucket 84: 90%
  bucket 85: 10%
  bucket 84: 100%
  Sorting block of length 60 for bucket 84
  (Using difference cover)
  bucket 85: 20%
Getting block 86 of 316
  Reserving size (65) for bucket 86
  Calculating Z arrays for bucket 86
  bucket 85: 30%
  Entering block accumulator loop for bucket 86:
  bucket 85: 40%
  bucket 85: 50%
  bucket 86: 10%
  bucket 85: 60%
  bucket 86: 20%
  bucket 85: 70%
  bucket 86: 30%
  bucket 85: 80%
  Sorting block time: 00:00:00
Returning block of 61 for bucket 84
  bucket 86: 40%
  bucket 85: 90%
  bucket 85: 100%
  Sorting block of length 56 for bucket 85
  (Using difference cover)
  bucket 86: 50%
  bucket 86: 60%
  bucket 86: 70%
  bucket 86: 80%
  bucket 86: 90%
  bucket 86: 100%
  Sorting block of length 58 for bucket 86
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 57 for bucket 85
  Sorting block time: 00:00:00
Returning block of 59 for bucket 86
Getting block 87 of 316
  Reserving size (65) for bucket 87
  Calculating Z arrays for bucket 87
  Entering block accumulator loop for bucket 87:
  bucket 87: 10%
Getting block 88 of 316
  Reserving size (65) for bucket 88
  Calculating Z arrays for bucket 88
  bucket 87: 20%
  Entering block accumulator loop for bucket 88:
  bucket 87: 30%
  bucket 88: 10%
  bucket 87: 40%
  bucket 88: 20%
  bucket 87: 50%
  bucket 88: 30%
  bucket 87: 60%
  bucket 88: 40%
  bucket 87: 70%
  bucket 88: 50%
  bucket 87: 80%
  bucket 88: 60%
  bucket 87: 90%
  bucket 88: 70%
  bucket 87: 100%
  Sorting block of length 49 for bucket 87
  (Using difference cover)
  bucket 88: 80%
  bucket 88: 90%
Getting block 89 of 316
  Reserving size (65) for bucket 89
  Calculating Z arrays for bucket 89
  bucket 88: 100%
  Sorting block of length 63 for bucket 88
  (Using difference cover)
  Entering block accumulator loop for bucket 89:
  bucket 89: 10%
  bucket 89: 20%
  bucket 89: 30%
  bucket 89: 40%
  bucket 89: 50%
  bucket 89: 60%
  bucket 89: 70%
  Sorting block time: 00:00:00
Returning block of 50 for bucket 87
  bucket 89: 80%
  Sorting block time: 00:00:00
Returning block of 64 for bucket 88
  bucket 89: 90%
Getting block 90 of 316
  bucket 89: 100%
  Reserving size (65) for bucket 90
  Calculating Z arrays for bucket 90
  Sorting block of length 45 for bucket 89
  (Using difference cover)
  Entering block accumulator loop for bucket 90:
  bucket 90: 10%
  bucket 90: 20%
  bucket 90: 30%
  bucket 90: 40%
  bucket 90: 50%
  bucket 90: 60%
  Sorting block time: 00:00:00
Returning block of 46 for bucket 89
  bucket 90: 70%
  bucket 90: 80%
  bucket 90: 90%
  bucket 90: 100%
  Sorting block of length 40 for bucket 90
  (Using difference cover)
Getting block 91 of 316
  Reserving size (65) for bucket 91
  Calculating Z arrays for bucket 91
  Entering block accumulator loop for bucket 91:
  Sorting block time: 00:00:00
Returning block of 41 for bucket 90
  bucket 91: 10%
  bucket 91: 20%
  bucket 91: 30%
  bucket 91: 40%
  bucket 91: 50%
  bucket 91: 60%
  bucket 91: 70%
  bucket 91: 80%
Getting block 92 of 316
  Reserving size (65) for bucket 92
  Calculating Z arrays for bucket 92
  bucket 91: 90%
  Entering block accumulator loop for bucket 92:
  bucket 91: 100%
  Sorting block of length 57 for bucket 91
  (Using difference cover)
  bucket 92: 10%
  bucket 92: 20%
  bucket 92: 30%
  bucket 92: 40%
  bucket 92: 50%
  bucket 92: 60%
  bucket 92: 70%
  Sorting block time: 00:00:00
Returning block of 58 for bucket 91
Getting block 93 of 316
  Reserving size (65) for bucket 93
  Calculating Z arrays for bucket 93
  bucket 92: 80%
  Entering block accumulator loop for bucket 93:
  bucket 92: 90%
  bucket 92: 100%
  Sorting block of length 51 for bucket 92
  (Using difference cover)
  bucket 93: 10%
  bucket 93: 20%
  bucket 93: 30%
  bucket 93: 40%
  bucket 93: 50%
Getting block 94 of 316
  Reserving size (65) for bucket 94
  Calculating Z arrays for bucket 94
  bucket 93: 60%
  Sorting block time: 00:00:00
Returning block of 52 for bucket 92
  Entering block accumulator loop for bucket 94:
  bucket 93: 70%
  bucket 93: 80%
  bucket 94: 10%
  bucket 93: 90%
Getting block 95 of 316
  Reserving size (65) for bucket 95
  Calculating Z arrays for bucket 95
  bucket 94: 20%
  bucket 93: 100%
  Sorting block of length 63 for bucket 93
  (Using difference cover)
  Entering block accumulator loop for bucket 95:
  bucket 94: 30%
  bucket 95: 10%
  bucket 94: 40%
  bucket 95: 20%
  bucket 95: 30%
  bucket 94: 50%
  bucket 95: 40%
  bucket 94: 60%
  bucket 95: 50%
  bucket 94: 70%
  bucket 95: 60%
  Sorting block time: 00:00:00
Returning block of 64 for bucket 93
  bucket 94: 80%
  bucket 95: 70%
  bucket 94: 90%
  bucket 95: 80%
  bucket 94: 100%
  bucket 95: 90%
  Sorting block of length 60 for bucket 94
  (Using difference cover)
Getting block 96 of 316
  Reserving size (65) for bucket 96
  Calculating Z arrays for bucket 96
  bucket 95: 100%
  Sorting block of length 43 for bucket 95
  (Using difference cover)
  Entering block accumulator loop for bucket 96:
  bucket 96: 10%
  bucket 96: 20%
  bucket 96: 30%
  bucket 96: 40%
  bucket 96: 50%
  bucket 96: 60%
  bucket 96: 70%
  bucket 96: 80%
  Sorting block time: 00:00:00
Returning block of 61 for bucket 94
  bucket 96: 90%
  Sorting block time: 00:00:00
Returning block of 44 for bucket 95
  bucket 96: 100%
  Sorting block of length 46 for bucket 96
  (Using difference cover)
Getting block 97 of 316
  Reserving size (65) for bucket 97
  Calculating Z arrays for bucket 97
  Entering block accumulator loop for bucket 97:
  bucket 97: 10%
  Sorting block time: 00:00:00
Returning block of 47 for bucket 96
  bucket 97: 20%
  bucket 97: 30%
  bucket 97: 40%
Getting block 98 of 316
  Reserving size (65) for bucket 98
  Calculating Z arrays for bucket 98
  bucket 97: 50%
  Entering block accumulator loop for bucket 98:
  bucket 97: 60%
  bucket 98: 10%
  bucket 97: 70%
  bucket 98: 20%
  bucket 98: 30%
  bucket 97: 80%
  bucket 98: 40%
  bucket 97: 90%
  bucket 98: 50%
  bucket 97: 100%
  Sorting block of length 58 for bucket 97
  (Using difference cover)
  bucket 98: 60%
  bucket 98: 70%
Getting block 99 of 316
  Reserving size (65) for bucket 99
  Calculating Z arrays for bucket 99
  bucket 98: 80%
  Entering block accumulator loop for bucket 99:
  bucket 98: 90%
  bucket 98: 100%
  Sorting block of length 21 for bucket 98
  (Using difference cover)
  bucket 99: 10%
Getting block 100 of 316
  Reserving size (65) for bucket 100
  Calculating Z arrays for bucket 100
  bucket 99: 20%
  Entering block accumulator loop for bucket 100:
  bucket 99: 30%
  bucket 100: 10%
  bucket 99: 40%
  bucket 100: 20%
  bucket 99: 50%
  bucket 100: 30%
  bucket 99: 60%
  bucket 100: 40%
  bucket 99: 70%
  Sorting block time: 00:00:00
Returning block of 59 for bucket 97
  bucket 100: 50%
  bucket 99: 80%
  Sorting block time: 00:00:00
Returning block of 22 for bucket 98
  bucket 100: 60%
  bucket 99: 90%
  bucket 100: 70%
  bucket 99: 100%
  Sorting block of length 63 for bucket 99
  (Using difference cover)
  bucket 100: 80%
  bucket 100: 90%
  bucket 100: 100%
  Sorting block of length 29 for bucket 100
  (Using difference cover)
Getting block 101 of 316
  Reserving size (65) for bucket 101
  Calculating Z arrays for bucket 101
  Entering block accumulator loop for bucket 101:
  bucket 101: 10%
  bucket 101: 20%
Getting block 102 of 316
  Reserving size (65) for bucket 102
  Calculating Z arrays for bucket 102
  bucket 101: 30%
  Sorting block time: 00:00:00
  Entering block accumulator loop for bucket 102:
Returning block of 64 for bucket 99
  bucket 101: 40%
  Sorting block time: 00:00:00
Returning block of 30 for bucket 100
  bucket 102: 10%
  bucket 101: 50%
  bucket 102: 20%
  bucket 101: 60%
  bucket 102: 30%
  bucket 101: 70%
  bucket 102: 40%
  bucket 101: 80%
  bucket 101: 90%
  bucket 102: 50%
  bucket 101: 100%
  Sorting block of length 55 for bucket 101
  (Using difference cover)
  bucket 102: 60%
  bucket 102: 70%
  bucket 102: 80%
  bucket 102: 90%
  bucket 102: 100%
  Sorting block of length 28 for bucket 102
  (Using difference cover)
Getting block 103 of 316
  Reserving size (65) for bucket 103
  Calculating Z arrays for bucket 103
  Entering block accumulator loop for bucket 103:
  bucket 103: 10%
  bucket 103: 20%
  bucket 103: 30%
  bucket 103: 40%
  Sorting block time: 00:00:00
Returning block of 56 for bucket 101
  bucket 103: 50%
  Sorting block time: 00:00:00
Returning block of 29 for bucket 102
Getting block 104 of 316
  Reserving size (65) for bucket 104
  Calculating Z arrays for bucket 104
  bucket 103: 60%
  Entering block accumulator loop for bucket 104:
  bucket 103: 70%
  bucket 103: 80%
  bucket 104: 10%
  bucket 103: 90%
Getting block 105 of 316
  Reserving size (65) for bucket 105
  Calculating Z arrays for bucket 105
  bucket 104: 20%
  bucket 103: 100%
  Sorting block of length 52 for bucket 103
  (Using difference cover)
  Entering block accumulator loop for bucket 105:
  bucket 104: 30%
  bucket 105: 10%
  bucket 104: 40%
  bucket 105: 20%
  bucket 104: 50%
  bucket 105: 30%
  bucket 104: 60%
  bucket 105: 40%
  bucket 104: 70%
  bucket 105: 50%
  bucket 104: 80%
  bucket 105: 60%
  Sorting block time: 00:00:00
Returning block of 53 for bucket 103
  bucket 104: 90%
  bucket 105: 70%
  bucket 105: 80%
  bucket 104: 100%
  Sorting block of length 48 for bucket 104
  (Using difference cover)
  bucket 105: 90%
  bucket 105: 100%
  Sorting block of length 58 for bucket 105
  (Using difference cover)
Getting block 106 of 316
  Reserving size (65) for bucket 106
  Calculating Z arrays for bucket 106
  Entering block accumulator loop for bucket 106:
  bucket 106: 10%
  bucket 106: 20%
  bucket 106: 30%
  bucket 106: 40%
  bucket 106: 50%
  bucket 106: 60%
  Sorting block time: 00:00:00
Returning block of 49 for bucket 104
  bucket 106: 70%
  bucket 106: 80%
  Sorting block time: 00:00:00
Returning block of 59 for bucket 105
  bucket 106: 90%
  bucket 106: 100%
  Sorting block of length 19 for bucket 106
  (Using difference cover)
  Sorting block time: 00:00:00
Getting block 107 of 316
  Reserving size (65) for bucket 107
  Calculating Z arrays for bucket 107
Returning block of 20 for bucket 106
  Entering block accumulator loop for bucket 107:
  bucket 107: 10%
  bucket 107: 20%
  bucket 107: 30%
  bucket 107: 40%
  bucket 107: 50%
  bucket 107: 60%
Getting block 108 of 316
  Reserving size (65) for bucket 108
  Calculating Z arrays for bucket 108
  bucket 107: 70%
  Entering block accumulator loop for bucket 108:
  bucket 107: 80%
  bucket 108: 10%
  bucket 107: 90%
Getting block 109 of 316
  Reserving size (65) for bucket 109
  Calculating Z arrays for bucket 109
  bucket 108: 20%
  bucket 107: 100%
  Sorting block of length 47 for bucket 107
  (Using difference cover)
  Entering block accumulator loop for bucket 109:
  bucket 108: 30%
  bucket 108: 40%
  bucket 109: 10%
  bucket 108: 50%
  bucket 109: 20%
  bucket 108: 60%
  bucket 108: 70%
  bucket 109: 30%
  bucket 108: 80%
  Sorting block time: 00:00:00
Returning block of 48 for bucket 107
  bucket 109: 40%
  bucket 108: 90%
  bucket 109: 50%
  bucket 108: 100%
  Sorting block of length 34 for bucket 108
  (Using difference cover)
  bucket 109: 60%
  bucket 109: 70%
  bucket 109: 80%
  bucket 109: 90%
  bucket 109: 100%
  Sorting block of length 37 for bucket 109
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 35 for bucket 108
Getting block 110 of 316
  Reserving size (65) for bucket 110
  Calculating Z arrays for bucket 110
  Entering block accumulator loop for bucket 110:
  bucket 110: 10%
  bucket 110: 20%
Getting block 111 of 316
  Reserving size (65) for bucket 111
  Calculating Z arrays for bucket 111
  bucket 110: 30%
  Entering block accumulator loop for bucket 111:
  Sorting block time: 00:00:00
Returning block of 38 for bucket 109
  bucket 110: 40%
  bucket 111: 10%
  bucket 110: 50%
  bucket 110: 60%
  bucket 111: 20%
  bucket 110: 70%
  bucket 111: 30%
  bucket 110: 80%
  bucket 111: 40%
  bucket 110: 90%
  bucket 111: 50%
  bucket 110: 100%
  Sorting block of length 51 for bucket 110
  (Using difference cover)
  bucket 111: 60%
  bucket 111: 70%
Getting block 112 of 316
  Reserving size (65) for bucket 112
  Calculating Z arrays for bucket 112
  bucket 111: 80%
  Entering block accumulator loop for bucket 112:
  bucket 111: 90%
  bucket 111: 100%
  Sorting block of length 57 for bucket 111
  (Using difference cover)
  bucket 112: 10%
  bucket 112: 20%
  bucket 112: 30%
  bucket 112: 40%
  bucket 112: 50%
  bucket 112: 60%
  bucket 112: 70%
  Sorting block time: 00:00:00
Returning block of 52 for bucket 110
  bucket 112: 80%
  Sorting block time: 00:00:00
Returning block of 58 for bucket 111
  bucket 112: 90%
  bucket 112: 100%
  Sorting block of length 51 for bucket 112
  (Using difference cover)
Getting block 113 of 316
  Reserving size (65) for bucket 113
  Calculating Z arrays for bucket 113
  Entering block accumulator loop for bucket 113:
  Sorting block time: 00:00:00
Returning block of 52 for bucket 112
  bucket 113: 10%
  bucket 113: 20%
Getting block 114 of 316
  Reserving size (65) for bucket 114
  Calculating Z arrays for bucket 114
  bucket 113: 30%
  Entering block accumulator loop for bucket 114:
  bucket 113: 40%
  bucket 114: 10%
  bucket 113: 50%
  bucket 114: 20%
  bucket 113: 60%
  bucket 114: 30%
  bucket 113: 70%
  bucket 114: 40%
  bucket 113: 80%
  bucket 114: 50%
  bucket 113: 90%
  bucket 114: 60%
  bucket 113: 100%
  Sorting block of length 26 for bucket 113
  (Using difference cover)
  bucket 114: 70%
  bucket 114: 80%
  bucket 114: 90%
  bucket 114: 100%
  Sorting block of length 51 for bucket 114
  (Using difference cover)
Getting block 115 of 316
  Reserving size (65) for bucket 115
  Calculating Z arrays for bucket 115
  Entering block accumulator loop for bucket 115:
  bucket 115: 10%
  Sorting block time: 00:00:00
Returning block of 27 for bucket 113
  bucket 115: 20%
  Sorting block time: 00:00:00
Returning block of 52 for bucket 114
  bucket 115: 30%
Getting block 116 of 316
  Reserving size (65) for bucket 116
  Calculating Z arrays for bucket 116
  bucket 115: 40%
  Entering block accumulator loop for bucket 116:
  bucket 115: 50%
  bucket 116: 10%
  bucket 115: 60%
  bucket 116: 20%
Getting block 117 of 316
  Reserving size (65) for bucket 117
  Calculating Z arrays for bucket 117
  bucket 115: 70%
  bucket 116: 30%
  Entering block accumulator loop for bucket 117:
  bucket 115: 80%
  bucket 116: 40%
  bucket 115: 90%
  bucket 116: 50%
  bucket 117: 10%
  bucket 115: 100%
  bucket 116: 60%
  Sorting block of length 58 for bucket 115
  (Using difference cover)
  bucket 117: 20%
  bucket 116: 70%
  bucket 117: 30%
  bucket 116: 80%
  bucket 117: 40%
  bucket 116: 90%
  bucket 116: 100%
  Sorting block of length 60 for bucket 116
  (Using difference cover)
  bucket 117: 50%
  bucket 117: 60%
  bucket 117: 70%
  bucket 117: 80%
  bucket 117: 90%
  bucket 117: 100%
  Sorting block of length 54 for bucket 117
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 59 for bucket 115
Getting block 118 of 316
  Reserving size (65) for bucket 118
  Calculating Z arrays for bucket 118
  Entering block accumulator loop for bucket 118:
  bucket 118: 10%
  bucket 118: 20%
  bucket 118: 30%
  Sorting block time: 00:00:00
Returning block of 61 for bucket 116
  bucket 118: 40%
  Sorting block time: 00:00:00
Returning block of 55 for bucket 117
  bucket 118: 50%
  bucket 118: 60%
Getting block 119 of 316
  Reserving size (65) for bucket 119
  Calculating Z arrays for bucket 119
  bucket 118: 70%
  Entering block accumulator loop for bucket 119:
  bucket 118: 80%
  bucket 118: 90%
  bucket 119: 10%
  bucket 118: 100%
  Sorting block of length 43 for bucket 118
  (Using difference cover)
  bucket 119: 20%
  bucket 119: 30%
  bucket 119: 40%
  bucket 119: 50%
Getting block 120 of 316
  Reserving size (65) for bucket 120
  Calculating Z arrays for bucket 120
  bucket 119: 60%
  Sorting block time: 00:00:00
  Entering block accumulator loop for bucket 120:
Returning block of 44 for bucket 118
  bucket 119: 70%
  bucket 120: 10%
  bucket 119: 80%
Getting block 121 of 316
  Reserving size (65) for bucket 121
  Calculating Z arrays for bucket 121
  bucket 119: 90%
  bucket 120: 20%
  Entering block accumulator loop for bucket 121:
  bucket 119: 100%
  bucket 120: 30%
  Sorting block of length 62 for bucket 119
  (Using difference cover)
  bucket 121: 10%
  bucket 120: 40%
  bucket 121: 20%
  bucket 120: 50%
  bucket 121: 30%
  bucket 120: 60%
  bucket 121: 40%
  bucket 120: 70%
  bucket 121: 50%
  bucket 120: 80%
  bucket 121: 60%
  bucket 120: 90%
  Sorting block time: 00:00:00
Returning block of 63 for bucket 119
  bucket 121: 70%
  bucket 120: 100%
  Sorting block of length 27 for bucket 120
  (Using difference cover)
  bucket 121: 80%
  bucket 121: 90%
  bucket 121: 100%
  Sorting block of length 52 for bucket 121
  (Using difference cover)
Getting block 122 of 316
  Reserving size (65) for bucket 122
  Calculating Z arrays for bucket 122
  Entering block accumulator loop for bucket 122:
  bucket 122: 10%
  Sorting block time: 00:00:00
Returning block of 28 for bucket 120
  bucket 122: 20%
  Sorting block time: 00:00:00
Returning block of 53 for bucket 121
  bucket 122: 30%
  bucket 122: 40%
  bucket 122: 50%
Getting block 123 of 316
  Reserving size (65) for bucket 123
  Calculating Z arrays for bucket 123
  bucket 122: 60%
  Entering block accumulator loop for bucket 123:
  bucket 122: 70%
  bucket 123: 10%
  bucket 122: 80%
Getting block 124 of 316
  Reserving size (65) for bucket 124
  Calculating Z arrays for bucket 124
  bucket 123: 20%
  bucket 122: 90%
  Entering block accumulator loop for bucket 124:
  bucket 123: 30%
  bucket 122: 100%
  Sorting block of length 41 for bucket 122
  (Using difference cover)
  bucket 124: 10%
  bucket 123: 40%
  bucket 124: 20%
  bucket 123: 50%
  bucket 124: 30%
  bucket 123: 60%
  bucket 124: 40%
  bucket 123: 70%
  bucket 124: 50%
  bucket 123: 80%
  bucket 124: 60%
  bucket 123: 90%
  Sorting block time: 00:00:00
Returning block of 42 for bucket 122
  bucket 124: 70%
  bucket 123: 100%
  Sorting block of length 59 for bucket 123
  (Using difference cover)
  bucket 124: 80%
  bucket 124: 90%
  bucket 124: 100%
  Sorting block of length 50 for bucket 124
  (Using difference cover)
Getting block 125 of 316
  Reserving size (65) for bucket 125
  Calculating Z arrays for bucket 125
  Entering block accumulator loop for bucket 125:
  bucket 125: 10%
  bucket 125: 20%
  bucket 125: 30%
  bucket 125: 40%
  Sorting block time: 00:00:00
Returning block of 60 for bucket 123
Getting block 126 of 316
  Reserving size (65) for bucket 126
  Calculating Z arrays for bucket 126
  bucket 125: 50%
  Sorting block time: 00:00:00
Returning block of 51 for bucket 124
  Entering block accumulator loop for bucket 126:
  bucket 125: 60%
  bucket 125: 70%
  bucket 126: 10%
  bucket 125: 80%
  bucket 126: 20%
  bucket 125: 90%
  bucket 126: 30%
  bucket 125: 100%
  Sorting block of length 32 for bucket 125
  (Using difference cover)
  bucket 126: 40%
Getting block 127 of 316
  Reserving size (65) for bucket 127
  Calculating Z arrays for bucket 127
  bucket 126: 50%
  Entering block accumulator loop for bucket 127:
  bucket 126: 60%
  bucket 127: 10%
  bucket 126: 70%
  bucket 127: 20%
  bucket 126: 80%
  bucket 127: 30%
  bucket 126: 90%
  Sorting block time: 00:00:00
Returning block of 33 for bucket 125
  bucket 127: 40%
  bucket 126: 100%
  Sorting block of length 46 for bucket 126
  (Using difference cover)
  bucket 127: 50%
Getting block 128 of 316
  Reserving size (65) for bucket 128
  Calculating Z arrays for bucket 128
  bucket 127: 60%
  Entering block accumulator loop for bucket 128:
  bucket 127: 70%
  bucket 128: 10%
  bucket 127: 80%
Getting block 129 of 316
  Reserving size (65) for bucket 129
  Calculating Z arrays for bucket 129
  bucket 127: 90%
  bucket 128: 20%
  Entering block accumulator loop for bucket 129:
  bucket 127: 100%
  Sorting block time: 00:00:00
  Sorting block of length 21 for bucket 127
  (Using difference cover)
Returning block of 47 for bucket 126
  bucket 128: 30%
  bucket 129: 10%
  bucket 128: 40%
  bucket 129: 20%
  bucket 128: 50%
  bucket 129: 30%
  bucket 128: 60%
  bucket 129: 40%
  bucket 129: 50%
  bucket 128: 70%
  bucket 129: 60%
  bucket 128: 80%
  Sorting block time: 00:00:00
Returning block of 22 for bucket 127
  bucket 129: 70%
  bucket 128: 90%
  bucket 129: 80%
Getting block 130 of 316
  Reserving size (65) for bucket 130
  Calculating Z arrays for bucket 130
  bucket 128: 100%
  Sorting block of length 43 for bucket 128
  (Using difference cover)
  bucket 129: 90%
  Entering block accumulator loop for bucket 130:
  bucket 129: 100%
  Sorting block of length 59 for bucket 129
  (Using difference cover)
  bucket 130: 10%
  bucket 130: 20%
  bucket 130: 30%
  bucket 130: 40%
  bucket 130: 50%
  bucket 130: 60%
  bucket 130: 70%
  bucket 130: 80%
  Sorting block time: 00:00:00
Returning block of 44 for bucket 128
  bucket 130: 90%
  Sorting block time: 00:00:00
Returning block of 60 for bucket 129
  bucket 130: 100%
  Sorting block of length 22 for bucket 130
  (Using difference cover)
Getting block 131 of 316
  Reserving size (65) for bucket 131
  Calculating Z arrays for bucket 131
  Entering block accumulator loop for bucket 131:
  bucket 131: 10%
  bucket 131: 20%
Getting block 132 of 316
  Reserving size (65) for bucket 132
  Calculating Z arrays for bucket 132
  Sorting block time: 00:00:00
Returning block of 23 for bucket 130
  bucket 131: 30%
  Entering block accumulator loop for bucket 132:
  bucket 131: 40%
  bucket 132: 10%
  bucket 131: 50%
  bucket 131: 60%
  bucket 132: 20%
  bucket 131: 70%
  bucket 132: 30%
  bucket 131: 80%
  bucket 132: 40%
  bucket 131: 90%
  bucket 132: 50%
  bucket 131: 100%
  Sorting block of length 51 for bucket 131
  (Using difference cover)
  bucket 132: 60%
  bucket 132: 70%
  bucket 132: 80%
  bucket 132: 90%
Getting block 133 of 316
  Reserving size (65) for bucket 133
  Calculating Z arrays for bucket 133
  bucket 132: 100%
  Sorting block of length 51 for bucket 132
  (Using difference cover)
  Entering block accumulator loop for bucket 133:
  Sorting block time: 00:00:00
Returning block of 52 for bucket 131
  bucket 133: 10%
Getting block 134 of 316
  Reserving size (65) for bucket 134
  Calculating Z arrays for bucket 134
  bucket 133: 20%
  Entering block accumulator loop for bucket 134:
  bucket 133: 30%
  bucket 134: 10%
  bucket 133: 40%
  bucket 134: 20%
  Sorting block time: 00:00:00
Returning block of 52 for bucket 132
  bucket 133: 50%
  bucket 134: 30%
  bucket 133: 60%
  bucket 134: 40%
  bucket 133: 70%
  bucket 134: 50%
  bucket 133: 80%
  bucket 134: 60%
  bucket 133: 90%
  bucket 134: 70%
  bucket 133: 100%
  Sorting block of length 24 for bucket 133
  (Using difference cover)
  bucket 134: 80%
  bucket 134: 90%
  bucket 134: 100%
Getting block 135 of 316
  Reserving size (65) for bucket 135
  Calculating Z arrays for bucket 135
  Sorting block of length 45 for bucket 134
  (Using difference cover)
  Entering block accumulator loop for bucket 135:
  bucket 135: 10%
  bucket 135: 20%
  bucket 135: 30%
  bucket 135: 40%
  bucket 135: 50%
  Sorting block time: 00:00:00
Returning block of 25 for bucket 133
  bucket 135: 60%
Getting block 136 of 316
  Reserving size (65) for bucket 136
  Calculating Z arrays for bucket 136
  bucket 135: 70%
  Sorting block time: 00:00:00
Returning block of 46 for bucket 134
  Entering block accumulator loop for bucket 136:
  bucket 135: 80%
  bucket 136: 10%
  bucket 135: 90%
  bucket 136: 20%
  bucket 135: 100%
  Sorting block of length 62 for bucket 135
  (Using difference cover)
  bucket 136: 30%
Getting block 137 of 316
  Reserving size (65) for bucket 137
  Calculating Z arrays for bucket 137
  bucket 136: 40%
  Entering block accumulator loop for bucket 137:
  bucket 136: 50%
  bucket 136: 60%
  bucket 137: 10%
  bucket 136: 70%
  bucket 137: 20%
  bucket 136: 80%
  Sorting block time: 00:00:00
Returning block of 63 for bucket 135
  bucket 136: 90%
  bucket 137: 30%
  bucket 136: 100%
  Sorting block of length 45 for bucket 136
  (Using difference cover)
  bucket 137: 40%
  bucket 137: 50%
  bucket 137: 60%
  bucket 137: 70%
  bucket 137: 80%
  Sorting block time: 00:00:00
Returning block of 46 for bucket 136
  bucket 137: 90%
  bucket 137: 100%
  Sorting block of length 45 for bucket 137
  (Using difference cover)
Getting block 138 of 316
  Reserving size (65) for bucket 138
  Calculating Z arrays for bucket 138
  Entering block accumulator loop for bucket 138:
  bucket 138: 10%
  bucket 138: 20%
  bucket 138: 30%
  Sorting block time: 00:00:00
Returning block of 46 for bucket 137
  bucket 138: 40%
  bucket 138: 50%
Getting block 139 of 316
  Reserving size (65) for bucket 139
  Calculating Z arrays for bucket 139
  bucket 138: 60%
  Entering block accumulator loop for bucket 139:
  bucket 138: 70%
  bucket 139: 10%
  bucket 138: 80%
  bucket 139: 20%
  bucket 138: 90%
  bucket 139: 30%
  bucket 138: 100%
  Sorting block of length 50 for bucket 138
  bucket 139: 40%
  (Using difference cover)
  bucket 139: 50%
  bucket 139: 60%
Getting block 140 of 316
  Reserving size (65) for bucket 140
  Calculating Z arrays for bucket 140
  bucket 139: 70%
  bucket 139: 80%
  Entering block accumulator loop for bucket 140:
  bucket 139: 90%
  bucket 139: 100%
  Sorting block of length 64 for bucket 139
  (Using difference cover)
  bucket 140: 10%
  Sorting block time: 00:00:00
Returning block of 51 for bucket 138
Getting block 141 of 316
  Reserving size (65) for bucket 141
  Calculating Z arrays for bucket 141
  bucket 140: 20%
  Entering block accumulator loop for bucket 141:
  bucket 140: 30%
  bucket 140: 40%
  bucket 141: 10%
  bucket 140: 50%
  bucket 141: 20%
  bucket 140: 60%
  Sorting block time: 00:00:00
Returning block of 65 for bucket 139
  bucket 141: 30%
  bucket 140: 70%
  bucket 141: 40%
  bucket 140: 80%
  bucket 141: 50%
  bucket 140: 90%
  bucket 141: 60%
  bucket 140: 100%
  Sorting block of length 26 for bucket 140
  (Using difference cover)
  bucket 141: 70%
  bucket 141: 80%
  bucket 141: 90%
  bucket 141: 100%
  Sorting block of length 63 for bucket 141
  (Using difference cover)
Getting block 142 of 316
  Reserving size (65) for bucket 142
  Calculating Z arrays for bucket 142
  Entering block accumulator loop for bucket 142:
  bucket 142: 10%
Getting block 143 of 316
  Reserving size (65) for bucket 143
  Calculating Z arrays for bucket 143
  bucket 142: 20%
  Entering block accumulator loop for bucket 143:
  bucket 142: 30%
  bucket 142: 40%
  bucket 143: 10%
  Sorting block time: 00:00:00
  bucket 142: 50%
Returning block of 27 for bucket 140
  bucket 143: 20%
  bucket 142: 60%
  Sorting block time: 00:00:00
Returning block of 64 for bucket 141
  bucket 143: 30%
  bucket 142: 70%
  bucket 143: 40%
  bucket 142: 80%
  bucket 142: 90%
  bucket 143: 50%
  bucket 142: 100%
  Sorting block of length 45 for bucket 142
  (Using difference cover)
  bucket 143: 60%
  bucket 143: 70%
  bucket 143: 80%
  bucket 143: 90%
  bucket 143: 100%
  Sorting block of length 21 for bucket 143
  (Using difference cover)
Getting block 144 of 316
  Reserving size (65) for bucket 144
  Calculating Z arrays for bucket 144
  Entering block accumulator loop for bucket 144:
  bucket 144: 10%
  bucket 144: 20%
  bucket 144: 30%
  Sorting block time: 00:00:00
Returning block of 46 for bucket 142
  bucket 144: 40%
  Sorting block time: 00:00:00
Returning block of 22 for bucket 143
  bucket 144: 50%
  bucket 144: 60%
  bucket 144: 70%
Getting block 145 of 316
  Reserving size (65) for bucket 145
  Calculating Z arrays for bucket 145
  bucket 144: 80%
  Entering block accumulator loop for bucket 145:
  bucket 144: 90%
  bucket 145: 10%
  bucket 144: 100%
  Sorting block of length 50 for bucket 144
  (Using difference cover)
  bucket 145: 20%
  bucket 145: 30%
  bucket 145: 40%
  bucket 145: 50%
  bucket 145: 60%
  Sorting block time: 00:00:00
Getting block 146 of 316
  Reserving size (65) for bucket 146
  Calculating Z arrays for bucket 146
  bucket 145: 70%
Returning block of 51 for bucket 144
  Entering block accumulator loop for bucket 146:
  bucket 145: 80%
  bucket 145: 90%
  bucket 146: 10%
  bucket 145: 100%
  Sorting block of length 29 for bucket 145
  (Using difference cover)
  bucket 146: 20%
  bucket 146: 30%
  bucket 146: 40%
  bucket 146: 50%
  bucket 146: 60%
  bucket 146: 70%
  Sorting block time: 00:00:00
Returning block of 30 for bucket 145
  bucket 146: 80%
  bucket 146: 90%
  bucket 146: 100%
  Sorting block of length 59 for bucket 146
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 60 for bucket 146
Getting block 147 of 316
  Reserving size (65) for bucket 147
  Calculating Z arrays for bucket 147
  Entering block accumulator loop for bucket 147:
  bucket 147: 10%
  bucket 147: 20%
  bucket 147: 30%
  bucket 147: 40%
  bucket 147: 50%
  bucket 147: 60%
Getting block 148 of 316
  Reserving size (65) for bucket 148
  Calculating Z arrays for bucket 148
  bucket 147: 70%
  Entering block accumulator loop for bucket 148:
  bucket 147: 80%
  bucket 148: 10%
  bucket 147: 90%
  bucket 148: 20%
  bucket 147: 100%
  Sorting block of length 55 for bucket 147
  (Using difference cover)
  bucket 148: 30%
  bucket 148: 40%
Getting block 149 of 316
  Reserving size (65) for bucket 149
  Calculating Z arrays for bucket 149
  bucket 148: 50%
  bucket 148: 60%
  Entering block accumulator loop for bucket 149:
  bucket 148: 70%
  bucket 149: 10%
  bucket 148: 80%
  bucket 148: 90%
  Sorting block time: 00:00:00
Returning block of 56 for bucket 147
  bucket 149: 20%
  bucket 148: 100%
  Sorting block of length 52 for bucket 148
  (Using difference cover)
  bucket 149: 30%
  bucket 149: 40%
  bucket 149: 50%
  bucket 149: 60%
  Sorting block time: 00:00:00
Returning block of 53 for bucket 148
  bucket 149: 70%
  bucket 149: 80%
  bucket 149: 90%
  bucket 149: 100%
  Sorting block of length 19 for bucket 149
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 20 for bucket 149
Getting block 150 of 316
  Reserving size (65) for bucket 150
  Calculating Z arrays for bucket 150
  Entering block accumulator loop for bucket 150:
Getting block 151 of 316
  Reserving size (65) for bucket 151
  Calculating Z arrays for bucket 151
  bucket 150: 10%
  Entering block accumulator loop for bucket 151:
  bucket 150: 20%
  bucket 151: 10%
  bucket 150: 30%
  bucket 151: 20%
  bucket 150: 40%
  bucket 151: 30%
  bucket 150: 50%
  bucket 151: 40%
  bucket 150: 60%
  bucket 151: 50%
  bucket 150: 70%
  bucket 151: 60%
  bucket 150: 80%
  bucket 151: 70%
  bucket 150: 90%
  bucket 151: 80%
  bucket 150: 100%
  Sorting block of length 46 for bucket 150
  (Using difference cover)
  bucket 151: 90%
  bucket 151: 100%
  Sorting block of length 54 for bucket 151
  (Using difference cover)
Getting block 152 of 316
  Reserving size (65) for bucket 152
  Calculating Z arrays for bucket 152
  Entering block accumulator loop for bucket 152:
  bucket 152: 10%
  bucket 152: 20%
  bucket 152: 30%
  bucket 152: 40%
  bucket 152: 50%
  Sorting block time: 00:00:00
Returning block of 47 for bucket 150
  bucket 152: 60%
  Sorting block time: 00:00:00
Returning block of 55 for bucket 151
  bucket 152: 70%
Getting block 153 of 316
  Reserving size (65) for bucket 153
  Calculating Z arrays for bucket 153
  bucket 152: 80%
  Entering block accumulator loop for bucket 153:
  bucket 152: 90%
  bucket 152: 100%
  Sorting block of length 63 for bucket 152
  (Using difference cover)
  bucket 153: 10%
Getting block 154 of 316
  Reserving size (65) for bucket 154
  Calculating Z arrays for bucket 154
  bucket 153: 20%
  Entering block accumulator loop for bucket 154:
  bucket 153: 30%
  bucket 154: 10%
  bucket 153: 40%
  bucket 154: 20%
  bucket 153: 50%
  bucket 154: 30%
  Sorting block time: 00:00:00
Returning block of 64 for bucket 152
  bucket 153: 60%
  bucket 154: 40%
  bucket 154: 50%
  bucket 153: 70%
  bucket 154: 60%
  bucket 153: 80%
  bucket 154: 70%
  bucket 153: 90%
  bucket 154: 80%
  bucket 153: 100%
  Sorting block of length 29 for bucket 153
  (Using difference cover)
  bucket 154: 90%
  bucket 154: 100%
  Sorting block of length 46 for bucket 154
  (Using difference cover)
Getting block 155 of 316
  Reserving size (65) for bucket 155
  Calculating Z arrays for bucket 155
  Entering block accumulator loop for bucket 155:
  bucket 155: 10%
  bucket 155: 20%
  bucket 155: 30%
  bucket 155: 40%
  bucket 155: 50%
Getting block 156 of 316
  Reserving size (65) for bucket 156
  Calculating Z arrays for bucket 156
  bucket 155: 60%
  Entering block accumulator loop for bucket 156:
  bucket 155: 70%
  Sorting block time: 00:00:00
Returning block of 30 for bucket 153
  bucket 156: 10%
  bucket 155: 80%
  Sorting block time: 00:00:00
Returning block of 47 for bucket 154
  bucket 156: 20%
  bucket 155: 90%
  bucket 156: 30%
  bucket 155: 100%
  Sorting block of length 63 for bucket 155
  (Using difference cover)
  bucket 156: 40%
  bucket 156: 50%
Getting block 157 of 316
  Reserving size (65) for bucket 157
  Calculating Z arrays for bucket 157
  bucket 156: 60%
  Entering block accumulator loop for bucket 157:
  bucket 156: 70%
  bucket 157: 10%
  bucket 156: 80%
Getting block 158 of 316
  Reserving size (65) for bucket 158
  Calculating Z arrays for bucket 158
  bucket 156: 90%
  bucket 157: 20%
  Sorting block time: 00:00:00
Returning block of 64 for bucket 155
  Entering block accumulator loop for bucket 158:
  bucket 156: 100%
  Sorting block of length 46 for bucket 156
  (Using difference cover)
  bucket 157: 30%
  bucket 158: 10%
  bucket 157: 40%
  bucket 158: 20%
  bucket 157: 50%
  bucket 158: 30%
  bucket 157: 60%
  bucket 158: 40%
  bucket 157: 70%
  bucket 158: 50%
  bucket 157: 80%
  bucket 158: 60%
  Sorting block time: 00:00:00
Returning block of 47 for bucket 156
  bucket 157: 90%
  bucket 158: 70%
  bucket 157: 100%
  Sorting block of length 25 for bucket 157
  (Using difference cover)
  bucket 158: 80%
  bucket 158: 90%
  bucket 158: 100%
  Sorting block of length 59 for bucket 158
  (Using difference cover)
Getting block 159 of 316
  Reserving size (65) for bucket 159
  Calculating Z arrays for bucket 159
  Entering block accumulator loop for bucket 159:
  bucket 159: 10%
  bucket 159: 20%
  Sorting block time: 00:00:00
  bucket 159: 30%
Returning block of 26 for bucket 157
  Sorting block time: 00:00:00
Returning block of 60 for bucket 158
  bucket 159: 40%
Getting block 160 of 316
  Reserving size (65) for bucket 160
  Calculating Z arrays for bucket 160
  Entering block accumulator loop for bucket 160:
  bucket 159: 50%
  bucket 160: 10%
  bucket 159: 60%
  bucket 160: 20%
  bucket 159: 70%
  bucket 160: 30%
  bucket 159: 80%
  bucket 160: 40%
  bucket 159: 90%
  bucket 160: 50%
  bucket 159: 100%
  Sorting block of length 63 for bucket 159
  (Using difference cover)
  bucket 160: 60%
  bucket 160: 70%
Getting block 161 of 316
  bucket 160: 80%
  Reserving size (65) for bucket 161
  Calculating Z arrays for bucket 161
  bucket 160: 90%
  Entering block accumulator loop for bucket 161:
  bucket 160: 100%
  Sorting block of length 64 for bucket 160
  (Using difference cover)
  bucket 161: 10%
  bucket 161: 20%
  bucket 161: 30%
  bucket 161: 40%
Getting block 162 of 316
  Reserving size (65) for bucket 162
  Calculating Z arrays for bucket 162
  Sorting block time: 00:00:00
Returning block of 64 for bucket 159
  Entering block accumulator loop for bucket 162:
  bucket 161: 50%
  Sorting block time: 00:00:00
Returning block of 65 for bucket 160
  bucket 162: 10%
  bucket 161: 60%
  bucket 162: 20%
  bucket 161: 70%
Getting block 163 of 316
  Reserving size (65) for bucket 163
  Calculating Z arrays for bucket 163
  bucket 162: 30%
  bucket 161: 80%
  Entering block accumulator loop for bucket 163:
  bucket 162: 40%
  bucket 161: 90%
  bucket 162: 50%
  bucket 163: 10%
  bucket 161: 100%
  Sorting block of length 59 for bucket 161
  (Using difference cover)
  bucket 162: 60%
  bucket 163: 20%
  bucket 162: 70%
  bucket 163: 30%
  bucket 162: 80%
  bucket 163: 40%
  bucket 162: 90%
  bucket 163: 50%
  bucket 162: 100%
  Sorting block of length 60 for bucket 162
  (Using difference cover)
  bucket 163: 60%
  bucket 163: 70%
  bucket 163: 80%
  bucket 163: 90%
  bucket 163: 100%
  Sorting block of length 57 for bucket 163
  (Using difference cover)
Getting block 164 of 316
  Reserving size (65) for bucket 164
  Calculating Z arrays for bucket 164
  Sorting block time: 00:00:00
Returning block of 60 for bucket 161
  Entering block accumulator loop for bucket 164:
  bucket 164: 10%
  bucket 164: 20%
Getting block 165 of 316
  Reserving size (65) for bucket 165
  Calculating Z arrays for bucket 165
  bucket 164: 30%
  Entering block accumulator loop for bucket 165:
  bucket 164: 40%
  bucket 165: 10%
  Sorting block time: 00:00:00
Returning block of 61 for bucket 162
  bucket 164: 50%
  bucket 165: 20%
  bucket 164: 60%
  Sorting block time: 00:00:00
Returning block of 58 for bucket 163
  bucket 165: 30%
  bucket 164: 70%
  bucket 165: 40%
  bucket 164: 80%
  bucket 165: 50%
  bucket 164: 90%
  bucket 165: 60%
  bucket 164: 100%
  Sorting block of length 50 for bucket 164
  (Using difference cover)
  bucket 165: 70%
  bucket 165: 80%
  bucket 165: 90%
Getting block 166 of 316
  Reserving size (65) for bucket 166
  Calculating Z arrays for bucket 166
  bucket 165: 100%
  Sorting block of length 57 for bucket 165
  (Using difference cover)
  Entering block accumulator loop for bucket 166:
  bucket 166: 10%
  bucket 166: 20%
  bucket 166: 30%
  bucket 166: 40%
  bucket 166: 50%
  bucket 166: 60%
  Sorting block time: 00:00:00
Returning block of 51 for bucket 164
  bucket 166: 70%
  Sorting block time: 00:00:00
Returning block of 58 for bucket 165
  bucket 166: 80%
Getting block 167 of 316
  Reserving size (65) for bucket 167
  Calculating Z arrays for bucket 167
  bucket 166: 90%
  Entering block accumulator loop for bucket 167:
  bucket 166: 100%
  Sorting block of length 55 for bucket 166
  (Using difference cover)
  bucket 167: 10%
  bucket 167: 20%
  bucket 167: 30%
  bucket 167: 40%
  bucket 167: 50%
  bucket 167: 60%
  Sorting block time: 00:00:00
Returning block of 56 for bucket 166
  bucket 167: 70%
  bucket 167: 80%
  bucket 167: 90%
  bucket 167: 100%
  Sorting block of length 55 for bucket 167
  (Using difference cover)
Getting block 168 of 316
  Reserving size (65) for bucket 168
  Calculating Z arrays for bucket 168
  Entering block accumulator loop for bucket 168:
  bucket 168: 10%
  bucket 168: 20%
  Sorting block time: 00:00:00
Returning block of 56 for bucket 167
  bucket 168: 30%
  bucket 168: 40%
  bucket 168: 50%
Getting block 169 of 316
  Reserving size (65) for bucket 169
  Calculating Z arrays for bucket 169
  bucket 168: 60%
  Entering block accumulator loop for bucket 169:
  bucket 168: 70%
  bucket 169: 10%
  bucket 168: 80%
  bucket 169: 20%
  bucket 168: 90%
  bucket 169: 30%
  bucket 168: 100%
  Sorting block of length 51 for bucket 168
  (Using difference cover)
  bucket 169: 40%
  bucket 169: 50%
  bucket 169: 60%
Getting block 170 of 316
  Reserving size (65) for bucket 170
  Calculating Z arrays for bucket 170
  bucket 169: 70%
  Entering block accumulator loop for bucket 170:
  bucket 169: 80%
  bucket 170: 10%
  bucket 169: 90%
  Sorting block time: 00:00:00
Returning block of 52 for bucket 168
Getting block 171 of 316
  Reserving size (65) for bucket 171
  Calculating Z arrays for bucket 171
  bucket 170: 20%
  bucket 169: 100%
  Sorting block of length 40 for bucket 169
  (Using difference cover)
  Entering block accumulator loop for bucket 171:
  bucket 170: 30%
  bucket 171: 10%
  bucket 170: 40%
  bucket 171: 20%
  bucket 170: 50%
  bucket 171: 30%
  bucket 170: 60%
  bucket 171: 40%
  bucket 170: 70%
  bucket 171: 50%
  Sorting block time: 00:00:00
Returning block of 41 for bucket 169
  bucket 170: 80%
  bucket 171: 60%
  bucket 170: 90%
  bucket 171: 70%
  bucket 170: 100%
  Sorting block of length 24 for bucket 170
  (Using difference cover)
  bucket 171: 80%
  bucket 171: 90%
  bucket 171: 100%
  Sorting block of length 60 for bucket 171
  (Using difference cover)
Getting block 172 of 316
  Reserving size (65) for bucket 172
  Calculating Z arrays for bucket 172
  Entering block accumulator loop for bucket 172:
  bucket 172: 10%
  bucket 172: 20%
  bucket 172: 30%
  Sorting block time: 00:00:00
  bucket 172: 40%
Returning block of 25 for bucket 170
  bucket 172: 50%
  Sorting block time: 00:00:00
Returning block of 61 for bucket 171
Getting block 173 of 316
  Reserving size (65) for bucket 173
  Calculating Z arrays for bucket 173
  bucket 172: 60%
  Entering block accumulator loop for bucket 173:
  bucket 172: 70%
  bucket 173: 10%
  bucket 172: 80%
  bucket 173: 20%
  bucket 172: 90%
  bucket 173: 30%
  bucket 172: 100%
  Sorting block of length 48 for bucket 172
  (Using difference cover)
  bucket 173: 40%
  bucket 173: 50%
  bucket 173: 60%
  bucket 173: 70%
Getting block 174 of 316
  Reserving size (65) for bucket 174
  Calculating Z arrays for bucket 174
  bucket 173: 80%
  Entering block accumulator loop for bucket 174:
  bucket 173: 90%
  bucket 173: 100%
  Sorting block of length 23 for bucket 173
  (Using difference cover)
  Sorting block time: 00:00:00
  bucket 174: 10%
Returning block of 49 for bucket 172
  bucket 174: 20%
  bucket 174: 30%
  bucket 174: 40%
Getting block 175 of 316
  Reserving size (65) for bucket 175
  Calculating Z arrays for bucket 175
  Sorting block time: 00:00:00
  bucket 174: 50%
Returning block of 24 for bucket 173
  Entering block accumulator loop for bucket 175:
  bucket 174: 60%
  bucket 175: 10%
  bucket 174: 70%
  bucket 175: 20%
  bucket 175: 30%
  bucket 174: 80%
  bucket 175: 40%
  bucket 174: 90%
  bucket 175: 50%
  bucket 174: 100%
  Sorting block of length 48 for bucket 174
  (Using difference cover)
  bucket 175: 60%
Getting block 176 of 316
  Reserving size (65) for bucket 176
  Calculating Z arrays for bucket 176
  bucket 175: 70%
  Entering block accumulator loop for bucket 176:
  bucket 175: 80%
  bucket 175: 90%
  bucket 176: 10%
  bucket 175: 100%
  Sorting block of length 59 for bucket 175
  (Using difference cover)
  bucket 176: 20%
  bucket 176: 30%
  bucket 176: 40%
  bucket 176: 50%
  bucket 176: 60%
Getting block 177 of 316
  Reserving size (65) for bucket 177
  Calculating Z arrays for bucket 177
  bucket 176: 70%
  Entering block accumulator loop for bucket 177:
  bucket 176: 80%
  Sorting block time: 00:00:00
Returning block of 49 for bucket 174
  bucket 177: 10%
  bucket 176: 90%
Getting block 178 of 316
  Reserving size (65) for bucket 178
  Calculating Z arrays for bucket 178
  Sorting block time: 00:00:00
Returning block of 60 for bucket 175
  bucket 177: 20%
  bucket 176: 100%
  Sorting block of length 59 for bucket 176
  (Using difference cover)
  Entering block accumulator loop for bucket 178:
  bucket 177: 30%
  bucket 178: 10%
  bucket 177: 40%
  bucket 178: 20%
  bucket 177: 50%
  bucket 178: 30%
  bucket 177: 60%
  bucket 178: 40%
  bucket 177: 70%
  bucket 178: 50%
  bucket 177: 80%
  bucket 178: 60%
  Sorting block time: 00:00:00
Returning block of 60 for bucket 176
  bucket 178: 70%
  bucket 177: 90%
  bucket 178: 80%
  bucket 177: 100%
  Sorting block of length 55 for bucket 177
  (Using difference cover)
  bucket 178: 90%
  bucket 178: 100%
  Sorting block of length 41 for bucket 178
  (Using difference cover)
Getting block 179 of 316
  Reserving size (65) for bucket 179
  Calculating Z arrays for bucket 179
  Entering block accumulator loop for bucket 179:
  bucket 179: 10%
  bucket 179: 20%
  bucket 179: 30%
  bucket 179: 40%
  Sorting block time: 00:00:00
Returning block of 56 for bucket 177
  bucket 179: 50%
  Sorting block time: 00:00:00
Returning block of 42 for bucket 178
  bucket 179: 60%
Getting block 180 of 316
  Reserving size (65) for bucket 180
  Calculating Z arrays for bucket 180
  bucket 179: 70%
  Entering block accumulator loop for bucket 180:
  bucket 179: 80%
  bucket 180: 10%
  bucket 179: 90%
  bucket 180: 20%
  bucket 179: 100%
  Sorting block of length 57 for bucket 179
  (Using difference cover)
  bucket 180: 30%
  bucket 180: 40%
  bucket 180: 50%
  bucket 180: 60%
Getting block 181 of 316
  Reserving size (65) for bucket 181
  Calculating Z arrays for bucket 181
  bucket 180: 70%
  Entering block accumulator loop for bucket 181:
  bucket 180: 80%
  Sorting block time: 00:00:00
Returning block of 58 for bucket 179
  bucket 181: 10%
  bucket 180: 90%
  bucket 180: 100%
  bucket 181: 20%
  Sorting block of length 46 for bucket 180
  (Using difference cover)
  bucket 181: 30%
  bucket 181: 40%
  bucket 181: 50%
Getting block 182 of 316
  Reserving size (65) for bucket 182
  Calculating Z arrays for bucket 182
  bucket 181: 60%
  Entering block accumulator loop for bucket 182:
  bucket 181: 70%
  Sorting block time: 00:00:00
Returning block of 47 for bucket 180
  bucket 182: 10%
  bucket 181: 80%
Getting block 183 of 316
  Reserving size (65) for bucket 183
  Calculating Z arrays for bucket 183
  bucket 182: 20%
  bucket 181: 90%
  Entering block accumulator loop for bucket 183:
  bucket 182: 30%
  bucket 181: 100%
  Sorting block of length 60 for bucket 181
  (Using difference cover)
  bucket 183: 10%
  bucket 182: 40%
  bucket 183: 20%
  bucket 183: 30%
  bucket 182: 50%
  bucket 183: 40%
  bucket 182: 60%
  bucket 183: 50%
  bucket 182: 70%
  bucket 183: 60%
  bucket 182: 80%
  bucket 183: 70%
  Sorting block time: 00:00:00
Returning block of 61 for bucket 181
  bucket 183: 80%
  bucket 182: 90%
  bucket 183: 90%
  bucket 182: 100%
  Sorting block of length 58 for bucket 182
  (Using difference cover)
  bucket 183: 100%
  Sorting block of length 47 for bucket 183
  (Using difference cover)
Getting block 184 of 316
  Reserving size (65) for bucket 184
  Calculating Z arrays for bucket 184
  Entering block accumulator loop for bucket 184:
  bucket 184: 10%
  bucket 184: 20%
  bucket 184: 30%
  bucket 184: 40%
  Sorting block time: 00:00:00
Returning block of 59 for bucket 182
  Sorting block time: 00:00:00
Returning block of 48 for bucket 183
  bucket 184: 50%
Getting block 185 of 316
  Reserving size (65) for bucket 185
  Calculating Z arrays for bucket 185
  bucket 184: 60%
  Entering block accumulator loop for bucket 185:
  bucket 184: 70%
  bucket 184: 80%
Getting block 186 of 316
  Reserving size (65) for bucket 186
  Calculating Z arrays for bucket 186
  bucket 185: 10%
  bucket 184: 90%
  Entering block accumulator loop for bucket 186:
  bucket 185: 20%
  bucket 184: 100%
  Sorting block of length 56 for bucket 184
  (Using difference cover)
  bucket 186: 10%
  bucket 185: 30%
  bucket 186: 20%
  bucket 185: 40%
  bucket 186: 30%
  bucket 186: 40%
  bucket 185: 50%
  bucket 186: 50%
  bucket 185: 60%
  bucket 186: 60%
  bucket 185: 70%
  bucket 186: 70%
  Sorting block time: 00:00:00
Returning block of 57 for bucket 184
  bucket 186: 80%
  bucket 185: 80%
  bucket 186: 90%
  bucket 185: 90%
  bucket 186: 100%
  Sorting block of length 53 for bucket 186
  (Using difference cover)
  bucket 185: 100%
  Sorting block of length 29 for bucket 185
  (Using difference cover)
Getting block 187 of 316
  Reserving size (65) for bucket 187
  Calculating Z arrays for bucket 187
  Entering block accumulator loop for bucket 187:
  bucket 187: 10%
Getting block 188 of 316
  Reserving size (65) for bucket 188
  Calculating Z arrays for bucket 188
  bucket 187: 20%
  Entering block accumulator loop for bucket 188:
  bucket 187: 30%
  bucket 188: 10%
  bucket 187: 40%
  bucket 188: 20%
  Sorting block time: 00:00:00
Returning block of 54 for bucket 186
  bucket 187: 50%
  bucket 188: 30%
  bucket 187: 60%
  Sorting block time: 00:00:00
Returning block of 30 for bucket 185
  bucket 188: 40%
  bucket 187: 70%
  bucket 188: 50%
  bucket 187: 80%
  bucket 188: 60%
  bucket 187: 90%
  bucket 188: 70%
  bucket 188: 80%
  bucket 187: 100%
  Sorting block of length 36 for bucket 187
  (Using difference cover)
  bucket 188: 90%
  bucket 188: 100%
  Sorting block of length 60 for bucket 188
  (Using difference cover)
Getting block 189 of 316
  Reserving size (65) for bucket 189
  Calculating Z arrays for bucket 189
  Entering block accumulator loop for bucket 189:
  bucket 189: 10%
  bucket 189: 20%
  bucket 189: 30%
  Sorting block time: 00:00:00
Returning block of 37 for bucket 187
  bucket 189: 40%
  Sorting block time: 00:00:00
Returning block of 61 for bucket 188
  bucket 189: 50%
Getting block 190 of 316
  Reserving size (65) for bucket 190
  Calculating Z arrays for bucket 190
  bucket 189: 60%
  Entering block accumulator loop for bucket 190:
  bucket 189: 70%
  bucket 190: 10%
  bucket 189: 80%
  bucket 190: 20%
  bucket 189: 90%
  bucket 190: 30%
  bucket 189: 100%
  Sorting block of length 51 for bucket 189
  (Using difference cover)
  bucket 190: 40%
  bucket 190: 50%
  bucket 190: 60%
  bucket 190: 70%
Getting block 191 of 316
  Reserving size (65) for bucket 191
  Calculating Z arrays for bucket 191
  bucket 190: 80%
  Entering block accumulator loop for bucket 191:
  bucket 190: 90%
  Sorting block time: 00:00:00
Returning block of 52 for bucket 189
  bucket 190: 100%
  Sorting block of length 58 for bucket 190
  (Using difference cover)
  bucket 191: 10%
Getting block 192 of 316
  Reserving size (65) for bucket 192
  Calculating Z arrays for bucket 192
  Entering block accumulator loop for bucket 192:
  bucket 191: 20%
  bucket 192: 10%
  bucket 191: 30%
  bucket 192: 20%
  bucket 191: 40%
  bucket 192: 30%
  Sorting block time: 00:00:00
Returning block of 59 for bucket 190
  bucket 191: 50%
  bucket 192: 40%
  bucket 191: 60%
  bucket 192: 50%
  bucket 191: 70%
  bucket 192: 60%
  bucket 192: 70%
  bucket 191: 80%
  bucket 192: 80%
Getting block 193 of 316
  Reserving size (65) for bucket 193
  Calculating Z arrays for bucket 193
  bucket 191: 90%
  bucket 192: 90%
  Entering block accumulator loop for bucket 193:
  bucket 191: 100%
  Sorting block of length 64 for bucket 191
  (Using difference cover)
  bucket 192: 100%
  Sorting block of length 36 for bucket 192
  (Using difference cover)
  bucket 193: 10%
  bucket 193: 20%
  bucket 193: 30%
  bucket 193: 40%
  bucket 193: 50%
  bucket 193: 60%
  bucket 193: 70%
  bucket 193: 80%
  bucket 193: 90%
  bucket 193: 100%
  Sorting block of length 47 for bucket 193
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 65 for bucket 191
  Sorting block time: 00:00:00
Returning block of 37 for bucket 192
  Sorting block time: 00:00:00
Returning block of 48 for bucket 193
Getting block 194 of 316
  Reserving size (65) for bucket 194
  Calculating Z arrays for bucket 194
  Entering block accumulator loop for bucket 194:
  bucket 194: 10%
  bucket 194: 20%
  bucket 194: 30%
Getting block 195 of 316
  Reserving size (65) for bucket 195
  Calculating Z arrays for bucket 195
  bucket 194: 40%
  Entering block accumulator loop for bucket 195:
  bucket 194: 50%
  bucket 195: 10%
  bucket 194: 60%
  bucket 195: 20%
  bucket 194: 70%
  bucket 195: 30%
  bucket 194: 80%
  bucket 195: 40%
  bucket 194: 90%
  bucket 195: 50%
  bucket 194: 100%
  Sorting block of length 48 for bucket 194
  (Using difference cover)
Getting block 196 of 316
  Reserving size (65) for bucket 196
  Calculating Z arrays for bucket 196
  bucket 195: 60%
  Entering block accumulator loop for bucket 196:
  bucket 195: 70%
  bucket 195: 80%
  bucket 196: 10%
  bucket 195: 90%
  bucket 196: 20%
  bucket 195: 100%
  Sorting block of length 54 for bucket 195
  (Using difference cover)
  bucket 196: 30%
  bucket 196: 40%
  bucket 196: 50%
Getting block 197 of 316
  Reserving size (65) for bucket 197
  Calculating Z arrays for bucket 197
  Entering block accumulator loop for bucket 197:
  bucket 196: 60%
  bucket 197: 10%
  bucket 196: 70%
  bucket 197: 20%
  Sorting block time: 00:00:00
  bucket 196: 80%
Returning block of 49 for bucket 194
  bucket 197: 30%
  Sorting block time: 00:00:00
  bucket 196: 90%
Returning block of 55 for bucket 195
Getting block 198 of 316
  Reserving size (65) for bucket 198
  Calculating Z arrays for bucket 198
  bucket 197: 40%
  Entering block accumulator loop for bucket 198:
  bucket 196: 100%
  Sorting block of length 62 for bucket 196
  (Using difference cover)
  bucket 197: 50%
  bucket 198: 10%
  bucket 197: 60%
  bucket 197: 70%
  bucket 198: 20%
  bucket 197: 80%
  bucket 198: 30%
  bucket 197: 90%
  bucket 198: 40%
  bucket 197: 100%
  Sorting block of length 49 for bucket 197
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 63 for bucket 196
  bucket 198: 50%
  bucket 198: 60%
  bucket 198: 70%
  bucket 198: 80%
  bucket 198: 90%
  Sorting block time: 00:00:00
Returning block of 50 for bucket 197
  bucket 198: 100%
  Sorting block of length 52 for bucket 198
  (Using difference cover)
Getting block 199 of 316
  Reserving size (65) for bucket 199
  Calculating Z arrays for bucket 199
  Entering block accumulator loop for bucket 199:
  bucket 199: 10%
  bucket 199: 20%
  bucket 199: 30%
  Sorting block time: 00:00:00
Returning block of 53 for bucket 198
  bucket 199: 40%
  bucket 199: 50%
  bucket 199: 60%
  bucket 199: 70%
Getting block 200 of 316
  Reserving size (65) for bucket 200
  Calculating Z arrays for bucket 200
  bucket 199: 80%
  Entering block accumulator loop for bucket 200:
  bucket 199: 90%
  bucket 200: 10%
  bucket 199: 100%
  Sorting block of length 37 for bucket 199
  (Using difference cover)
  bucket 200: 20%
  bucket 200: 30%
  bucket 200: 40%
  bucket 200: 50%
  bucket 200: 60%
  Sorting block time: 00:00:00
Returning block of 38 for bucket 199
Getting block 201 of 316
  Reserving size (65) for bucket 201
  Calculating Z arrays for bucket 201
  bucket 200: 70%
  Entering block accumulator loop for bucket 201:
  bucket 200: 80%
  bucket 200: 90%
  bucket 201: 10%
  bucket 200: 100%
  Sorting block of length 43 for bucket 200
  (Using difference cover)
  bucket 201: 20%
  bucket 201: 30%
  bucket 201: 40%
  bucket 201: 50%
Getting block 202 of 316
  Reserving size (65) for bucket 202
  Calculating Z arrays for bucket 202
  bucket 201: 60%
  Sorting block time: 00:00:00
Returning block of 44 for bucket 200
  Entering block accumulator loop for bucket 202:
  bucket 201: 70%
  bucket 202: 10%
  bucket 201: 80%
  bucket 202: 20%
  bucket 201: 90%
  bucket 202: 30%
  bucket 201: 100%
  Sorting block of length 57 for bucket 201
  (Using difference cover)
  bucket 202: 40%
  bucket 202: 50%
  bucket 202: 60%
  bucket 202: 70%
  bucket 202: 80%
  bucket 202: 90%
Getting block 203 of 316
  Reserving size (65) for bucket 203
  Calculating Z arrays for bucket 203
  bucket 202: 100%
  Sorting block of length 54 for bucket 202
  (Using difference cover)
  Entering block accumulator loop for bucket 203:
  Sorting block time: 00:00:00
Returning block of 58 for bucket 201
  bucket 203: 10%
  bucket 203: 20%
  bucket 203: 30%
  bucket 203: 40%
  bucket 203: 50%
  Sorting block time: 00:00:00
Returning block of 55 for bucket 202
  bucket 203: 60%
Getting block 204 of 316
  Reserving size (65) for bucket 204
  Calculating Z arrays for bucket 204
  bucket 203: 70%
  Entering block accumulator loop for bucket 204:
  bucket 203: 80%
  bucket 204: 10%
  bucket 203: 90%
  bucket 204: 20%
  bucket 203: 100%
  Sorting block of length 15 for bucket 203
  (Using difference cover)
  bucket 204: 30%
  bucket 204: 40%
  bucket 204: 50%
Getting block 205 of 316
  Reserving size (65) for bucket 205
  Calculating Z arrays for bucket 205
  bucket 204: 60%
  Entering block accumulator loop for bucket 205:
  bucket 204: 70%
  Sorting block time: 00:00:00
Returning block of 16 for bucket 203
  bucket 205: 10%
  bucket 204: 80%
  bucket 205: 20%
  bucket 204: 90%
  bucket 204: 100%
  bucket 205: 30%
  Sorting block of length 52 for bucket 204
  (Using difference cover)
  bucket 205: 40%
Getting block 206 of 316
  Reserving size (65) for bucket 206
  Calculating Z arrays for bucket 206
  bucket 205: 50%
  Entering block accumulator loop for bucket 206:
  bucket 205: 60%
  bucket 206: 10%
  bucket 205: 70%
  bucket 206: 20%
  bucket 205: 80%
  Sorting block time: 00:00:00
Returning block of 53 for bucket 204
  bucket 206: 30%
  bucket 205: 90%
  bucket 206: 40%
  bucket 205: 100%
  Sorting block of length 27 for bucket 205
  (Using difference cover)
  bucket 206: 50%
  bucket 206: 60%
Getting block 207 of 316
  Reserving size (65) for bucket 207
  Calculating Z arrays for bucket 207
  Entering block accumulator loop for bucket 207:
  bucket 206: 70%
  bucket 207: 10%
  bucket 206: 80%
  bucket 207: 20%
  bucket 206: 90%
  bucket 207: 30%
  Sorting block time: 00:00:00
Returning block of 28 for bucket 205
  bucket 206: 100%
  Sorting block of length 61 for bucket 206
  (Using difference cover)
  bucket 207: 40%
  bucket 207: 50%
  bucket 207: 60%
Getting block 208 of 316
  Reserving size (65) for bucket 208
  Calculating Z arrays for bucket 208
  bucket 207: 70%
  Entering block accumulator loop for bucket 208:
  bucket 207: 80%
  bucket 208: 10%
  bucket 207: 90%
  Sorting block time: 00:00:00
  bucket 207: 100%
  Sorting block of length 26 for bucket 207
  (Using difference cover)
Returning block of 62 for bucket 206
  bucket 208: 20%
  bucket 208: 30%
  bucket 208: 40%
  bucket 208: 50%
  bucket 208: 60%
Getting block 209 of 316
  Reserving size (65) for bucket 209
  Calculating Z arrays for bucket 209
  Sorting block time: 00:00:00
Returning block of 27 for bucket 207
  bucket 208: 70%
  Entering block accumulator loop for bucket 209:
  bucket 208: 80%
  bucket 209: 10%
  bucket 208: 90%
  bucket 209: 20%
  bucket 208: 100%
  Sorting block of length 38 for bucket 208
  (Using difference cover)
  bucket 209: 30%
  bucket 209: 40%
  bucket 209: 50%
  bucket 209: 60%
Getting block 210 of 316
  Reserving size (65) for bucket 210
  Calculating Z arrays for bucket 210
  bucket 209: 70%
  Entering block accumulator loop for bucket 210:
  bucket 209: 80%
  Sorting block time: 00:00:00
Returning block of 39 for bucket 208
  bucket 209: 90%
  bucket 210: 10%
  bucket 209: 100%
  Sorting block of length 48 for bucket 209
  (Using difference cover)
  bucket 210: 20%
  bucket 210: 30%
Getting block 211 of 316
  Reserving size (65) for bucket 211
  Calculating Z arrays for bucket 211
  bucket 210: 40%
  Entering block accumulator loop for bucket 211:
  bucket 210: 50%
  Sorting block time: 00:00:00
Returning block of 49 for bucket 209
  bucket 211: 10%
  bucket 210: 60%
  bucket 211: 20%
  bucket 211: 30%
  bucket 210: 70%
  bucket 211: 40%
  bucket 210: 80%
  bucket 211: 50%
  bucket 210: 90%
  bucket 211: 60%
  bucket 211: 70%
  bucket 210: 100%
  Sorting block of length 58 for bucket 210
  (Using difference cover)
Getting block 212 of 316
  Reserving size (65) for bucket 212
  Calculating Z arrays for bucket 212
  bucket 211: 80%
  Entering block accumulator loop for bucket 212:
  bucket 211: 90%
  bucket 212: 10%
  bucket 211: 100%
  Sorting block of length 37 for bucket 211
  (Using difference cover)
  bucket 212: 20%
  bucket 212: 30%
  bucket 212: 40%
  bucket 212: 50%
  bucket 212: 60%
  bucket 212: 70%
Getting block 213 of 316
  Reserving size (65) for bucket 213
  Calculating Z arrays for bucket 213
  bucket 212: 80%
  Entering block accumulator loop for bucket 213:
  bucket 212: 90%
  Sorting block time: 00:00:00
Returning block of 59 for bucket 210
  bucket 212: 100%
  Sorting block of length 44 for bucket 212
  (Using difference cover)
  bucket 213: 10%
  Sorting block time: 00:00:00
Returning block of 38 for bucket 211
  bucket 213: 20%
  bucket 213: 30%
  bucket 213: 40%
Getting block 214 of 316
  Reserving size (65) for bucket 214
  Calculating Z arrays for bucket 214
  bucket 213: 50%
  Sorting block time: 00:00:00
Returning block of 45 for bucket 212
  Entering block accumulator loop for bucket 214:
  bucket 213: 60%
  bucket 213: 70%
  bucket 214: 10%
  bucket 213: 80%
  bucket 214: 20%
  bucket 213: 90%
  bucket 214: 30%
  bucket 213: 100%
  Sorting block of length 60 for bucket 213
  bucket 214: 40%
  (Using difference cover)
  bucket 214: 50%
Getting block 215 of 316
  Reserving size (65) for bucket 215
  Calculating Z arrays for bucket 215
  bucket 214: 60%
  Entering block accumulator loop for bucket 215:
  bucket 214: 70%
  bucket 215: 10%
  bucket 214: 80%
  bucket 215: 20%
Getting block 216 of 316
  Reserving size (65) for bucket 216
  Calculating Z arrays for bucket 216
  bucket 214: 90%
  bucket 215: 30%
  Sorting block time: 00:00:00
  Entering block accumulator loop for bucket 216:
Returning block of 61 for bucket 213
  bucket 214: 100%
  Sorting block of length 55 for bucket 214
  (Using difference cover)
  bucket 215: 40%
  bucket 216: 10%
  bucket 215: 50%
  bucket 216: 20%
  bucket 215: 60%
  bucket 216: 30%
  bucket 215: 70%
  bucket 216: 40%
  bucket 215: 80%
  bucket 216: 50%
  bucket 215: 90%
  bucket 216: 60%
  Sorting block time: 00:00:00
Returning block of 56 for bucket 214
  bucket 215: 100%
  Sorting block of length 48 for bucket 215
  (Using difference cover)
  bucket 216: 70%
  bucket 216: 80%
  bucket 216: 90%
  bucket 216: 100%
  Sorting block of length 62 for bucket 216
  (Using difference cover)
Getting block 217 of 316
  Reserving size (65) for bucket 217
  Calculating Z arrays for bucket 217
  Entering block accumulator loop for bucket 217:
  Sorting block time: 00:00:00
Returning block of 49 for bucket 215
  bucket 217: 10%
  Sorting block time: 00:00:00
Returning block of 63 for bucket 216
  bucket 217: 20%
  bucket 217: 30%
  bucket 217: 40%
  bucket 217: 50%
Getting block 218 of 316
  Reserving size (65) for bucket 218
  Calculating Z arrays for bucket 218
  bucket 217: 60%
  Entering block accumulator loop for bucket 218:
  bucket 217: 70%
  bucket 218: 10%
  bucket 217: 80%
  bucket 218: 20%
  bucket 217: 90%
  bucket 218: 30%
  bucket 217: 100%
  Sorting block of length 44 for bucket 217
  (Using difference cover)
  bucket 218: 40%
  bucket 218: 50%
  bucket 218: 60%
  bucket 218: 70%
  bucket 218: 80%
  bucket 218: 90%
Getting block 219 of 316
  Reserving size (65) for bucket 219
  Calculating Z arrays for bucket 219
  bucket 218: 100%
  Sorting block of length 29 for bucket 218
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 45 for bucket 217
  Entering block accumulator loop for bucket 219:
  bucket 219: 10%
  bucket 219: 20%
  bucket 219: 30%
  Sorting block time: 00:00:00
Returning block of 30 for bucket 218
Getting block 220 of 316
  Reserving size (65) for bucket 220
  Calculating Z arrays for bucket 220
  bucket 219: 40%
  Entering block accumulator loop for bucket 220:
  bucket 219: 50%
  bucket 220: 10%
  bucket 219: 60%
  bucket 220: 20%
  bucket 219: 70%
  bucket 220: 30%
  bucket 219: 80%
  bucket 220: 40%
  bucket 219: 90%
  bucket 220: 50%
  bucket 219: 100%
  Sorting block of length 61 for bucket 219
  (Using difference cover)
  bucket 220: 60%
Getting block 221 of 316
  Reserving size (65) for bucket 221
  Calculating Z arrays for bucket 221
  bucket 220: 70%
  Entering block accumulator loop for bucket 221:
  bucket 220: 80%
  bucket 221: 10%
  bucket 220: 90%
  bucket 221: 20%
  bucket 220: 100%
  Sorting block of length 45 for bucket 220
  (Using difference cover)
  bucket 221: 30%
  bucket 221: 40%
  bucket 221: 50%
Getting block 222 of 316
  Reserving size (65) for bucket 222
  Calculating Z arrays for bucket 222
  bucket 221: 60%
  Entering block accumulator loop for bucket 222:
  bucket 221: 70%
  bucket 222: 10%
  bucket 221: 80%
  Sorting block time: 00:00:00
Returning block of 62 for bucket 219
Getting block 223 of 316
  Reserving size (65) for bucket 223
  Calculating Z arrays for bucket 223
  bucket 222: 20%
  Sorting block time: 00:00:00
  bucket 221: 90%
Returning block of 46 for bucket 220
  Entering block accumulator loop for bucket 223:
  bucket 222: 30%
  bucket 221: 100%
  Sorting block of length 20 for bucket 221
  (Using difference cover)
  bucket 223: 10%
  bucket 222: 40%
  bucket 223: 20%
  bucket 222: 50%
  bucket 223: 30%
  bucket 222: 60%
  bucket 223: 40%
  bucket 222: 70%
  bucket 223: 50%
  bucket 222: 80%
  bucket 223: 60%
  bucket 222: 90%
  bucket 223: 70%
  Sorting block time: 00:00:00
Returning block of 21 for bucket 221
  bucket 222: 100%
  Sorting block of length 34 for bucket 222
  (Using difference cover)
  bucket 223: 80%
  bucket 223: 90%
  bucket 223: 100%
  Sorting block of length 32 for bucket 223
  (Using difference cover)
Getting block 224 of 316
  Reserving size (65) for bucket 224
  Calculating Z arrays for bucket 224
  Entering block accumulator loop for bucket 224:
  bucket 224: 10%
  Sorting block time: 00:00:00
Returning block of 35 for bucket 222
  bucket 224: 20%
  Sorting block time: 00:00:00
Returning block of 33 for bucket 223
  bucket 224: 30%
  bucket 224: 40%
  bucket 224: 50%
  bucket 224: 60%
  bucket 224: 70%
Getting block 225 of 316
  Reserving size (65) for bucket 225
  Calculating Z arrays for bucket 225
  bucket 224: 80%
  bucket 224: 90%
  Entering block accumulator loop for bucket 225:
  bucket 224: 100%
  Sorting block of length 23 for bucket 224
  (Using difference cover)
  bucket 225: 10%
  bucket 225: 20%
  bucket 225: 30%
  bucket 225: 40%
  Sorting block time: 00:00:00
Returning block of 24 for bucket 224
  bucket 225: 50%
Getting block 226 of 316
  Reserving size (65) for bucket 226
  Calculating Z arrays for bucket 226
  bucket 225: 60%
  Entering block accumulator loop for bucket 226:
  bucket 225: 70%
  bucket 226: 10%
  bucket 226: 20%
  bucket 225: 80%
  bucket 226: 30%
  bucket 225: 90%
  bucket 226: 40%
  bucket 225: 100%
  Sorting block of length 59 for bucket 225
  (Using difference cover)
  bucket 226: 50%
Getting block 227 of 316
  Reserving size (65) for bucket 227
  Calculating Z arrays for bucket 227
  bucket 226: 60%
  Entering block accumulator loop for bucket 227:
  bucket 226: 70%
  bucket 226: 80%
  bucket 227: 10%
  bucket 226: 90%
  bucket 227: 20%
  bucket 226: 100%
  Sorting block of length 59 for bucket 226
  (Using difference cover)
  bucket 227: 30%
  bucket 227: 40%
  bucket 227: 50%
Getting block 228 of 316
  Reserving size (65) for bucket 228
  Calculating Z arrays for bucket 228
  bucket 227: 60%
  Entering block accumulator loop for bucket 228:
  bucket 228: 10%
  bucket 227: 70%
  bucket 228: 20%
  bucket 227: 80%
  Sorting block time: 00:00:00
Returning block of 60 for bucket 225
  bucket 228: 30%
  bucket 227: 90%
  bucket 228: 40%
  Sorting block time: 00:00:00
Returning block of 60 for bucket 226
  bucket 228: 50%
  bucket 227: 100%
  Sorting block of length 58 for bucket 227
  (Using difference cover)
  bucket 228: 60%
  bucket 228: 70%
Getting block 229 of 316
  Reserving size (65) for bucket 229
  Calculating Z arrays for bucket 229
  bucket 228: 80%
  Entering block accumulator loop for bucket 229:
  bucket 228: 90%
  bucket 228: 100%
  Sorting block of length 57 for bucket 228
  (Using difference cover)
  bucket 229: 10%
  bucket 229: 20%
  bucket 229: 30%
  bucket 229: 40%
  bucket 229: 50%
  bucket 229: 60%
  bucket 229: 70%
  Sorting block time: 00:00:00
Returning block of 59 for bucket 227
  bucket 229: 80%
  Sorting block time: 00:00:00
Getting block 230 of 316
  Reserving size (65) for bucket 230
  Calculating Z arrays for bucket 230
Returning block of 58 for bucket 228
  bucket 229: 90%
  Entering block accumulator loop for bucket 230:
  bucket 229: 100%
  Sorting block of length 59 for bucket 229
  (Using difference cover)
  bucket 230: 10%
  bucket 230: 20%
Getting block 231 of 316
  Reserving size (65) for bucket 231
  Calculating Z arrays for bucket 231
  bucket 230: 30%
  Entering block accumulator loop for bucket 231:
  bucket 230: 40%
  bucket 231: 10%
  bucket 230: 50%
  Sorting block time: 00:00:00
Returning block of 60 for bucket 229
  bucket 231: 20%
  bucket 230: 60%
  bucket 231: 30%
  bucket 230: 70%
  bucket 231: 40%
  bucket 231: 50%
  bucket 230: 80%
  bucket 231: 60%
  bucket 230: 90%
  bucket 231: 70%
  bucket 230: 100%
  Sorting block of length 16 for bucket 230
  (Using difference cover)
  bucket 231: 80%
  bucket 231: 90%
  bucket 231: 100%
  Sorting block of length 57 for bucket 231
  (Using difference cover)
Getting block 232 of 316
  Reserving size (65) for bucket 232
  Calculating Z arrays for bucket 232
  Entering block accumulator loop for bucket 232:
  bucket 232: 10%
  bucket 232: 20%
Getting block 233 of 316
  Reserving size (65) for bucket 233
  Calculating Z arrays for bucket 233
  bucket 232: 30%
  Entering block accumulator loop for bucket 233:
  bucket 232: 40%
  Sorting block time: 00:00:00
Returning block of 17 for bucket 230
  bucket 233: 10%
  bucket 232: 50%
  Sorting block time: 00:00:00
Returning block of 58 for bucket 231
  bucket 233: 20%
  bucket 232: 60%
  bucket 233: 30%
  bucket 232: 70%
  bucket 233: 40%
  bucket 232: 80%
  bucket 233: 50%
  bucket 232: 90%
  bucket 233: 60%
  bucket 232: 100%
  Sorting block of length 28 for bucket 232
  (Using difference cover)
  bucket 233: 70%
  bucket 233: 80%
  bucket 233: 90%
  bucket 233: 100%
  Sorting block of length 61 for bucket 233
  (Using difference cover)
Getting block 234 of 316
  Reserving size (65) for bucket 234
  Calculating Z arrays for bucket 234
  Entering block accumulator loop for bucket 234:
  bucket 234: 10%
  bucket 234: 20%
  bucket 234: 30%
  bucket 234: 40%
  bucket 234: 50%
  Sorting block time: 00:00:00
Returning block of 29 for bucket 232
  bucket 234: 60%
  Sorting block time: 00:00:00
Returning block of 62 for bucket 233
  bucket 234: 70%
  bucket 234: 80%
  bucket 234: 90%
  bucket 234: 100%
  Sorting block of length 59 for bucket 234
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 60 for bucket 234
Getting block 235 of 316
  Reserving size (65) for bucket 235
  Calculating Z arrays for bucket 235
  Entering block accumulator loop for bucket 235:
  bucket 235: 10%
  bucket 235: 20%
  bucket 235: 30%
  bucket 235: 40%
  bucket 235: 50%
  bucket 235: 60%
Getting block 236 of 316
  Reserving size (65) for bucket 236
  Calculating Z arrays for bucket 236
  bucket 235: 70%
  Entering block accumulator loop for bucket 236:
  bucket 235: 80%
  bucket 236: 10%
  bucket 235: 90%
  bucket 236: 20%
  bucket 235: 100%
  Sorting block of length 13 for bucket 235
  (Using difference cover)
  bucket 236: 30%
  bucket 236: 40%
  bucket 236: 50%
  bucket 236: 60%
Getting block 237 of 316
  Reserving size (65) for bucket 237
  Calculating Z arrays for bucket 237
  bucket 236: 70%
  Entering block accumulator loop for bucket 237:
  bucket 236: 80%
  bucket 237: 10%
  bucket 236: 90%
  Sorting block time: 00:00:00
Returning block of 14 for bucket 235
  bucket 237: 20%
  bucket 236: 100%
  Sorting block of length 51 for bucket 236
  (Using difference cover)
  bucket 237: 30%
  bucket 237: 40%
  bucket 237: 50%
  bucket 237: 60%
  bucket 237: 70%
Getting block 238 of 316
  Reserving size (65) for bucket 238
  Calculating Z arrays for bucket 238
  bucket 237: 80%
  Entering block accumulator loop for bucket 238:
  bucket 237: 90%
  Sorting block time: 00:00:00
Returning block of 52 for bucket 236
  bucket 237: 100%
  Sorting block of length 25 for bucket 237
  (Using difference cover)
Getting block 239 of 316
  Reserving size (65) for bucket 239
  Calculating Z arrays for bucket 239
  bucket 238: 10%
  Entering block accumulator loop for bucket 239:
  bucket 238: 20%
  bucket 239: 10%
  bucket 238: 30%
  bucket 239: 20%
  bucket 238: 40%
  bucket 239: 30%
  Sorting block time: 00:00:00
Returning block of 26 for bucket 237
  bucket 239: 40%
  bucket 238: 50%
  bucket 239: 50%
  bucket 238: 60%
  bucket 239: 60%
  bucket 238: 70%
  bucket 239: 70%
  bucket 238: 80%
  bucket 239: 80%
  bucket 239: 90%
  bucket 238: 90%
  bucket 239: 100%
  Sorting block of length 28 for bucket 239
  (Using difference cover)
  bucket 238: 100%
  Sorting block of length 43 for bucket 238
  (Using difference cover)
Getting block 240 of 316
  Reserving size (65) for bucket 240
  Calculating Z arrays for bucket 240
  Entering block accumulator loop for bucket 240:
  bucket 240: 10%
Getting block 241 of 316
  Reserving size (65) for bucket 241
  Calculating Z arrays for bucket 241
  bucket 240: 20%
  Entering block accumulator loop for bucket 241:
  bucket 240: 30%
  bucket 241: 10%
  bucket 240: 40%
  bucket 241: 20%
  bucket 240: 50%
  bucket 241: 30%
  bucket 240: 60%
  bucket 241: 40%
  Sorting block time: 00:00:00
Returning block of 29 for bucket 239
  bucket 241: 50%
  bucket 240: 70%
  bucket 241: 60%
  bucket 240: 80%
  Sorting block time: 00:00:00
Returning block of 44 for bucket 238
  bucket 241: 70%
  bucket 240: 90%
  bucket 241: 80%
  bucket 240: 100%
  Sorting block of length 57 for bucket 240
  (Using difference cover)
  bucket 241: 90%
  bucket 241: 100%
  Sorting block of length 61 for bucket 241
  (Using difference cover)
Getting block 242 of 316
  Reserving size (65) for bucket 242
  Calculating Z arrays for bucket 242
  Entering block accumulator loop for bucket 242:
  bucket 242: 10%
  Sorting block time: 00:00:00
Returning block of 58 for bucket 240
  Sorting block time: 00:00:00
Returning block of 62 for bucket 241
  bucket 242: 20%
  bucket 242: 30%
  bucket 242: 40%
Getting block 243 of 316
  bucket 242: 50%
  Reserving size (65) for bucket 243
  Calculating Z arrays for bucket 243
  Entering block accumulator loop for bucket 243:
  bucket 242: 60%
  bucket 242: 70%
  bucket 243: 10%
  bucket 243: 20%
  bucket 242: 80%
  bucket 243: 30%
  bucket 242: 90%
  bucket 243: 40%
  bucket 242: 100%
  Sorting block of length 32 for bucket 242
  (Using difference cover)
  bucket 243: 50%
Getting block 244 of 316
  Reserving size (65) for bucket 244
  Calculating Z arrays for bucket 244
  bucket 243: 60%
  Entering block accumulator loop for bucket 244:
  bucket 243: 70%
  bucket 244: 10%
  bucket 243: 80%
  bucket 244: 20%
  bucket 243: 90%
  bucket 244: 30%
  bucket 243: 100%
  Sorting block of length 43 for bucket 243
  (Using difference cover)
  bucket 244: 40%
  bucket 244: 50%
  bucket 244: 60%
Getting block 245 of 316
  Reserving size (65) for bucket 245
  Calculating Z arrays for bucket 245
  bucket 244: 70%
  Entering block accumulator loop for bucket 245:
  bucket 244: 80%
  bucket 245: 10%
  bucket 244: 90%
  bucket 245: 20%
  Sorting block time: 00:00:00
Returning block of 33 for bucket 242
  bucket 244: 100%
  Sorting block of length 21 for bucket 244
  (Using difference cover)
  bucket 245: 30%
  Sorting block time: 00:00:00
Returning block of 44 for bucket 243
  bucket 245: 40%
  bucket 245: 50%
  bucket 245: 60%
Getting block 246 of 316
  Reserving size (65) for bucket 246
  Calculating Z arrays for bucket 246
  bucket 245: 70%
  Entering block accumulator loop for bucket 246:
  bucket 245: 80%
  bucket 246: 10%
  bucket 245: 90%
  Sorting block time: 00:00:00
Returning block of 22 for bucket 244
  bucket 246: 20%
Getting block 247 of 316
  Reserving size (65) for bucket 247
  Calculating Z arrays for bucket 247
  bucket 245: 100%
  Sorting block of length 63 for bucket 245
  (Using difference cover)
  bucket 246: 30%
  Entering block accumulator loop for bucket 247:
  bucket 246: 40%
  bucket 247: 10%
  bucket 246: 50%
  bucket 246: 60%
  bucket 247: 20%
  bucket 246: 70%
  bucket 247: 30%
  bucket 246: 80%
  bucket 247: 40%
  Sorting block time: 00:00:00
  bucket 246: 90%
Returning block of 64 for bucket 245
  bucket 246: 100%
  Sorting block of length 50 for bucket 246
  (Using difference cover)
  bucket 247: 50%
  bucket 247: 60%
  bucket 247: 70%
  bucket 247: 80%
  bucket 247: 90%
  Sorting block time: 00:00:00
Returning block of 51 for bucket 246
  bucket 247: 100%
  Sorting block of length 63 for bucket 247
  (Using difference cover)
Getting block 248 of 316
  Reserving size (65) for bucket 248
  Calculating Z arrays for bucket 248
  Entering block accumulator loop for bucket 248:
  bucket 248: 10%
  bucket 248: 20%
  Sorting block time: 00:00:00
Returning block of 64 for bucket 247
  bucket 248: 30%
  bucket 248: 40%
  bucket 248: 50%
  bucket 248: 60%
Getting block 249 of 316
  Reserving size (65) for bucket 249
  Calculating Z arrays for bucket 249
  bucket 248: 70%
  Entering block accumulator loop for bucket 249:
  bucket 248: 80%
  bucket 248: 90%
  bucket 249: 10%
  bucket 248: 100%
  Sorting block of length 55 for bucket 248
  (Using difference cover)
  bucket 249: 20%
  bucket 249: 30%
  bucket 249: 40%
Getting block 250 of 316
  Reserving size (65) for bucket 250
  Calculating Z arrays for bucket 250
  bucket 249: 50%
  Entering block accumulator loop for bucket 250:
  bucket 249: 60%
  bucket 250: 10%
  Sorting block time: 00:00:00
Returning block of 56 for bucket 248
  bucket 249: 70%
  bucket 250: 20%
  bucket 249: 80%
  bucket 250: 30%
  bucket 249: 90%
  bucket 250: 40%
  bucket 249: 100%
  bucket 250: 50%
  Sorting block of length 34 for bucket 249
  (Using difference cover)
Getting block 251 of 316
  Reserving size (65) for bucket 251
  Calculating Z arrays for bucket 251
  bucket 250: 60%
  Entering block accumulator loop for bucket 251:
  bucket 250: 70%
  bucket 251: 10%
  bucket 250: 80%
  bucket 251: 20%
  bucket 250: 90%
  bucket 251: 30%
  bucket 251: 40%
  bucket 250: 100%
  Sorting block of length 34 for bucket 250
  (Using difference cover)
  bucket 251: 50%
  Sorting block time: 00:00:00
Returning block of 35 for bucket 249
  bucket 251: 60%
Getting block 252 of 316
  Reserving size (65) for bucket 252
  Calculating Z arrays for bucket 252
  bucket 251: 70%
  Entering block accumulator loop for bucket 252:
  bucket 251: 80%
  bucket 251: 90%
  bucket 252: 10%
  bucket 251: 100%
  Sorting block of length 52 for bucket 251
  (Using difference cover)
  bucket 252: 20%
  bucket 252: 30%
  bucket 252: 40%
  bucket 252: 50%
  bucket 252: 60%
Getting block 253 of 316
  Reserving size (65) for bucket 253
  Calculating Z arrays for bucket 253
  bucket 252: 70%
  Sorting block time: 00:00:00
Returning block of 35 for bucket 250
  Entering block accumulator loop for bucket 253:
  bucket 252: 80%
  Sorting block time: 00:00:00
Returning block of 53 for bucket 251
  bucket 253: 10%
  bucket 252: 90%
  bucket 253: 20%
  bucket 252: 100%
  Sorting block of length 63 for bucket 252
  (Using difference cover)
  bucket 253: 30%
  bucket 253: 40%
  bucket 253: 50%
  bucket 253: 60%
  bucket 253: 70%
Getting block 254 of 316
  Sorting block time: 00:00:00
  Reserving size (65) for bucket 254
  Calculating Z arrays for bucket 254
  bucket 253: 80%
Returning block of 64 for bucket 252
  Entering block accumulator loop for bucket 254:
  bucket 253: 90%
  bucket 253: 100%
  Sorting block of length 42 for bucket 253
  (Using difference cover)
  bucket 254: 10%
Getting block 255 of 316
  Reserving size (65) for bucket 255
  Calculating Z arrays for bucket 255
  bucket 254: 20%
  Entering block accumulator loop for bucket 255:
  bucket 254: 30%
  bucket 254: 40%
  bucket 255: 10%
  Sorting block time: 00:00:00
Returning block of 43 for bucket 253
  bucket 254: 50%
  bucket 255: 20%
  bucket 254: 60%
  bucket 255: 30%
  bucket 254: 70%
  bucket 255: 40%
  bucket 254: 80%
  bucket 255: 50%
  bucket 254: 90%
  bucket 255: 60%
  bucket 254: 100%
  Sorting block of length 57 for bucket 254
  (Using difference cover)
  bucket 255: 70%
  bucket 255: 80%
  bucket 255: 90%
Getting block 256 of 316
  Reserving size (65) for bucket 256
  Calculating Z arrays for bucket 256
  Entering block accumulator loop for bucket 256:
  bucket 255: 100%
  Sorting block of length 63 for bucket 255
  (Using difference cover)
  bucket 256: 10%
  Sorting block time: 00:00:00
Returning block of 58 for bucket 254
  bucket 256: 20%
Getting block 257 of 316
  Reserving size (65) for bucket 257
  Calculating Z arrays for bucket 257
  bucket 256: 30%
  Entering block accumulator loop for bucket 257:
  bucket 256: 40%
  bucket 256: 50%
  bucket 257: 10%
  bucket 256: 60%
  bucket 257: 20%
  bucket 256: 70%
  bucket 257: 30%
  bucket 256: 80%
  Sorting block time: 00:00:00
Returning block of 64 for bucket 255
  bucket 256: 90%
  bucket 257: 40%
  bucket 256: 100%
  Sorting block of length 56 for bucket 256
  (Using difference cover)
  bucket 257: 50%
  bucket 257: 60%
  bucket 257: 70%
  bucket 257: 80%
  bucket 257: 90%
  Sorting block time: 00:00:00
Returning block of 57 for bucket 256
  bucket 257: 100%
  Sorting block of length 51 for bucket 257
  (Using difference cover)
Getting block 258 of 316
  Reserving size (65) for bucket 258
  Calculating Z arrays for bucket 258
  Entering block accumulator loop for bucket 258:
  bucket 258: 10%
  Sorting block time: 00:00:00
  bucket 258: 20%
Returning block of 52 for bucket 257
  bucket 258: 30%
  bucket 258: 40%
  bucket 258: 50%
Getting block 259 of 316
  Reserving size (65) for bucket 259
  Calculating Z arrays for bucket 259
  bucket 258: 60%
  Entering block accumulator loop for bucket 259:
  bucket 258: 70%
  bucket 259: 10%
  bucket 258: 80%
  bucket 259: 20%
  bucket 258: 90%
  bucket 259: 30%
  bucket 258: 100%
  Sorting block of length 22 for bucket 258
  (Using difference cover)
  bucket 259: 40%
  bucket 259: 50%
  bucket 259: 60%
Getting block 260 of 316
  Reserving size (65) for bucket 260
  Calculating Z arrays for bucket 260
  Entering block accumulator loop for bucket 260:
  bucket 259: 70%
  bucket 260: 10%
  bucket 259: 80%
  bucket 260: 20%
  bucket 259: 90%
  bucket 260: 30%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 258
  bucket 260: 40%
  bucket 259: 100%
  Sorting block of length 45 for bucket 259
  (Using difference cover)
  bucket 260: 50%
  bucket 260: 60%
  bucket 260: 70%
  bucket 260: 80%
Getting block 261 of 316
  Reserving size (65) for bucket 261
  Calculating Z arrays for bucket 261
  bucket 260: 90%
  Entering block accumulator loop for bucket 261:
  bucket 260: 100%
  Sorting block of length 64 for bucket 260
  (Using difference cover)
  bucket 261: 10%
  bucket 261: 20%
  bucket 261: 30%
  bucket 261: 40%
  bucket 261: 50%
  bucket 261: 60%
  bucket 261: 70%
  bucket 261: 80%
Getting block 262 of 316
  Reserving size (65) for bucket 262
  Sorting block time: 00:00:00
  Calculating Z arrays for bucket 262
Returning block of 46 for bucket 259
  bucket 261: 90%
  Entering block accumulator loop for bucket 262:
  bucket 261: 100%
  Sorting block time: 00:00:00
  Sorting block of length 61 for bucket 261
  (Using difference cover)
Returning block of 65 for bucket 260
  bucket 262: 10%
  bucket 262: 20%
  bucket 262: 30%
  bucket 262: 40%
  bucket 262: 50%
  bucket 262: 60%
  bucket 262: 70%
  Sorting block time: 00:00:00
Returning block of 62 for bucket 261
Getting block 263 of 316
  Reserving size (65) for bucket 263
  Calculating Z arrays for bucket 263
  bucket 262: 80%
  Entering block accumulator loop for bucket 263:
  bucket 262: 90%
  bucket 263: 10%
  bucket 262: 100%
  Sorting block of length 33 for bucket 262
  (Using difference cover)
  bucket 263: 20%
  bucket 263: 30%
Getting block 264 of 316
  Reserving size (65) for bucket 264
  Calculating Z arrays for bucket 264
  bucket 263: 40%
  bucket 263: 50%
  Entering block accumulator loop for bucket 264:
  bucket 263: 60%
  bucket 263: 70%
  bucket 264: 10%
  bucket 263: 80%
  bucket 264: 20%
  bucket 263: 90%
  bucket 263: 100%
  Sorting block time: 00:00:00
  Sorting block of length 63 for bucket 263
  (Using difference cover)
Returning block of 34 for bucket 262
  bucket 264: 30%
  bucket 264: 40%
  bucket 264: 50%
  bucket 264: 60%
  bucket 264: 70%
Getting block 265 of 316
  Sorting block time: 00:00:00
  Reserving size (65) for bucket 265
  bucket 264: 80%
Returning block of 64 for bucket 263
  Calculating Z arrays for bucket 265
  Entering block accumulator loop for bucket 265:
  bucket 264: 90%
  bucket 265: 10%
  bucket 264: 100%
  Sorting block of length 47 for bucket 264
  (Using difference cover)
  bucket 265: 20%
  bucket 265: 30%
  bucket 265: 40%
  bucket 265: 50%
  bucket 265: 60%
  bucket 265: 70%
  bucket 265: 80%
  Sorting block time: 00:00:00
Returning block of 48 for bucket 264
  bucket 265: 90%
  bucket 265: 100%
  Sorting block of length 44 for bucket 265
  (Using difference cover)
Getting block 266 of 316
  Reserving size (65) for bucket 266
  Calculating Z arrays for bucket 266
  Entering block accumulator loop for bucket 266:
  bucket 266: 10%
  bucket 266: 20%
  Sorting block time: 00:00:00
Returning block of 45 for bucket 265
  bucket 266: 30%
  bucket 266: 40%
  bucket 266: 50%
Getting block 267 of 316
  Reserving size (65) for bucket 267
  Calculating Z arrays for bucket 267
  bucket 266: 60%
  Entering block accumulator loop for bucket 267:
  bucket 266: 70%
  bucket 266: 80%
  bucket 267: 10%
  bucket 266: 90%
  bucket 267: 20%
Getting block 268 of 316
  Reserving size (65) for bucket 268
  Calculating Z arrays for bucket 268
  bucket 266: 100%
  Sorting block of length 56 for bucket 266
  (Using difference cover)
  bucket 267: 30%
  Entering block accumulator loop for bucket 268:
  bucket 267: 40%
  bucket 268: 10%
  bucket 267: 50%
  bucket 268: 20%
  bucket 267: 60%
  bucket 268: 30%
  bucket 267: 70%
  bucket 268: 40%
  bucket 267: 80%
  bucket 268: 50%
  bucket 267: 90%
  Sorting block time: 00:00:00
Returning block of 57 for bucket 266
  bucket 267: 100%
  Sorting block of length 54 for bucket 267
  (Using difference cover)
  bucket 268: 60%
  bucket 268: 70%
  bucket 268: 80%
  bucket 268: 90%
  bucket 268: 100%
  Sorting block of length 52 for bucket 268
  (Using difference cover)
Getting block 269 of 316
  Reserving size (65) for bucket 269
  Calculating Z arrays for bucket 269
  Entering block accumulator loop for bucket 269:
  bucket 269: 10%
  bucket 269: 20%
  Sorting block time: 00:00:00
Returning block of 55 for bucket 267
  bucket 269: 30%
Getting block 270 of 316
  Reserving size (65) for bucket 270
  Calculating Z arrays for bucket 270
  bucket 269: 40%
  Sorting block time: 00:00:00
Returning block of 53 for bucket 268
  Entering block accumulator loop for bucket 270:
  bucket 269: 50%
  bucket 269: 60%
  bucket 270: 10%
  bucket 269: 70%
  bucket 270: 20%
  bucket 269: 80%
  bucket 269: 90%
  bucket 270: 30%
  bucket 269: 100%
  Sorting block of length 22 for bucket 269
  (Using difference cover)
  bucket 270: 40%
  bucket 270: 50%
  bucket 270: 60%
  bucket 270: 70%
  bucket 270: 80%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 269
  bucket 270: 90%
  bucket 270: 100%
Getting block 271 of 316
  Reserving size (65) for bucket 271
  Calculating Z arrays for bucket 271
  Sorting block of length 42 for bucket 270
  (Using difference cover)
  Entering block accumulator loop for bucket 271:
  bucket 271: 10%
  bucket 271: 20%
  bucket 271: 30%
  bucket 271: 40%
  bucket 271: 50%
  bucket 271: 60%
  Sorting block time: 00:00:00
Returning block of 43 for bucket 270
Getting block 272 of 316
  Reserving size (65) for bucket 272
  Calculating Z arrays for bucket 272
  bucket 271: 70%
  Entering block accumulator loop for bucket 272:
  bucket 271: 80%
  bucket 272: 10%
  bucket 271: 90%
  bucket 272: 20%
  bucket 271: 100%
  Sorting block of length 45 for bucket 271
  (Using difference cover)
  bucket 272: 30%
  bucket 272: 40%
  bucket 272: 50%
  bucket 272: 60%
Getting block 273 of 316
  Reserving size (65) for bucket 273
  Calculating Z arrays for bucket 273
  bucket 272: 70%
  Entering block accumulator loop for bucket 273:
  bucket 272: 80%
  bucket 273: 10%
  bucket 272: 90%
  bucket 273: 20%
  Sorting block time: 00:00:00
Returning block of 46 for bucket 271
  bucket 273: 30%
  bucket 272: 100%
  Sorting block of length 59 for bucket 272
  (Using difference cover)
  bucket 273: 40%
  bucket 273: 50%
  bucket 273: 60%
  bucket 273: 70%
  bucket 273: 80%
  bucket 273: 90%
  Sorting block time: 00:00:00
Getting block 274 of 316
Returning block of 60 for bucket 272
  Reserving size (65) for bucket 274
  Calculating Z arrays for bucket 274
  bucket 273: 100%
  Sorting block of length 27 for bucket 273
  (Using difference cover)
  Entering block accumulator loop for bucket 274:
  bucket 274: 10%
  bucket 274: 20%
  bucket 274: 30%
  bucket 274: 40%
  bucket 274: 50%
  bucket 274: 60%
  Sorting block time: 00:00:00
Returning block of 28 for bucket 273
  bucket 274: 70%
  bucket 274: 80%
Getting block 275 of 316
  Reserving size (65) for bucket 275
  Calculating Z arrays for bucket 275
  bucket 274: 90%
  Entering block accumulator loop for bucket 275:
  bucket 274: 100%
  Sorting block of length 42 for bucket 274
  (Using difference cover)
  bucket 275: 10%
  bucket 275: 20%
  bucket 275: 30%
  bucket 275: 40%
  bucket 275: 50%
  Sorting block time: 00:00:00
Returning block of 43 for bucket 274
Getting block 276 of 316
  Reserving size (65) for bucket 276
  Calculating Z arrays for bucket 276
  bucket 275: 60%
  Entering block accumulator loop for bucket 276:
  bucket 275: 70%
  bucket 276: 10%
  bucket 275: 80%
  bucket 276: 20%
  bucket 275: 90%
  bucket 276: 30%
  bucket 275: 100%
  Sorting block of length 58 for bucket 275
  (Using difference cover)
  bucket 276: 40%
  bucket 276: 50%
  bucket 276: 60%
  bucket 276: 70%
Getting block 277 of 316
  Reserving size (65) for bucket 277
  Calculating Z arrays for bucket 277
  bucket 276: 80%
  Entering block accumulator loop for bucket 277:
  bucket 276: 90%
  bucket 277: 10%
  bucket 276: 100%
  Sorting block of length 38 for bucket 276
  (Using difference cover)
  bucket 277: 20%
  Sorting block time: 00:00:00
Returning block of 59 for bucket 275
Getting block 278 of 316
  Reserving size (65) for bucket 278
  Calculating Z arrays for bucket 278
  bucket 277: 30%
  Entering block accumulator loop for bucket 278:
  bucket 277: 40%
  bucket 278: 10%
  bucket 277: 50%
  bucket 278: 20%
  bucket 277: 60%
  bucket 277: 70%
  bucket 278: 30%
  bucket 277: 80%
  bucket 278: 40%
  Sorting block time: 00:00:00
Returning block of 39 for bucket 276
  bucket 277: 90%
  bucket 278: 50%
  bucket 277: 100%
  Sorting block of length 48 for bucket 277
  (Using difference cover)
  bucket 278: 60%
  bucket 278: 70%
  bucket 278: 80%
  bucket 278: 90%
  bucket 278: 100%
  Sorting block of length 50 for bucket 278
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 49 for bucket 277
  Sorting block time: 00:00:00
Returning block of 51 for bucket 278
Getting block 279 of 316
  Reserving size (65) for bucket 279
  Calculating Z arrays for bucket 279
  Entering block accumulator loop for bucket 279:
  bucket 279: 10%
  bucket 279: 20%
  bucket 279: 30%
  bucket 279: 40%
  bucket 279: 50%
  bucket 279: 60%
  bucket 279: 70%
  bucket 279: 80%
  bucket 279: 90%
  bucket 279: 100%
  Sorting block of length 57 for bucket 279
  (Using difference cover)
Getting block 280 of 316
  Reserving size (65) for bucket 280
  Calculating Z arrays for bucket 280
  Entering block accumulator loop for bucket 280:
  bucket 280: 10%
  bucket 280: 20%
  Sorting block time: 00:00:00
Returning block of 58 for bucket 279
  bucket 280: 30%
  bucket 280: 40%
  bucket 280: 50%
  bucket 280: 60%
  bucket 280: 70%
  bucket 280: 80%
  bucket 280: 90%
  bucket 280: 100%
  Sorting block of length 53 for bucket 280
  (Using difference cover)
Getting block 281 of 316
  Reserving size (65) for bucket 281
  Calculating Z arrays for bucket 281
  Entering block accumulator loop for bucket 281:
  bucket 281: 10%
  bucket 281: 20%
  Sorting block time: 00:00:00
Returning block of 54 for bucket 280
  bucket 281: 30%
  bucket 281: 40%
  bucket 281: 50%
  bucket 281: 60%
Getting block 282 of 316
  Reserving size (65) for bucket 282
  Calculating Z arrays for bucket 282
  bucket 281: 70%
  Entering block accumulator loop for bucket 282:
  bucket 281: 80%
  bucket 282: 10%
  bucket 281: 90%
  bucket 282: 20%
  bucket 281: 100%
  Sorting block of length 37 for bucket 281
  (Using difference cover)
  bucket 282: 30%
  bucket 282: 40%
  bucket 282: 50%
  bucket 282: 60%
  bucket 282: 70%
  bucket 282: 80%
  bucket 282: 90%
Getting block 283 of 316
  Reserving size (65) for bucket 283
  Calculating Z arrays for bucket 283
  bucket 282: 100%
  Sorting block of length 27 for bucket 282
  (Using difference cover)
  Entering block accumulator loop for bucket 283:
  Sorting block time: 00:00:00
Returning block of 38 for bucket 281
  bucket 283: 10%
  bucket 283: 20%
  bucket 283: 30%
  bucket 283: 40%
  bucket 283: 50%
  Sorting block time: 00:00:00
Returning block of 28 for bucket 282
  bucket 283: 60%
  bucket 283: 70%
Getting block 284 of 316
  Reserving size (65) for bucket 284
  Calculating Z arrays for bucket 284
  bucket 283: 80%
  Entering block accumulator loop for bucket 284:
  bucket 283: 90%
  bucket 283: 100%
  Sorting block of length 39 for bucket 283
  (Using difference cover)
  bucket 284: 10%
  bucket 284: 20%
  bucket 284: 30%
  bucket 284: 40%
Getting block 285 of 316
  Reserving size (65) for bucket 285
  Calculating Z arrays for bucket 285
  bucket 284: 50%
  Entering block accumulator loop for bucket 285:
  Sorting block time: 00:00:00
Returning block of 40 for bucket 283
  bucket 284: 60%
  bucket 285: 10%
  bucket 284: 70%
  bucket 285: 20%
  bucket 284: 80%
  bucket 285: 30%
  bucket 285: 40%
  bucket 284: 90%
  bucket 285: 50%
  bucket 284: 100%
  Sorting block of length 27 for bucket 284
  (Using difference cover)
  bucket 285: 60%
  bucket 285: 70%
  bucket 285: 80%
Getting block 286 of 316
  Reserving size (65) for bucket 286
  Calculating Z arrays for bucket 286
  bucket 285: 90%
  Entering block accumulator loop for bucket 286:
  bucket 285: 100%
  Sorting block of length 56 for bucket 285
  (Using difference cover)
  bucket 286: 10%
  bucket 286: 20%
  bucket 286: 30%
Getting block 287 of 316
  Reserving size (65) for bucket 287
  Calculating Z arrays for bucket 287
  bucket 286: 40%
  bucket 286: 50%
  Entering block accumulator loop for bucket 287:
  bucket 286: 60%
  bucket 287: 10%
  bucket 286: 70%
  bucket 286: 80%
  bucket 287: 20%
  Sorting block time: 00:00:00
Returning block of 28 for bucket 284
  bucket 286: 90%
  bucket 287: 30%
  Sorting block time: 00:00:00
Returning block of 57 for bucket 285
  bucket 286: 100%
  Sorting block of length 61 for bucket 286
  (Using difference cover)
  bucket 287: 40%
  bucket 287: 50%
  bucket 287: 60%
  bucket 287: 70%
  bucket 287: 80%
  bucket 287: 90%
  Sorting block time: 00:00:00
Returning block of 62 for bucket 286
  bucket 287: 100%
  Sorting block of length 61 for bucket 287
  (Using difference cover)
Getting block 288 of 316
  Reserving size (65) for bucket 288
  Calculating Z arrays for bucket 288
  Entering block accumulator loop for bucket 288:
  bucket 288: 10%
  Sorting block time: 00:00:00
Returning block of 62 for bucket 287
  bucket 288: 20%
  bucket 288: 30%
  bucket 288: 40%
  bucket 288: 50%
  bucket 288: 60%
Getting block 289 of 316
  Reserving size (65) for bucket 289
  Calculating Z arrays for bucket 289
  bucket 288: 70%
  Entering block accumulator loop for bucket 289:
  bucket 288: 80%
  bucket 289: 10%
  bucket 288: 90%
  bucket 289: 20%
  bucket 288: 100%
  Sorting block of length 46 for bucket 288
  (Using difference cover)
  bucket 289: 30%
  bucket 289: 40%
  bucket 289: 50%
  bucket 289: 60%
  bucket 289: 70%
Getting block 290 of 316
  Reserving size (65) for bucket 290
  Calculating Z arrays for bucket 290
  bucket 289: 80%
  Entering block accumulator loop for bucket 290:
  bucket 289: 90%
  Sorting block time: 00:00:00
Returning block of 47 for bucket 288
  bucket 290: 10%
  bucket 289: 100%
  Sorting block of length 64 for bucket 289
  (Using difference cover)
  bucket 290: 20%
  bucket 290: 30%
  bucket 290: 40%
  bucket 290: 50%
  bucket 290: 60%
  bucket 290: 70%
  bucket 290: 80%
Getting block 291 of 316
  Sorting block time: 00:00:00
  Reserving size (65) for bucket 291
  bucket 290: 90%
Returning block of 65 for bucket 289
  Calculating Z arrays for bucket 291
  bucket 290: 100%
  Entering block accumulator loop for bucket 291:
  Sorting block of length 6 for bucket 290
  (Using difference cover)
  bucket 291: 10%
  bucket 291: 20%
Getting block 292 of 316
  Reserving size (65) for bucket 292
  Calculating Z arrays for bucket 292
  bucket 291: 30%
  Entering block accumulator loop for bucket 292:
  bucket 291: 40%
  bucket 291: 50%
  bucket 292: 10%
  bucket 291: 60%
  Sorting block time: 00:00:00
Returning block of 7 for bucket 290
  bucket 292: 20%
  bucket 291: 70%
  bucket 292: 30%
  bucket 291: 80%
  bucket 292: 40%
  bucket 291: 90%
  bucket 291: 100%
  bucket 292: 50%
  Sorting block of length 64 for bucket 291
  (Using difference cover)
  bucket 292: 60%
  bucket 292: 70%
  bucket 292: 80%
  bucket 292: 90%
  bucket 292: 100%
  Sorting block of length 54 for bucket 292
  (Using difference cover)
Getting block 293 of 316
  Reserving size (65) for bucket 293
  Calculating Z arrays for bucket 293
  Sorting block time: 00:00:00
Returning block of 65 for bucket 291
  Entering block accumulator loop for bucket 293:
  Sorting block time: 00:00:00
Returning block of 55 for bucket 292
  bucket 293: 10%
  bucket 293: 20%
  bucket 293: 30%
  bucket 293: 40%
  bucket 293: 50%
  bucket 293: 60%
  bucket 293: 70%
Getting block 294 of 316
  Reserving size (65) for bucket 294
  Calculating Z arrays for bucket 294
  bucket 293: 80%
  Entering block accumulator loop for bucket 294:
  bucket 293: 90%
  bucket 293: 100%
  Sorting block of length 41 for bucket 293
  (Using difference cover)
  bucket 294: 10%
  bucket 294: 20%
  bucket 294: 30%
  bucket 294: 40%
  bucket 294: 50%
  bucket 294: 60%
Getting block 295 of 316
  Sorting block time: 00:00:00
  Reserving size (65) for bucket 295
  Calculating Z arrays for bucket 295
Returning block of 42 for bucket 293
  bucket 294: 70%
  Entering block accumulator loop for bucket 295:
  bucket 294: 80%
  bucket 295: 10%
  bucket 294: 90%
  bucket 295: 20%
  bucket 294: 100%
  Sorting block of length 43 for bucket 294
  (Using difference cover)
  bucket 295: 30%
  bucket 295: 40%
  bucket 295: 50%
  bucket 295: 60%
  bucket 295: 70%
  bucket 295: 80%
Getting block 296 of 316
  Reserving size (65) for bucket 296
  Calculating Z arrays for bucket 296
  bucket 295: 90%
  Entering block accumulator loop for bucket 296:
  bucket 296: 10%
  Sorting block time: 00:00:00
  bucket 295: 100%
Returning block of 44 for bucket 294
  Sorting block of length 22 for bucket 295
  (Using difference cover)
  bucket 296: 20%
  bucket 296: 30%
  bucket 296: 40%
  bucket 296: 50%
  bucket 296: 60%
  bucket 296: 70%
  bucket 296: 80%
Getting block 297 of 316
  Reserving size (65) for bucket 297
  Calculating Z arrays for bucket 297
  bucket 296: 90%
  Sorting block time: 00:00:00
Returning block of 23 for bucket 295
  Entering block accumulator loop for bucket 297:
  bucket 296: 100%
  Sorting block of length 62 for bucket 296
  (Using difference cover)
  bucket 297: 10%
  bucket 297: 20%
Getting block 298 of 316
  Reserving size (65) for bucket 298
  Calculating Z arrays for bucket 298
  bucket 297: 30%
  Entering block accumulator loop for bucket 298:
  bucket 297: 40%
  bucket 298: 10%
  bucket 297: 50%
  bucket 298: 20%
  bucket 297: 60%
  Sorting block time: 00:00:00
  bucket 298: 30%
Returning block of 63 for bucket 296
  bucket 297: 70%
  bucket 298: 40%
  bucket 298: 50%
  bucket 297: 80%
  bucket 298: 60%
  bucket 297: 90%
  bucket 298: 70%
  bucket 297: 100%
  Sorting block of length 60 for bucket 297
  (Using difference cover)
  bucket 298: 80%
  bucket 298: 90%
  bucket 298: 100%
  Sorting block of length 64 for bucket 298
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 61 for bucket 297
Getting block 299 of 316
  Reserving size (65) for bucket 299
  Sorting block time: 00:00:00
  Calculating Z arrays for bucket 299
Returning block of 65 for bucket 298
  Entering block accumulator loop for bucket 299:
  bucket 299: 10%
  bucket 299: 20%
  bucket 299: 30%
  bucket 299: 40%
  bucket 299: 50%
  bucket 299: 60%
Getting block 300 of 316
  Reserving size (65) for bucket 300
  Calculating Z arrays for bucket 300
  bucket 299: 70%
  Entering block accumulator loop for bucket 300:
  bucket 299: 80%
  bucket 299: 90%
  bucket 300: 10%
Getting block 301 of 316
  Reserving size (65) for bucket 301
  Calculating Z arrays for bucket 301
  bucket 299: 100%
  Sorting block of length 60 for bucket 299
  (Using difference cover)
  bucket 300: 20%
  Entering block accumulator loop for bucket 301:
  bucket 300: 30%
  bucket 301: 10%
  bucket 301: 20%
  bucket 300: 40%
  bucket 301: 30%
  bucket 300: 50%
  bucket 301: 40%
  bucket 300: 60%
  bucket 301: 50%
  bucket 300: 70%
  bucket 301: 60%
  Sorting block time: 00:00:00
Returning block of 61 for bucket 299
  bucket 301: 70%
  bucket 300: 80%
  bucket 301: 80%
  bucket 300: 90%
  bucket 301: 90%
  bucket 300: 100%
  Sorting block of length 34 for bucket 300
  (Using difference cover)
  bucket 301: 100%
  Sorting block of length 55 for bucket 301
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 35 for bucket 300
  Sorting block time: 00:00:00
Returning block of 56 for bucket 301
Getting block 302 of 316
  Reserving size (65) for bucket 302
  Calculating Z arrays for bucket 302
  Entering block accumulator loop for bucket 302:
  bucket 302: 10%
Getting block 303 of 316
  bucket 302: 20%
  Reserving size (65) for bucket 303
  Calculating Z arrays for bucket 303
  bucket 302: 30%
  Entering block accumulator loop for bucket 303:
  bucket 302: 40%
  bucket 303: 10%
  bucket 302: 50%
  bucket 303: 20%
  bucket 302: 60%
  bucket 303: 30%
  bucket 302: 70%
  bucket 303: 40%
  bucket 302: 80%
  bucket 303: 50%
  bucket 302: 90%
  bucket 303: 60%
  bucket 302: 100%
  Sorting block of length 62 for bucket 302
  (Using difference cover)
  bucket 303: 70%
  bucket 303: 80%
  bucket 303: 90%
  bucket 303: 100%
  Sorting block of length 39 for bucket 303
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 63 for bucket 302
  Sorting block time: 00:00:00
Returning block of 40 for bucket 303
Getting block 304 of 316
  Reserving size (65) for bucket 304
  Calculating Z arrays for bucket 304
  Entering block accumulator loop for bucket 304:
  bucket 304: 10%
Getting block 305 of 316
  Reserving size (65) for bucket 305
  Calculating Z arrays for bucket 305
  bucket 304: 20%
  Entering block accumulator loop for bucket 305:
  bucket 304: 30%
  bucket 305: 10%
  bucket 304: 40%
  bucket 305: 20%
  bucket 304: 50%
  bucket 305: 30%
  bucket 304: 60%
  bucket 305: 40%
  bucket 304: 70%
  bucket 305: 50%
  bucket 304: 80%
  bucket 305: 60%
  bucket 304: 90%
  bucket 305: 70%
  bucket 304: 100%
  Sorting block of length 54 for bucket 304
  (Using difference cover)
  bucket 305: 80%
  bucket 305: 90%
  bucket 305: 100%
  Sorting block of length 43 for bucket 305
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 55 for bucket 304
  Sorting block time: 00:00:00
Returning block of 44 for bucket 305
Getting block 306 of 316
  Reserving size (65) for bucket 306
  Calculating Z arrays for bucket 306
  Entering block accumulator loop for bucket 306:
  bucket 306: 10%
  bucket 306: 20%
  bucket 306: 30%
  bucket 306: 40%
  bucket 306: 50%
  bucket 306: 60%
  bucket 306: 70%
  bucket 306: 80%
  bucket 306: 90%
  bucket 306: 100%
  Sorting block of length 50 for bucket 306
  (Using difference cover)
Getting block 307 of 316
  Reserving size (65) for bucket 307
  Calculating Z arrays for bucket 307
  Sorting block time: 00:00:00
Returning block of 51 for bucket 306
  Entering block accumulator loop for bucket 307:
  bucket 307: 10%
  bucket 307: 20%
  bucket 307: 30%
  bucket 307: 40%
  bucket 307: 50%
  bucket 307: 60%
  bucket 307: 70%
  bucket 307: 80%
  bucket 307: 90%
Getting block 308 of 316
  Reserving size (65) for bucket 308
  Calculating Z arrays for bucket 308
  bucket 307: 100%
  Sorting block of length 64 for bucket 307
  (Using difference cover)
  Entering block accumulator loop for bucket 308:
  bucket 308: 10%
  bucket 308: 20%
  bucket 308: 30%
  bucket 308: 40%
  bucket 308: 50%
  Sorting block time: 00:00:00
Returning block of 65 for bucket 307
  bucket 308: 60%
  bucket 308: 70%
  bucket 308: 80%
  bucket 308: 90%
  bucket 308: 100%
  Sorting block of length 56 for bucket 308
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 57 for bucket 308
Getting block 309 of 316
  Reserving size (65) for bucket 309
  Calculating Z arrays for bucket 309
  Entering block accumulator loop for bucket 309:
  bucket 309: 10%
Getting block 310 of 316
  Reserving size (65) for bucket 310
  Calculating Z arrays for bucket 310
  Entering block accumulator loop for bucket 310:
  bucket 309: 20%
  bucket 310: 10%
  bucket 309: 30%
  bucket 310: 20%
  bucket 309: 40%
  bucket 310: 30%
  bucket 309: 50%
  bucket 310: 40%
  bucket 309: 60%
  bucket 310: 50%
  bucket 310: 60%
  bucket 309: 70%
  bucket 310: 70%
  bucket 309: 80%
  bucket 310: 80%
  bucket 309: 90%
  bucket 310: 90%
  bucket 309: 100%
  bucket 310: 100%
  Sorting block of length 10 for bucket 310
  (Using difference cover)
  Sorting block of length 59 for bucket 309
  (Using difference cover)
Getting block 311 of 316
  Reserving size (65) for bucket 311
  Calculating Z arrays for bucket 311
  Entering block accumulator loop for bucket 311:
  bucket 311: 10%
  bucket 311: 20%
  bucket 311: 30%
  bucket 311: 40%
  bucket 311: 50%
  bucket 311: 60%
  bucket 311: 70%
  bucket 311: 80%
  bucket 311: 90%
  Sorting block time: 00:00:00
Returning block of 11 for bucket 310
  bucket 311: 100%
  Sorting block of length 64 for bucket 311
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 60 for bucket 309
  Sorting block time: 00:00:00
Returning block of 65 for bucket 311
Getting block 312 of 316
  Reserving size (65) for bucket 312
  Calculating Z arrays for bucket 312
  Entering block accumulator loop for bucket 312:
  bucket 312: 10%
  bucket 312: 20%
  bucket 312: 30%
  bucket 312: 40%
Getting block 313 of 316
  Reserving size (65) for bucket 313
  Calculating Z arrays for bucket 313
  bucket 312: 50%
  Entering block accumulator loop for bucket 313:
  bucket 312: 60%
  bucket 312: 70%
  bucket 313: 10%
  bucket 312: 80%
  bucket 313: 20%
  bucket 312: 90%
  bucket 312: 100%
  Sorting block of length 64 for bucket 312
  (Using difference cover)
  bucket 313: 30%
  bucket 313: 40%
  bucket 313: 50%
  bucket 313: 60%
  bucket 313: 70%
  bucket 313: 80%
  Sorting block time: 00:00:00
Returning block of 65 for bucket 312
  bucket 313: 90%
  bucket 313: 100%
  Sorting block of length 62 for bucket 313
  (Using difference cover)
Getting block 314 of 316
  Reserving size (65) for bucket 314
  Calculating Z arrays for bucket 314
  Entering block accumulator loop for bucket 314:
  bucket 314: 10%
  bucket 314: 20%
  Sorting block time: 00:00:00
Returning block of 63 for bucket 313
  bucket 314: 30%
  bucket 314: 40%
  bucket 314: 50%
  bucket 314: 60%
  bucket 314: 70%
  bucket 314: 80%
  bucket 314: 90%
Getting block 315 of 316
  Reserving size (65) for bucket 315
  Calculating Z arrays for bucket 315
  bucket 314: 100%
  Sorting block of length 53 for bucket 314
  (Using difference cover)
  Entering block accumulator loop for bucket 315:
  bucket 315: 10%
Getting block 316 of 316
  Reserving size (65) for bucket 316
  Calculating Z arrays for bucket 316
  Entering block accumulator loop for bucket 316:
  bucket 315: 20%
  bucket 316: 10%
  bucket 316: 20%
  bucket 315: 30%
  bucket 316: 30%
  bucket 316: 40%
  bucket 315: 40%
  bucket 316: 50%
  bucket 316: 60%
  bucket 316: 70%
  bucket 315: 50%
  bucket 316: 80%
  Sorting block time: 00:00:00
Returning block of 54 for bucket 314
  bucket 316: 90%
  bucket 315: 60%
  bucket 316: 100%
  Sorting block of length 25 for bucket 316
  (Using difference cover)
  bucket 315: 70%
  bucket 315: 80%
  bucket 315: 90%
  Sorting block time: 00:00:00
Returning block of 26 for bucket 316
  bucket 315: 100%
  Sorting block of length 58 for bucket 315
  (Using difference cover)
  Sorting block time: 00:00:00
Returning block of 59 for bucket 315

Finished index generation for p_cholor_aureo3084 from /users/PDS0325/sachitk26/packages/tart/validation/alignment/outputs/p_cholor_aureo3084/switch_seqs_delta1000-1000

